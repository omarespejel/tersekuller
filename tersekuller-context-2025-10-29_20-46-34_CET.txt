# TERSEKULLER Project Context & Goal

## Goal for the LLM
You are an expert React developer and frontend architect with deep expertise in:
- React hooks and component architecture
- Spaced repetition algorithms for learning
- Framer Motion animations
- LocalStorage persistence
- Vite build tooling
- Bun package manager
- Responsive design and CSS animations
- Canvas confetti effects
- Static site deployment (Render.com)

Your task is to analyze the complete context of this TERSEKULLER flashcard app project. The system features:
- Interactive flashcard component with flip animations
- Spaced repetition algorithm for effective learning
- 30+ Mexican Spanish phrases with translations and context
- Progress tracking with localStorage persistence
- Reward system with confetti and stickers
- Berachain-inspired color palette (honey gold, bear brown, pink accents)
- Responsive design for mobile and desktop
- Vite + React architecture

Please review the project structure, dependencies, source code, and configuration,
then provide specific, actionable advice for improvement. Focus on:
- React best practices and component architecture
- Hook optimization and performance (useCallback, useMemo)
- Spaced repetition algorithm accuracy and efficiency
- Animation performance and user experience
- LocalStorage data persistence and error handling
- Accessibility (a11y) improvements
- Mobile responsiveness and touch interactions
- Code organization and maintainability
- Build optimization and bundle size
- Testing strategies (unit tests, integration tests)
- Progressive Web App (PWA) capabilities
- SEO and meta tags

---

## Directory Structure
.
├── README.md
├── bun.lock
├── generate-context.sh
├── images
│   ├── dobby1.jpeg
│   ├── dobby2.jpeg
│   ├── dobby3.jpeg
│   ├── dobby4.jpeg
│   └── dobby5.jpeg
├── index.html
├── main.py
├── package.json
├── public
│   └── images
│       ├── dobby1.jpeg
│       ├── dobby2.jpeg
│       ├── dobby3.jpeg
│       ├── dobby4.jpeg
│       └── dobby5.jpeg
├── pyproject.toml
├── render.yaml
├── src
│   ├── App.css
│   ├── App.jsx
│   ├── components
│   │   ├── About.css
│   │   ├── About.jsx
│   │   ├── Achievements.jsx
│   │   ├── DailyGoal.jsx
│   │   ├── FlashCard.jsx
│   │   ├── ProgressBar.jsx
│   │   ├── ProgressSummary.jsx
│   │   ├── ReviewSchedule.jsx
│   │   ├── Stats.jsx
│   │   └── StickerReward.jsx
│   ├── data
│   │   └── flashcards.js
│   ├── hooks
│   │   ├── useSound.js
│   │   └── useSpacedRepetition.js
│   └── main.jsx
├── tersekuller-context-2025-10-29_20-46-34_CET.txt
├── uv.lock
└── vite.config.js

8 directories, 37 files

## FILE: README.md
# TERSEKULLER

A flashcard app that teaches Mexican Spanish using spaced repetition. Built for Buse, who needs practical phrases for travel. The app remembers what you know and shows you what you don't.

## What It Does

You see a Spanish phrase. Flip the card to see the English translation. Tell the app if you got it right or wrong. Cards you know well appear less often. Cards you struggle with come back sooner. Your progress saves automatically in your browser.

The app includes 125 flashcards covering street Spanish, essential phrases, food vocabulary, emergency situations, and vegetarian-specific phrases. Each card includes context and examples showing how the phrase is used in real conversations.

## How It Works

The spaced repetition algorithm follows SM-2 principles, inspired by programs like Anki. When you answer correctly, the card waits longer before showing again. When you answer incorrectly, it returns within a day. Cards overdue for review appear first.

Visual feedback tells you immediately if you got the answer right—a green flash for correct, a red shake for wrong. Celebrations happen when you build streaks. Dobby images appear with Mexican encouragement phrases like "¡Órale, qué chingón!" when you get answers right.

## Setup

Install dependencies with Bun:

```bash
bun install
```

Start the development server:

```bash
bun dev
```

Build for production:

```bash
bun build
```

Preview the production build:

```bash
bun preview
```

## Project Structure

The app is organized simply. Components live in `src/components/`. Data lives in `src/data/`. Hooks for business logic live in `src/hooks/`.

- `FlashCard.jsx` - The main card component with flip animation
- `useSpacedRepetition.js` - Handles the spaced repetition algorithm and localStorage persistence
- `flashcards.js` - Contains all 125 phrases with Spanish, English, context, and examples
- `App.jsx` - Orchestrates components and handles answer submissions

Other components track progress: `Stats`, `DailyGoal`, `Achievements`, `ReviewSchedule`, and `ProgressSummary`. Each serves a specific purpose—showing your streak, displaying cards mastered, highlighting achievements unlocked, or visualizing your review schedule.

## Technical Details

The app uses React with Vite for fast development and small bundles. It relies on `framer-motion` for animations, `canvas-confetti` for celebrations, and `react-swipeable` for mobile gestures. Everything runs in the browser—no backend required. Progress saves to localStorage automatically.

The design uses a Berachain-inspired color palette: honey gold, bear brown, and pink accents. Cards use glassmorphism effects with backdrop blur. The interface responds to mobile and desktop screens. Touch targets meet accessibility standards—buttons are at least 44 pixels tall on mobile.

## Deployment

The app deploys as a static site. Render.com configuration exists in `render.yaml`. Push to GitHub and connect the repository to Render. The build process runs `bun build`, which outputs static files to `dist/`. Render serves these files.

## Keyboard Shortcuts

Press Spacebar to flip a card. Press 1 for "Need practice" or 2 for "Got it!" after flipping. On mobile, swipe up to flip, swipe left for wrong, swipe right for correct.

## About the Name

TERSEKULLER combines "Türk" (Turkish) and "skull" (as in studying hard), made cute with bear and honey emojis. It's built specifically for Buse, who is Turkish and learning Spanish for travel.

---

Made for Buse by Omar Espejel

---

## FILE: package.json
{
  "name": "tersekuller",
  "private": true,
  "version": "0.1.0",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "vite build",
    "preview": "vite preview"
  },
  "dependencies": {
    "canvas-confetti": "^1.9.2",
    "framer-motion": "^10.16.4",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-swipeable": "^7.0.2"
  },
  "devDependencies": {
    "@types/react": "^18.2.43",
    "@types/react-dom": "^18.2.17",
    "@vitejs/plugin-react": "^4.2.1",
    "vite": "^5.0.8"
  }
}

---

## FILE: vite.config.js
import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
})




---

## FILE: index.html
<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <link rel="icon" type="image/jpeg" href="/images/dobby1.jpeg" />
    <link rel="apple-touch-icon" href="/images/dobby1.jpeg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>🐻 TERSEKULLER 🍯</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Quicksand:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>




---

## FILE: .gitignore
# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

node_modules
dist
dist-ssr
*.local

# Editor directories and files
.vscode/*
!.vscode/extensions.json
.idea
.DS_Store
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?

# Python (keeping for compatibility)
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
env/
venv/
ENV/
env.bak/
venv.bak/

---

## FILE: render.yaml
services:
  - type: web
    name: tersekuller-buse
    env: static
    buildCommand: bun install && bun run build
    staticPublishPath: ./dist
    domains:
      - buse.espejel.cc
    headers:
      - path: /*
        name: X-Frame-Options
        value: SAMEORIGIN
      - path: /*
        name: X-Content-Type-Options
        value: nosniff
      - path: /static/*
        name: Cache-Control
        value: public, max-age=31536000

---

## FILE: ./generate-context.sh
#!/bin/bash
#
# Description:
# This script generates a comprehensive prompt for an LLM by concatenating key source
# files from the TERSEKULLER project, including React components, hooks, flashcard data,
# styling, and deployment configuration.
#
# Usage:
# ./generate-context.sh
#

# --- Configuration ---

# Get current date for the output filename (ISO 8601 format for best practices)
DATE=$(date '+%Y-%m-%d_%H-%M-%S_%Z')

# Output filename with descriptive name following best practices
OUTPUT_FILE="tersekuller-context-${DATE}.txt"

# --- Script Body ---

# Clean up any previous output file to start fresh
rm -f "$OUTPUT_FILE"

echo "🚀 Starting LLM prompt generation for the TERSEKULLER project..."
echo "------------------------------------------------------------"
echo "Output will be saved to: $OUTPUT_FILE"
echo ""

# 1. Add a Preamble and Goal for the LLM
echo "Adding LLM preamble and goal..."
{
  echo "# TERSEKULLER Project Context & Goal"
  echo ""
  echo "## Goal for the LLM"
  echo "You are an expert React developer and frontend architect with deep expertise in:"
  echo "- React hooks and component architecture"
  echo "- Spaced repetition algorithms for learning"
  echo "- Framer Motion animations"
  echo "- LocalStorage persistence"
  echo "- Vite build tooling"
  echo "- Bun package manager"
  echo "- Responsive design and CSS animations"
  echo "- Canvas confetti effects"
  echo "- Static site deployment (Render.com)"
  echo ""
  echo "Your task is to analyze the complete context of this TERSEKULLER flashcard app project. The system features:"
  echo "- Interactive flashcard component with flip animations"
  echo "- Spaced repetition algorithm for effective learning"
  echo "- 30+ Mexican Spanish phrases with translations and context"
  echo "- Progress tracking with localStorage persistence"
  echo "- Reward system with confetti and stickers"
  echo "- Berachain-inspired color palette (honey gold, bear brown, pink accents)"
  echo "- Responsive design for mobile and desktop"
  echo "- Vite + React architecture"
  echo ""
  echo "Please review the project structure, dependencies, source code, and configuration,"
  echo "then provide specific, actionable advice for improvement. Focus on:"
  echo "- React best practices and component architecture"
  echo "- Hook optimization and performance (useCallback, useMemo)"
  echo "- Spaced repetition algorithm accuracy and efficiency"
  echo "- Animation performance and user experience"
  echo "- LocalStorage data persistence and error handling"
  echo "- Accessibility (a11y) improvements"
  echo "- Mobile responsiveness and touch interactions"
  echo "- Code organization and maintainability"
  echo "- Build optimization and bundle size"
  echo "- Testing strategies (unit tests, integration tests)"
  echo "- Progressive Web App (PWA) capabilities"
  echo "- SEO and meta tags"
  echo ""
  echo "---"
  echo ""
} >> "$OUTPUT_FILE"

# 2. Add the project's directory structure (cleaned up)
echo "Adding cleaned directory structure..."
echo "## Directory Structure" >> "$OUTPUT_FILE"
if command -v tree &> /dev/null; then
    echo "  -> Adding directory structure (tree -L 4)"
    # Exclude common noise from the tree view
    tree -L 4 -I "node_modules|dist|.git|.DS_Store|bun.lockb|*.log" >> "$OUTPUT_FILE"
else
    echo "  -> WARNING: 'tree' command not found. Using find instead."
    echo "NOTE: 'tree' command was not found. Directory listing:" >> "$OUTPUT_FILE"
    find . -maxdepth 3 -not -path '*/node_modules/*' -not -path '*/.git/*' -not -path '*/dist/*' | head -50 >> "$OUTPUT_FILE"
fi
echo "" >> "$OUTPUT_FILE"

# 3. Add Core Project and Configuration Files
echo "Adding core project and configuration files..."
# Core files that provide project context
CORE_FILES=(
  "README.md"
  "package.json"
  "vite.config.js"
  "index.html"
  ".gitignore"
  "render.yaml"
  "$0" # This script itself
)

for file in "${CORE_FILES[@]}"; do
  if [ -f "$file" ]; then
    echo "  -> Adding $file"
    echo "## FILE: $file" >> "$OUTPUT_FILE"
    cat "$file" >> "$OUTPUT_FILE"
    echo "" >> "$OUTPUT_FILE"
    echo "---" >> "$OUTPUT_FILE"
    echo "" >> "$OUTPUT_FILE"
  else
    echo "  -> WARNING: $file not found. Skipping."
  fi
done

# 4. Add all source files from src/
echo "Adding source files from src/..."

# From src/
if [ -d "src" ]; then
  echo "  -> Found src/ directory; adding its files"
  # Find all JS, JSX, CSS files
  find "src" -type f \( -name "*.js" -o -name "*.jsx" -o -name "*.css" -o -name "*.json" \) \
    -not -path "*/node_modules/*" \
    | sort | while read -r src_file; do
      echo "  -> Adding source file: $src_file"
      echo "## FILE: $src_file" >> "$OUTPUT_FILE"
      cat "$src_file" >> "$OUTPUT_FILE"
      echo "" >> "$OUTPUT_FILE"
      echo "---" >> "$OUTPUT_FILE"
      echo "" >> "$OUTPUT_FILE"
    done
else
  echo "  -> WARNING: src/ directory not found."
fi

# 5. Add components/ directory files
echo "Adding React components..."
if [ -d "src/components" ]; then
  find "src/components" -type f \( -name "*.js" -o -name "*.jsx" \) \
    | sort | while read -r component_file; do
      echo "  -> Adding component file: $component_file"
      echo "## FILE: $component_file" >> "$OUTPUT_FILE"
      cat "$component_file" >> "$OUTPUT_FILE"
      echo "" >> "$OUTPUT_FILE"
      echo "---" >> "$OUTPUT_FILE"
      echo "" >> "$OUTPUT_FILE"
    done
else
  echo "  -> No src/components directory found. Skipping."
fi

# 6. Add hooks/ directory files
echo "Adding React hooks..."
if [ -d "src/hooks" ]; then
  find "src/hooks" -type f \( -name "*.js" -o -name "*.jsx" \) \
    | sort | while read -r hook_file; do
      echo "  -> Adding hook file: $hook_file"
      echo "## FILE: $hook_file" >> "$OUTPUT_FILE"
      cat "$hook_file" >> "$OUTPUT_FILE"
      echo "" >> "$OUTPUT_FILE"
      echo "---" >> "$OUTPUT_FILE"
      echo "" >> "$OUTPUT_FILE"
    done
else
  echo "  -> No src/hooks directory found. Skipping."
fi

# 7. Add data/ directory files
echo "Adding data files..."
if [ -d "src/data" ]; then
  find "src/data" -type f \( -name "*.js" -o -name "*.json" \) \
    | sort | while read -r data_file; do
      echo "  -> Adding data file: $data_file"
      echo "## FILE: $data_file" >> "$OUTPUT_FILE"
      cat "$data_file" >> "$OUTPUT_FILE"
      echo "" >> "$OUTPUT_FILE"
      echo "---" >> "$OUTPUT_FILE"
      echo "" >> "$OUTPUT_FILE"
    done
else
  echo "  -> No src/data directory found. Skipping."
fi

# 8. Add any public/ directory files if present
echo "Adding public files..."
if [ -d "public" ]; then
  find "public" -type f \( -name "*.html" -o -name "*.css" -o -name "*.js" -o -name "*.json" -o -name "*.svg" -o -name "*.png" -o -name "*.ico" \) \
    | sort | while read -r public_file; do
      echo "  -> Adding public file: $public_file"
      echo "## FILE: $public_file" >> "$OUTPUT_FILE"
      cat "$public_file" >> "$OUTPUT_FILE"
      echo "" >> "$OUTPUT_FILE"
      echo "---" >> "$OUTPUT_FILE"
      echo "" >> "$OUTPUT_FILE"
    done
else
  echo "  -> No public directory found. Skipping."
fi

# 9. Add configuration files (never include .env)
echo "Adding additional configuration files..."

# Never include .env to avoid secret exposure
if [ -f ".env" ]; then
  echo "  -> WARNING: .env detected but will NOT be included to avoid exposing secrets."
fi

CONFIG_FILES=(
  ".env.example"
  ".env.local.example"
  ".prettierrc"
  ".eslintrc"
  ".eslintrc.json"
  ".eslintrc.js"
  "tsconfig.json"
  "jsconfig.json"
)

for config_file in "${CONFIG_FILES[@]}"; do
  if [ -f "$config_file" ]; then
    echo "  -> Adding config file: $config_file"
    echo "## FILE: $config_file" >> "$OUTPUT_FILE"
    cat "$config_file" >> "$OUTPUT_FILE"
    echo "" >> "$OUTPUT_FILE"
    echo "---" >> "$OUTPUT_FILE"
    echo "" >> "$OUTPUT_FILE"
  fi
done

# --- Completion Summary ---

echo ""
echo "-------------------------------------"
echo "✅ Prompt generation complete!"
echo "Generated on: $(date '+%A, %B %d, %Y at %I:%M:%S %p %Z')"
echo ""
echo "This context file now includes:"
echo "  ✓ A clear goal and preamble for the LLM"
echo "  ✓ A cleaned project directory structure"
echo "  ✓ Core project files (README.md, package.json, vite.config.js)"
echo "  ✓ Configuration files (.gitignore, render.yaml, index.html)"
echo "  ✓ This generation script itself"
echo "  ✓ All React source code from src/ (App.jsx, main.jsx)"
echo "  ✓ React components from src/components/ (FlashCard, StickerReward, ProgressBar)"
echo "  ✓ React hooks from src/hooks/ (useSpacedRepetition)"
echo "  ✓ Data files from src/data/ (flashcards.js)"
echo "  ✓ Styling files (App.css)"
echo "  ✓ Public assets (if present)"
echo "  ✓ Additional configuration files"
echo ""
echo "File size: $(du -h "$OUTPUT_FILE" | cut -f1)"
echo "Total lines: $(wc -l < "$OUTPUT_FILE" | xargs)"
echo ""
echo "You can now use the content of '$OUTPUT_FILE' as a context prompt for your LLM."
echo "Perfect for getting comprehensive code reviews, architecture advice, or feature suggestions!"
echo ""
echo "💡 Tip: This is especially useful for:"
echo "   - React component optimization and refactoring"
echo "   - Hook performance improvements (useCallback, useMemo)"
echo "   - Spaced repetition algorithm enhancements"
echo "   - Animation and UX improvements"
echo "   - Accessibility (a11y) enhancements"
echo "   - Mobile responsiveness optimization"
echo "   - Build size and performance optimization"
echo "   - Testing strategy recommendations"
echo "   - PWA implementation suggestions"
echo ""
echo "🎯 Key areas to focus on:"
echo "   - Spaced repetition algorithm accuracy (interval calculation, due date logic)"
echo "   - Component re-render optimization"
echo "   - LocalStorage error handling and data migration"
echo "   - Animation performance (Framer Motion)"
echo "   - Accessibility (keyboard navigation, screen readers)"
echo "   - Mobile touch interactions (swipe gestures)"
echo "   - Bundle size optimization"
echo "   - Progressive Web App features (offline support, installability)"
echo ""



---

## FILE: src/App.css
/* src/App.css - Modern Glassmorphism Design */
:root {
  /* Berachain-inspired palette */
  --honey-primary: #FFA500;
  --honey-gold: #FFD700;
  --honey-amber: #FFC107;
  --honey-gradient: linear-gradient(135deg, #FFD700, #FFA500);
  --bear-brown: #8B4513;
  --bear-dark: #5D4037;
  
  /* Feminine accents */
  --pink-soft: #FFE4E1;
  --pink-accent: #FF69B4;
  --pink-glass: rgba(255, 182, 193, 0.2);
  --lavender: #E6E6FA;
  --lavender-glass: rgba(230, 230, 250, 0.3);
  
  /* Glassmorphism essentials */
  --glass-bg: rgba(255, 255, 255, 0.25);
  --glass-border: rgba(255, 255, 255, 0.18);
  --blur-amount: 16px;
  --shadow-glass: 0 8px 32px 0 rgba(31, 38, 135, 0.15);
  
  /* Background */
  --cream: #FFF8DC;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  background: linear-gradient(135deg, #667eea 0%, #764ba2 50%, #f093fb 100%);
  min-height: 100vh;
  backdrop-filter: blur(10px);
  font-family: 'Quicksand', 'Comic Sans MS', cursive;
  position: relative;
}

body::before {
  content: '';
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: radial-gradient(circle at 20% 50%, rgba(255, 215, 0, 0.1), transparent 50%),
              radial-gradient(circle at 80% 80%, rgba(255, 182, 193, 0.1), transparent 50%);
  pointer-events: none;
  z-index: -1;
}

.app {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  padding: 15px 20px;
  max-width: 600px;
  margin: 0 auto;
}

header {
  text-align: center;
  margin-bottom: 30px;
  background: var(--glass-bg);
  backdrop-filter: blur(var(--blur-amount));
  -webkit-backdrop-filter: blur(var(--blur-amount));
  border: 1px solid var(--glass-border);
  border-radius: 20px;
  padding: 30px;
  box-shadow: var(--shadow-glass);
}

header h1 {
  font-size: 2.5rem;
  color: var(--bear-dark);
  margin-bottom: 10px;
  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);
}

.subtitle {
  font-size: 1.1rem;
  color: var(--bear-brown);
  margin-bottom: 20px;
}

.stats {
  display: flex;
  justify-content: center;
  gap: 20px;
  margin: 20px 0;
  flex-wrap: wrap;
}

.stat-item {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 5px;
  padding: 10px 15px;
  background: var(--glass-bg);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  border: 1px solid var(--glass-border);
  border-radius: 15px;
  box-shadow: var(--shadow-glass);
  min-width: 80px;
  position: relative;
  cursor: help; /* Shows question mark cursor */
}

.stat-tooltip {
  position: absolute;
  bottom: -35px;
  left: 50%;
  transform: translateX(-50%);
  background: rgba(93, 78, 55, 0.95);
  color: white;
  padding: 5px 10px;
  border-radius: 8px;
  font-size: 0.75rem;
  white-space: nowrap;
  opacity: 0;
  transition: opacity 0.3s;
  pointer-events: none;
  z-index: 10;
  max-width: 200px;
  text-align: center;
}

.stat-item:hover .stat-tooltip {
  opacity: 1;
}

.stat-icon {
  font-size: 1.5rem;
}

.stat-label {
  font-size: 0.85rem;
  color: var(--bear-brown);
  font-weight: 500;
}

.stat-value {
  font-size: 1.2rem;
  font-weight: 700;
  color: var(--bear-dark);
}

.review-schedule {
  display: flex;
  justify-content: center;
  gap: 12px;
  margin: 15px 0;
  flex-wrap: wrap;
  font-size: 0.9rem;
}

.schedule-item {
  display: flex;
  align-items: center;
  gap: 5px;
  padding: 8px 14px;
  border-radius: 20px;
  background: var(--glass-bg);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  border: 1px solid var(--glass-border);
  box-shadow: var(--shadow-glass);
  font-weight: 500;
  transition: transform 0.2s;
}

.schedule-item:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
}

.schedule-icon {
  font-size: 1.1rem;
}

.schedule-count {
  font-weight: 700;
  font-size: 1.1rem;
}

.schedule-label {
  font-size: 0.85rem;
  color: #666;
}

/* Specific colors for each schedule type */
.schedule-item.overdue {
  background: linear-gradient(135deg, #ffcccc, #ff9999);
  color: #cc0000;
}

.schedule-item.today {
  background: linear-gradient(135deg, #fff4cc, #ffd700);
  color: var(--bear-dark);
}

.schedule-item.tomorrow {
  background: linear-gradient(135deg, #cce5ff, #99ccff);
  color: #0066cc;
}

.schedule-item.week {
  background: linear-gradient(135deg, #e6ccff, #cc99ff);
  color: #6600cc;
}

/* Explanation section */
.schedule-explanation {
  margin-top: 15px;
  width: 100%;
  max-width: 500px;
  margin-left: auto;
  margin-right: auto;
}

.explanation-details {
  background: var(--glass-bg);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  border: 1px solid var(--glass-border);
  border-radius: 15px;
  padding: 10px;
  box-shadow: var(--shadow-glass);
}

.explanation-details summary {
  cursor: pointer;
  font-weight: 600;
  color: var(--bear-brown);
  padding: 5px;
  list-style-type: none;
  text-align: center;
}

.explanation-details summary::-webkit-details-marker {
  display: none;
}

.explanation-details[open] summary {
  margin-bottom: 10px;
  border-bottom: 2px solid var(--honey-gold);
  padding-bottom: 10px;
}

.explanation-content {
  padding: 10px;
}

.explanation-item {
  margin: 12px 0;
  padding: 10px;
  background: linear-gradient(135deg, var(--cream), white);
  border-radius: 10px;
  font-size: 0.9rem;
  line-height: 1.4;
}

.explanation-item strong {
  color: var(--bear-dark);
  display: block;
  margin-bottom: 4px;
}

/* Progress Summary Component */
.progress-summary {
  margin: 20px 0;
  padding: 20px;
  background: var(--glass-bg);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  border: 1px solid var(--glass-border);
  border-radius: 15px;
  box-shadow: var(--shadow-glass);
}

.progress-summary h3 {
  color: var(--bear-dark);
  margin-bottom: 15px;
  text-align: center;
  font-size: 1.2rem;
}

.journey-stages {
  display: flex;
  gap: 5px;
  margin-bottom: 15px;
  height: 40px;
  border-radius: 10px;
  overflow: hidden;
}

.stage {
  position: relative;
  flex: 1;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.stage-bar {
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: width 0.3s ease;
  position: relative;
}

.stage-bar span {
  color: white;
  font-weight: 700;
  font-size: 0.9rem;
  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.3);
  z-index: 1;
}

.stage.new .stage-bar {
  background: linear-gradient(135deg, #e0e0e0, #b0b0b0);
}

.stage.learning .stage-bar {
  background: linear-gradient(135deg, var(--honey-gold), var(--honey-amber));
}

.stage.mastered .stage-bar {
  background: linear-gradient(135deg, #90ee90, #32cd32);
}

.stage label {
  margin-top: 5px;
  font-size: 0.8rem;
  color: var(--bear-brown);
  font-weight: 600;
}

.journey-explanation {
  display: flex;
  justify-content: space-around;
  flex-wrap: wrap;
  gap: 10px;
  font-size: 0.85rem;
  color: var(--bear-dark);
}

.journey-explanation p {
  margin: 0;
  padding: 5px 10px;
  background: rgba(255, 255, 255, 0.8);
  border-radius: 8px;
}

.journey-explanation strong {
  color: var(--bear-brown);
}

.progress {
  margin-top: 20px;
}

.progress span {
  display: block;
  margin-bottom: 8px;
  color: var(--bear-dark);
  font-weight: 500;
}

.progress-bar {
  width: 100%;
  height: 20px;
  background-color: var(--lavender);
  border-radius: 10px;
  overflow: hidden;
  box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.1);
}

.progress-fill {
  height: 100%;
  background: linear-gradient(90deg, var(--honey-gold) 0%, var(--honey-amber) 100%);
  border-radius: 10px;
  transition: width 0.3s ease;
  box-shadow: 0 2px 4px rgba(255, 215, 0, 0.3);
}

main {
  flex: 1;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  position: relative;
}

/* Card Container & 3D Setup - Glassmorphism */
.card-container {
  perspective: 1000px;
  width: 100%;
  max-width: 450px;
  margin: 20px auto;
  height: 550px;
  padding: 0 10px;
}

.card {
  position: relative;
  width: 100%;
  height: 100%;
  transform-style: preserve-3d;
  transition: transform 0.8s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

/* Critical for rotation to work! */
.card.flipped {
  transform: rotateY(180deg);
}

.card-front,
.card-back {
  position: absolute;
  width: 100%;
  height: 100%;
  backface-visibility: hidden;
  background: var(--glass-bg);
  backdrop-filter: blur(var(--blur-amount));
  -webkit-backdrop-filter: blur(var(--blur-amount));
  border: 1px solid var(--glass-border);
  box-shadow: var(--shadow-glass);
  border-radius: 20px;
  padding: 30px 25px;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  overflow-y: auto;
  transition: background-color 0.3s ease, box-shadow 0.3s ease;
}

/* Visual feedback for answers */
.card.answer-correct .card-back {
  background: linear-gradient(135deg, rgba(76, 175, 80, 0.2), var(--glass-bg));
  box-shadow: 0 0 30px rgba(76, 175, 80, 0.4), var(--shadow-glass);
  animation: correctPulse 0.6s ease-out;
}

.card.answer-wrong .card-back {
  background: linear-gradient(135deg, rgba(244, 67, 54, 0.2), var(--glass-bg));
  box-shadow: 0 0 30px rgba(244, 67, 54, 0.4), var(--shadow-glass);
  animation: wrongPulse 0.6s ease-out;
}

@keyframes correctPulse {
  0% { transform: scale(1); }
  50% { transform: scale(1.02); }
  100% { transform: scale(1); }
}

@keyframes wrongPulse {
  0% { transform: scale(1); }
  25% { transform: translateX(-5px) scale(0.98); }
  75% { transform: translateX(5px) scale(0.98); }
  100% { transform: translateX(0) scale(1); }
}

.card-front {
  color: var(--bear-dark);
}

.card-back {
  transform: rotateY(180deg);
}

/* Category badge */
.category-badge {
  position: absolute;
  top: 20px;
  right: 20px;
  padding: 8px 16px;
  border-radius: 20px;
  color: white;
  font-weight: 600;
  font-size: 0.85rem;
  text-transform: uppercase;
  letter-spacing: 1px;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
}

.spanish,
.spanish-text {
  font-size: 2.5rem;
  font-weight: 700;
  margin: 40px 0;
  text-align: center;
  line-height: 1.3;
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

.english,
.english-text {
  font-size: 1.8rem;
  font-weight: 600;
  margin-bottom: 15px;
  text-align: center;
  color: var(--bear-dark);
}

.context,
.context-text {
  font-size: 1rem;
  color: var(--bear-brown);
  text-align: center;
  margin-bottom: 20px;
  font-style: italic;
  line-height: 1.6;
}

/* Examples section */
.examples-section {
  width: 100%;
  margin: 20px 0;
  max-height: 300px;
  overflow-y: auto;
}

.examples-toggle {
  background: linear-gradient(145deg, rgba(255, 215, 0, 0.3), rgba(255, 193, 7, 0.3));
  backdrop-filter: blur(10px);
  border: 2px solid var(--honey-gold);
  padding: 12px 25px;
  border-radius: 25px;
  cursor: pointer;
  font-weight: 700;
  color: var(--bear-dark);
  transition: all 0.3s ease;
  width: 100%;
  margin-bottom: 15px;
  font-size: 1rem;
}

.examples-toggle:hover {
  background: linear-gradient(145deg, rgba(255, 215, 0, 0.5), rgba(255, 193, 7, 0.5));
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(255, 215, 0, 0.3);
}

.examples-list {
  display: flex;
  flex-direction: column;
  gap: 12px;
  overflow: visible;
  min-height: 0;
}

.example-item {
  background: linear-gradient(135deg, rgba(255, 255, 255, 0.5), rgba(255, 248, 220, 0.4));
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 215, 0, 0.3);
  border-radius: 15px;
  padding: 18px;
  transition: all 0.3s ease;
}

.example-item:hover {
  background: linear-gradient(135deg, rgba(255, 255, 255, 0.7), rgba(255, 248, 220, 0.6));
  transform: translateX(5px);
  box-shadow: 0 4px 12px rgba(255, 215, 0, 0.2);
}

.example-spanish {
  font-size: 1.1rem;
  color: var(--bear-dark);
  font-weight: 600;
  margin-bottom: 8px;
  font-style: italic;
  line-height: 1.4;
}

.example-english {
  font-size: 1rem;
  color: var(--bear-brown);
  opacity: 0.95;
  line-height: 1.4;
  padding-left: 15px;
  border-left: 3px solid var(--honey-gold);
}

.flip-btn,
.glass-btn {
  background: linear-gradient(145deg, rgba(255, 255, 255, 0.9), rgba(255, 255, 255, 0.6));
  backdrop-filter: blur(10px);
  color: var(--bear-dark);
  border: 1px solid var(--glass-border);
  padding: 15px 35px;
  border-radius: 50px;
  font-size: 1rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
  font-family: 'Quicksand', sans-serif;
  box-shadow: 20px 20px 60px rgba(0, 0, 0, 0.1), -20px -20px 60px rgba(255, 255, 255, 0.1);
  display: flex;
  align-items: center;
  gap: 8px;
  position: relative;
  overflow: hidden;
}

.flip-btn::after,
.glass-btn::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 0;
  height: 0;
  border-radius: 50%;
  background: rgba(255, 255, 255, 0.5);
  transform: translate(-50%, -50%);
  transition: width 0.6s, height 0.6s;
}

.flip-btn:active::after,
.glass-btn:active::after {
  width: 300px;
  height: 300px;
}

.flip-btn:hover,
.glass-btn:hover {
  transform: translateY(-2px);
  box-shadow: 25px 25px 70px rgba(0, 0, 0, 0.15), -25px -25px 70px rgba(255, 255, 255, 0.15);
  background: linear-gradient(145deg, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0.8));
}

.flip-btn:active,
.glass-btn:active {
  transform: translateY(0);
}

.btn-icon {
  font-size: 1.2rem;
}

.answer-btns,
.answer-buttons {
  display: flex;
  gap: 15px;
  margin-top: 20px;
  width: 100%;
}

.answer-btns button,
.btn-answer {
  flex: 1;
  padding: 15px 20px;
  border: none;
  border-radius: 20px;
  font-size: 1rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
  font-family: 'Quicksand', sans-serif;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 8px;
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  position: relative;
  overflow: hidden;
}

.answer-btns button::after,
.btn-answer::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 0;
  height: 0;
  border-radius: 50%;
  background: rgba(255, 255, 255, 0.5);
  transform: translate(-50%, -50%);
  transition: width 0.6s, height 0.6s;
}

.answer-btns button:active::after,
.btn-answer:active::after {
  width: 300px;
  height: 300px;
}

.btn-wrong,
.btn-answer.btn-wrong {
  background: linear-gradient(135deg, rgba(255, 204, 203, 0.8), rgba(255, 153, 153, 0.8));
  color: var(--bear-dark);
  border: 1px solid rgba(255, 153, 153, 0.3);
  box-shadow: 0 4px 15px rgba(255, 99, 99, 0.2);
}

.btn-wrong:hover,
.btn-answer.btn-wrong:hover {
  background: linear-gradient(135deg, rgba(255, 153, 153, 0.9), rgba(255, 99, 99, 0.9));
  transform: translateY(-2px);
  box-shadow: 0 6px 20px rgba(255, 99, 99, 0.3);
}

.btn-correct,
.btn-answer.btn-correct {
  background: linear-gradient(135deg, rgba(255, 215, 0, 0.8), rgba(255, 193, 7, 0.8));
  color: var(--bear-dark);
  border: 1px solid rgba(255, 215, 0, 0.3);
  box-shadow: 0 4px 15px rgba(255, 215, 0, 0.3);
}

.btn-correct:hover,
.btn-answer.btn-correct:hover {
  background: linear-gradient(135deg, rgba(255, 215, 0, 0.95), rgba(255, 193, 7, 0.95));
  transform: translateY(-2px);
  box-shadow: 0 6px 20px rgba(255, 215, 0, 0.4);
}

.answer-btns button:active,
.btn-answer:active {
  transform: translateY(0);
}

.key-hint {
  font-size: 0.75rem;
  opacity: 0.7;
  margin-left: 5px;
  font-weight: 400;
}

.keyboard-hint {
  font-size: 0.85rem;
  color: var(--bear-brown);
  text-align: center;
  margin-top: 15px;
  font-style: italic;
  opacity: 0.8;
}

/* Dobby celebration images */
.sticker-reward {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 1000;
  display: flex;
  flex-direction: column;
  align-items: center;
  pointer-events: none;
}

.dobby-image {
  width: 200px;
  height: 200px;
  border-radius: 50%;
  border: 5px solid var(--honey-gold);
  box-shadow: 0 0 30px rgba(255, 215, 0, 0.6);
  object-fit: cover;
  margin-bottom: 15px;
}

.encouragement-text {
  font-size: 1.8rem;
  color: var(--bear-dark);
  font-weight: 700;
  text-shadow: 2px 2px 4px rgba(255, 255, 255, 0.8);
  margin-bottom: 10px;
}

.streak-text {
  display: block;
  font-size: 1.5rem;
  color: var(--bear-dark);
  font-weight: 700;
  text-shadow: 2px 2px 4px rgba(255, 255, 255, 0.8);
}

/* Achievement popup */
.achievement-popup {
  position: fixed;
  top: 20px;
  left: 50%;
  transform: translateX(-50%);
  background: linear-gradient(135deg, var(--honey-gold), var(--honey-amber));
  padding: 15px 25px;
  border-radius: 50px;
  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);
  display: flex;
  align-items: center;
  gap: 15px;
  z-index: 2000;
}

.achievement-icon {
  font-size: 2rem;
}

.achievement-popup strong {
  display: block;
  color: var(--bear-dark);
  font-size: 1.1rem;
}

.achievement-popup p {
  margin: 0;
  font-size: 0.9rem;
  color: var(--bear-dark);
  opacity: 0.9;
}

/* Daily goal */
.daily-goal {
  background: var(--glass-bg);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  border: 1px solid var(--glass-border);
  padding: 15px;
  border-radius: 15px;
  margin: 15px 0;
  box-shadow: var(--shadow-glass);
}

.daily-goal.completed {
  background: linear-gradient(135deg, #fff, var(--pink-soft));
  animation: pulse 2s infinite;
}

@keyframes pulse {
  0%, 100% { transform: scale(1); }
  50% { transform: scale(1.02); }
}

.daily-goal h4 {
  margin: 0 0 10px 0;
  color: var(--bear-dark);
  font-size: 1rem;
}

.goal-progress {
  display: flex;
  align-items: center;
  gap: 10px;
}

.goal-bar {
  flex: 1;
  height: 20px;
  background: #f0f0f0;
  border-radius: 10px;
  overflow: hidden;
}

.goal-fill {
  height: 100%;
  background: linear-gradient(90deg, var(--honey-gold), var(--honey-amber));
  transition: width 0.5s ease;
}

.goal-message {
  margin: 10px 0 0 0;
  color: var(--bear-dark);
  font-weight: 600;
  text-align: center;
}

footer {
  background: linear-gradient(135deg, rgba(255, 255, 255, 0.4), rgba(255, 105, 180, 0.3));
  backdrop-filter: blur(20px);
  -webkit-backdrop-filter: blur(20px);
  border: 3px solid var(--honey-gold);
  border-radius: 30px;
  padding: 35px;
  margin-top: 50px;
  position: relative;
  overflow: hidden;
  animation: glow 2s ease-in-out infinite;
  box-shadow: 0 0 30px rgba(255, 215, 0, 0.4), 0 10px 40px rgba(255, 105, 180, 0.2), var(--shadow-glass);
  text-align: center;
}

@keyframes glow {
  0%, 100% { box-shadow: 0 0 30px rgba(255, 215, 0, 0.4), 0 10px 40px rgba(255, 105, 180, 0.2), var(--shadow-glass); }
  50% { box-shadow: 0 0 50px rgba(255, 215, 0, 0.7), 0 15px 60px rgba(255, 105, 180, 0.5), var(--shadow-glass); }
}

.made-with-love {
  font-size: 0.9rem;
  font-weight: 500;
  color: var(--bear-dark);
  opacity: 0.75;
  text-align: center;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 6px;
  margin-top: 15px;
  animation: heartbeat 2s ease-in-out infinite;
}

@keyframes heartbeat {
  0%, 100% { transform: scale(1); }
  50% { transform: scale(1.03); }
}

.heart-icon {
  display: inline-block;
  color: #ff1744;
  font-size: 1.1rem;
  animation: pulse-heart 1.5s ease-in-out infinite;
  filter: drop-shadow(0 0 5px rgba(255, 23, 68, 0.4));
  opacity: 0.85;
}

@keyframes pulse-heart {
  0% { transform: scale(1) rotate(0deg); }
  25% { transform: scale(1.2) rotate(-5deg); }
  50% { transform: scale(1.1) rotate(5deg); }
  75% { transform: scale(1.2) rotate(-3deg); }
  100% { transform: scale(1) rotate(0deg); }
}

.creator-names {
  font-size: 0.95rem;
  background: linear-gradient(90deg, #ff1744, #ff6b6b, #ffd700, #4ecdc4, #764ba2);
  background-size: 200% auto;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  animation: gradient-shift 3s ease infinite;
  font-weight: 600;
  opacity: 0.9;
}

@keyframes gradient-shift {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}

/* Floating hearts background */
.footer-hearts {
  position: absolute;
  width: 100%;
  height: 100%;
  overflow: hidden;
  top: 0;
  left: 0;
  pointer-events: none;
}

.floating-heart {
  position: absolute;
  color: rgba(255, 105, 180, 0.3);
  animation: float-up 6s linear infinite;
  font-size: 20px;
}

@keyframes float-up {
  0% {
    bottom: -20px;
    opacity: 0;
  }
  10% {
    opacity: 1;
  }
  90% {
    opacity: 1;
  }
  100% {
    bottom: 100%;
    opacity: 0;
    transform: translateX(50px) rotate(360deg);
  }
}

/* Loading skeleton styles */
.loading-skeleton {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 60vh;
  padding: 20px;
}

.skeleton-card {
  width: 100%;
  max-width: 450px;
  height: 550px;
  background: var(--glass-bg);
  backdrop-filter: blur(10px);
  border: 1px solid var(--glass-border);
  border-radius: 20px;
  padding: 40px;
  display: flex;
  flex-direction: column;
  gap: 20px;
  box-shadow: var(--shadow-glass);
}

.skeleton-line {
  background: linear-gradient(90deg, rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0.5), rgba(255, 255, 255, 0.3));
  background-size: 200% 100%;
  border-radius: 10px;
  animation: skeleton-loading 1.5s ease-in-out infinite;
}

.skeleton-title {
  height: 60px;
  width: 70%;
  margin: 20px auto;
}

.skeleton-text {
  height: 20px;
  width: 90%;
  margin: 0 auto;
}

.skeleton-button {
  height: 50px;
  width: 60%;
  margin: 40px auto 0;
  border-radius: 25px;
}

@keyframes skeleton-loading {
  0% { background-position: 200% 0; }
  100% { background-position: -200% 0; }
}

/* Mobile responsive styles for new components */
@media (max-width: 600px) {
  .app {
    padding: 10px 15px;
  }
  
  /* Hide progress summary on mobile to save space */
  .progress-summary {
    display: none;
  }
  
  /* Smaller header */
  header {
    padding: 15px 10px;
    margin-bottom: 15px;
  }
  
  header h1 {
    font-size: 1.8rem;
  }
  
  .subtitle {
    font-size: 0.9rem;
    margin-bottom: 10px;
  }
  
  .card-container {
    max-width: 100%;
    height: 650px !important; /* Much taller for examples - was 500px */
    margin: 15px auto;
    padding: 0 5px;
  }
  
  .card-front,
  .card-back {
    padding: 20px 15px; /* Reduced padding to give more content space */
    border-radius: 18px;
    height: 100%;
    overflow-y: auto; /* Allow scrolling if needed */
    -webkit-overflow-scrolling: touch; /* Smooth scrolling on iOS */
  }
  
  /* Make examples section expandable */
  .examples-section {
    margin: 15px 0;
    max-height: none !important; /* Remove height limit on mobile */
    flex: 1; /* Take available space */
  }
  
  .examples-list {
    max-height: 250px; /* Limit examples height but allow scroll */
    overflow-y: auto;
    -webkit-overflow-scrolling: touch;
  }
  
  /* Smaller text to fit more content */
  .spanish-text {
    font-size: 1.8rem !important; /* Smaller */
    margin: 20px 0 !important;
  }
  
  .english-text {
    font-size: 1.3rem !important; /* Smaller */
    margin-bottom: 10px !important;
  }
  
  .context-text {
    font-size: 0.9rem !important;
    margin-bottom: 15px !important;
  }
  
  .example-item {
    padding: 10px !important; /* Smaller padding */
  }
  
  .example-spanish {
    font-size: 0.95rem !important;
    margin-bottom: 6px !important;
  }
  
  .example-english {
    font-size: 0.85rem !important;
    padding-left: 10px !important;
  }
  
  /* Ensure answer buttons stay at bottom */
  .answer-buttons {
    margin-top: auto; /* Push to bottom */
    padding-top: 10px;
    gap: 8px;
  }
  
  .btn-answer {
    padding: 10px 12px;
    font-size: 0.85rem;
    min-height: 44px;
  }
  
  .flip-btn,
  .glass-btn {
    padding: 12px 25px;
    font-size: 0.9rem;
    min-height: 44px; /* Better touch target */
  }
  
  /* Smaller dobby images on mobile */
  .dobby-image {
    width: 120px !important;
    height: 120px !important;
  }

  .encouragement-text {
    font-size: 1.2rem !important;
  }
  
  .streak-text {
    font-size: 1rem !important;
  }

  .achievement-popup {
    padding: 12px 20px;
    font-size: 0.9rem;
    max-width: 90%;
  }

  .achievement-icon {
    font-size: 1.5rem;
  }

  .daily-goal {
    padding: 12px;
  }
  
  .stats {
    gap: 10px;
  }
  
  .stat-item {
    padding: 8px 12px;
    min-width: 70px;
  }
}

/* Additional fix for very small phones */
@media (max-width: 380px) {
  .card-container {
    height: 600px !important;
  }
  
  .spanish-text {
    font-size: 1.5rem !important;
  }
  
  .english-text {
    font-size: 1.2rem !important;
  }
}

.heart {
  color: var(--pink-accent);
  font-size: 1.2rem;
}

@media (max-width: 600px) {
  .app {
    padding: 15px;
  }

  header h1 {
    font-size: 2rem;
  }

  .spanish {
    font-size: 1.5rem;
  }

  .english {
    font-size: 1.4rem;
  }

  .card-container {
    height: 280px;
  }

  .answer-btns {
    flex-direction: column;
    width: 100%;
  }

  .answer-btns button {
    width: 100%;
  }

  .stats {
    gap: 10px;
  }

  .stat-item {
    min-width: 70px;
    padding: 8px 12px;
  }

  .stat-icon {
    font-size: 1.2rem;
  }

  .stat-value {
    font-size: 1rem;
  }

  .review-schedule {
    gap: 8px;
    font-size: 0.8rem;
  }

  .schedule-item {
    padding: 5px 10px;
    font-size: 0.85rem;
  }

  .schedule-icon {
    font-size: 1rem;
  }

  .schedule-count {
    font-size: 1rem;
  }

  .schedule-label {
    font-size: 0.75rem;
  }

  .schedule-explanation {
    max-width: 100%;
  }

  .explanation-item {
    font-size: 0.85rem;
  }

  .stat-tooltip {
    max-width: 150px;
    font-size: 0.7rem;
    white-space: normal;
    bottom: -45px;
  }

  .progress-summary {
    padding: 15px;
  }

  .journey-stages {
    height: 35px;
  }

  .stage-bar span {
    font-size: 0.8rem;
  }

  .journey-explanation {
    flex-direction: column;
    gap: 5px;
  }

  .journey-explanation p {
    width: 100%;
    text-align: center;
  }
}




---

## FILE: src/App.jsx
import { useState, useEffect } from 'react';
import { useSpacedRepetition } from './hooks/useSpacedRepetition';
import { FlashCard } from './components/FlashCard';
import { StickerReward } from './components/StickerReward';
import { ProgressBar } from './components/ProgressBar';
import { Stats } from './components/Stats';
import { ReviewSchedule } from './components/ReviewSchedule';
import { ProgressSummary } from './components/ProgressSummary';
import { DailyGoal } from './components/DailyGoal';
import { Achievements } from './components/Achievements';
import { About } from './components/About';
import './App.css';

function App() {
  const { cards, updateCard, getNextCard } = useSpacedRepetition();
  const [currentCard, setCurrentCard] = useState(null);
  const [streak, setStreak] = useState(0);
  const [showReward, setShowReward] = useState(false);

  useEffect(() => {
    setCurrentCard(getNextCard());
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []); // Only run once on mount

  const handleAnswer = (cardId, correct) => {
    updateCard(cardId, correct);
    
    if (correct) {
      setStreak(prev => prev + 1);
      setShowReward(true);
      // Longer display time for mobile
      setTimeout(() => setShowReward(false), 2500);
    } else {
      setStreak(0);
      setShowReward(false); // Ensure it's hidden on wrong answer
    }
    
    // Wait longer before showing next card, and ensure it's a different card
    setTimeout(() => {
      // Explicitly exclude the current card to prevent immediate repeats
      const nextCard = getNextCard(cardId);
      setCurrentCard(nextCard);
    }, correct ? 2600 : 1500); // Longer wait if correct to see celebration
  };

  const progress = cards.filter(c => c.difficulty > 0).length;

  if (!currentCard) {
    return (
      <div className="app">
        <div className="loading-skeleton">
          <div className="skeleton-card">
            <div className="skeleton-line skeleton-title"></div>
            <div className="skeleton-line skeleton-text"></div>
            <div className="skeleton-line skeleton-text"></div>
            <div className="skeleton-line skeleton-button"></div>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="app">
      <header>
        <h1>🐻 TERSEKULLER 🍯</h1>
        <p className="subtitle">Preparing Buse for Spanish</p>
        
        <Stats cards={cards} streak={streak} />
        <DailyGoal cards={cards} />
        <ReviewSchedule cards={cards} />
        <ProgressSummary cards={cards} />
        <ProgressBar progress={progress} total={cards.length} />
      </header>

      <main>
        <FlashCard 
          card={currentCard} 
          onAnswer={handleAnswer}
        />
        
        <StickerReward 
          show={showReward} 
          streak={streak}
        />
        
        <Achievements 
          cards={cards} 
          streak={streak}
        />
      </main>

      <footer>
        <div className="footer-hearts">
          {[...Array(5)].map((_, i) => (
            <span 
              key={i}
              className="floating-heart"
              style={{
                left: `${Math.random() * 100}%`,
                animationDelay: `${i * 1.2}s`,
                fontSize: `${Math.random() * 20 + 15}px`
              }}
            >
              ♥
            </span>
          ))}
        </div>
        <About />
        <div className="made-with-love">
          Made with 
          <span className="heart-icon">♥️</span> 
          for 
          <span className="creator-names">Buse</span> 
          by 
          <span className="creator-names">Omar Espejel</span>
        </div>
      </footer>
    </div>
  );
}

export default App;


---

## FILE: src/components/About.css
/* src/components/About.css */

.about-btn {
  background: linear-gradient(135deg, var(--honey-gold), var(--honey-amber));
  color: var(--bear-dark);
  border: none;
  padding: 10px 20px;
  border-radius: 25px;
  cursor: pointer;
  font-weight: bold;
  transition: transform 0.2s;
  margin-top: 20px;
  font-family: 'Quicksand', sans-serif;
}

.about-btn:hover {
  transform: scale(1.05);
}

.about-modal {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.5);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  padding: 20px;
  overflow-y: auto;
}

.about-content {
  background: linear-gradient(135deg, var(--cream) 0%, var(--pink-soft) 100%);
  border-radius: 20px;
  padding: 40px;
  max-width: 800px;
  max-height: 90vh;
  overflow-y: auto;
  position: relative;
  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.2);
}

.close-btn {
  position: absolute;
  top: 20px;
  right: 20px;
  background: none;
  border: none;
  font-size: 24px;
  cursor: pointer;
  color: var(--bear-dark);
  width: 30px;
  height: 30px;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  transition: background 0.2s;
}

.close-btn:hover {
  background: rgba(0, 0, 0, 0.1);
}

.about-content h2 {
  color: var(--bear-dark);
  margin-bottom: 20px;
  text-align: center;
}

.research-section h3,
.forgetting-curve h3,
.sm2-algorithm h3,
.language-learning h3,
.how-tersekuller-works h3,
.research-citations h3 {
  color: var(--bear-brown);
  margin-top: 30px;
  margin-bottom: 15px;
}

.research-section p,
.forgetting-curve p,
.sm2-algorithm p,
.language-learning p {
  line-height: 1.6;
  margin-bottom: 15px;
}

blockquote {
  background: rgba(255, 255, 255, 0.7);
  border-left: 4px solid var(--honey-amber);
  padding: 20px;
  margin: 20px 0;
  border-radius: 10px;
}

blockquote p {
  font-style: italic;
  margin-bottom: 10px;
}

blockquote cite {
  display: block;
  text-align: right;
  font-size: 0.9em;
  color: var(--bear-dark);
}

.highlight {
  background: linear-gradient(180deg, transparent 60%, var(--honey-gold) 60%);
  padding: 2px 4px;
  font-weight: bold;
}

.curve-stats {
  display: flex;
  justify-content: space-around;
  margin: 30px 0;
  flex-wrap: wrap;
}

.stat {
  text-align: center;
  padding: 15px;
  background: white;
  border-radius: 15px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  margin: 10px;
  min-width: 120px;
}

.stat .time {
  display: block;
  font-weight: bold;
  color: var(--bear-brown);
  margin-bottom: 5px;
}

.stat .retention {
  display: block;
  font-size: 2em;
  color: var(--honey-amber);
  font-weight: bold;
}

.stat .label {
  display: block;
  font-size: 0.9em;
  color: #666;
}

.algorithm-steps {
  margin: 20px 0;
}

.step {
  display: flex;
  align-items: start;
  margin: 20px 0;
  background: white;
  padding: 20px;
  border-radius: 15px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.step-number {
  background: var(--honey-amber);
  color: white;
  width: 30px;
  height: 30px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: bold;
  margin-right: 15px;
  flex-shrink: 0;
}

.spanish-text {
  color: var(--bear-brown);
  font-weight: bold;
  font-style: italic;
}

.research-highlights {
  list-style: none;
  padding: 0;
}

.research-highlights li {
  background: white;
  padding: 15px;
  margin: 10px 0;
  border-radius: 10px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.research-highlights cite {
  display: block;
  font-size: 0.85em;
  color: #666;
  margin-top: 5px;
  font-style: normal;
}

.citations {
  list-style: none;
  padding: 0;
  font-size: 0.9em;
}

.citations li {
  padding: 10px 0;
  border-bottom: 1px solid rgba(139, 69, 19, 0.1);
  line-height: 1.5;
}

.fun-fact {
  background: linear-gradient(135deg, var(--pink-soft), var(--lavender));
  padding: 20px;
  border-radius: 15px;
  margin-top: 30px;
}

.fun-fact p {
  margin: 0;
}

@media (max-width: 600px) {
  .about-content {
    padding: 20px;
    max-height: 95vh;
  }

  .curve-stats {
    flex-direction: column;
    align-items: center;
  }

  .stat {
    width: 100%;
    max-width: 200px;
  }

  .step {
    flex-direction: column;
    align-items: center;
    text-align: center;
  }

  .step-number {
    margin-bottom: 10px;
    margin-right: 0;
  }
}


---

## FILE: src/components/About.jsx
import { useState } from 'react';
import './About.css';

export function About() {
  const [isOpen, setIsOpen] = useState(false);

  return (
    <>
      <button 
        onClick={() => setIsOpen(!isOpen)}
        className="about-btn"
      >
        🧠 How it Works
      </button>
      {isOpen && (
        <div className="about-modal" onClick={() => setIsOpen(false)}>
          <div className="about-content" onClick={(e) => e.stopPropagation()}>
            <button 
              className="close-btn" 
              onClick={() => setIsOpen(false)}
            >
              ✕
            </button>
            
            <h2>The Science Behind TERSEKULLER</h2>
            
            <section className="research-section">
              <h3>🎓 Built on 140 Years of Memory Research</h3>
              
              <p>
                TERSEKULLER uses <strong>spaced repetition</strong>, a scientifically-proven 
                method that can increase retention by up to <span className="highlight">74%</span> 
                compared to traditional study methods.
              </p>
              <blockquote>
                <p>
                  "We tend to halve our memory of new knowledge in a matter of days or weeks, 
                  unless we make a conscious effort to review the material."
                </p>
                <cite>
                  — Hermann Ebbinghaus, pioneering psychologist (1885)
                </cite>
              </blockquote>
            </section>

            <section className="forgetting-curve">
              <h3>📉 The Forgetting Curve</h3>
              
              <p>
                In 1885, German psychologist <strong>Hermann Ebbinghaus</strong> discovered that 
                we forget <span className="highlight">50% of new information within an hour</span> 
                and <span className="highlight">70% within 24 hours</span> without review. His 
                research, successfully replicated in 2015, remains the foundation of modern 
                learning science.
              </p>
              <div className="curve-stats">
                <div className="stat">
                  <span className="time">20 min</span>
                  <span className="retention">58%</span>
                  <span className="label">remembered</span>
                </div>
                <div className="stat">
                  <span className="time">1 hour</span>
                  <span className="retention">44%</span>
                  <span className="label">remembered</span>
                </div>
                <div className="stat">
                  <span className="time">1 day</span>
                  <span className="retention">33%</span>
                  <span className="label">remembered</span>
                </div>
                <div className="stat">
                  <span className="time">1 week</span>
                  <span className="retention">25%</span>
                  <span className="label">remembered</span>
                </div>
              </div>
            </section>

            <section className="sm2-algorithm">
              <h3>🚀 The SM-2 Algorithm Revolution</h3>
              
              <p>
                In 1985, Polish researcher <strong>Dr. Piotr Woźniak</strong> created the 
                SuperMemo SM-2 algorithm, transforming Ebbinghaus's insights into a practical 
                learning system. This algorithm, now used by millions worldwide, optimally 
                spaces reviews to maximize retention with minimal effort.
              </p>
              <blockquote>
                <p>
                  "With spaced repetition, information reviewed at key points on the forgetting 
                  curve can reduce the rate of forgetting by up to 200%."
                </p>
                <cite>
                  — Dr. Piotr Woźniak, creator of SuperMemo (1985)
                </cite>
              </blockquote>
            </section>

            <section className="language-learning">
              <h3>🌎 Proven for Language Learning</h3>
              
              <p>
                Recent research (2024-2025) confirms spaced repetition's effectiveness for 
                language acquisition:
              </p>
              <ul className="research-highlights">
                <li>
                  📊 <strong>25% increase</strong> in vocabulary retention compared to 
                  traditional methods
                  <cite>(Li, 2024, Guizhou University)</cite>
                </li>
                <li>
                  🎯 <strong>86-90% retention rate</strong> when reviews occur at optimal 
                  intervals: Day 1, 2, 7, 16, and 35
                  <cite>(Traverse Learning Research, 2023)</cite>
                </li>
                <li>
                  📱 Mobile spaced repetition apps show <strong>consistent efficacy</strong> 
                  across all proficiency levels
                  <cite>(ESL Teaching Study, 2025)</cite>
                </li>
              </ul>
            </section>

            <section className="how-tersekuller-works">
              <h3>✨ How TERSEKULLER Optimizes Your Learning</h3>
              
              <div className="algorithm-steps">
                <div className="step">
                  <span className="step-number">1</span>
                  <p>
                    <strong>Initial Learning:</strong> When you first see a phrase like 
                    {" "}<span className="spanish-text">"¿Qué onda?"</span>, it enters your 
                    short-term memory.
                  </p>
                </div>
                
                <div className="step">
                  <span className="step-number">2</span>
                  <p>
                    <strong>First Review (Day 1):</strong> Reviewing within 24 hours moves 
                    information toward long-term memory, preventing 60% of forgetting.
                  </p>
                </div>
                
                <div className="step">
                  <span className="step-number">3</span>
                  <p>
                    <strong>Expanding Intervals:</strong> Each successful review doubles the 
                    interval (1→2→4→8→16 days), following your brain's natural consolidation 
                    rhythm.
                  </p>
                </div>
                
                <div className="step">
                  <span className="step-number">4</span>
                  <p>
                    <strong>Adaptive Learning:</strong> Miss a card? It resets to Day 1. 
                    Ace it consistently? It spaces out to monthly reviews.
                  </p>
                </div>
              </div>
            </section>

            <section className="research-citations">
              <h3>📚 Research References</h3>
              
              <ul className="citations">
                <li>
                  Ebbinghaus, H. (1885). <em>Über das Gedächtnis</em>. Leipzig: Duncker & Humblot.
                  Successfully replicated by Murre & Dros (2015) in <em>PLOS ONE</em>.
                </li>
                <li>
                  Woźniak, P. (1990). "Optimization of learning." Master's Thesis, University 
                  of Technology in Poznań. The foundation of SuperMemo algorithms.
                </li>
                <li>
                  Li, X. (2024). "Spaced repetition as a basic structural method for ESL 
                  teaching." <em>Portal Linguarum</em>, 44, 45-62.
                </li>
                <li>
                  Karpicke, J. D., & Bauernschmidt, A. (2011). "Spaced retrieval: Absolute 
                  spacing enhances learning." <em>Journal of Experimental Psychology</em>, 37(5), 
                  1250-1257.
                </li>
              </ul>
            </section>

            <div className="about-footer">
              <p className="fun-fact">
                💡 <strong>Fun Fact:</strong> The same principles that help Buse learn 
                {" "}<span className="spanish-text">"¡Pinche turca guapa!"</span> are used by 
                medical students to memorize anatomy and polyglots to master 10+ languages!
              </p>
            </div>
          </div>
        </div>
      )}
    </>
  );
}


---

## FILE: src/components/Achievements.jsx
import { useState, useEffect } from 'react';
import { motion, AnimatePresence } from 'framer-motion';

export function Achievements({ cards, streak }) {
  const [unlockedAchievements, setUnlockedAchievements] = useState(() => {
    try {
      const saved = localStorage.getItem('tersekuller-achievements');
      return saved ? JSON.parse(saved) : [];
    } catch (error) {
      return [];
    }
  });
  
  const [newAchievement, setNewAchievement] = useState(null);
  
  const achievements = [
    { 
      id: 'first', 
      icon: '🌟', 
      title: '¡Primera vez!', 
      desc: 'First correct answer', 
      condition: () => cards.some(c => c.difficulty > 0) 
    },
    { 
      id: 'streak5', 
      icon: '🔥', 
      title: '¡Cinco seguidas!', 
      desc: '5 in a row', 
      condition: () => streak >= 5 
    },
    { 
      id: 'streak10', 
      icon: '💎', 
      title: '¡Diez perfectas!', 
      desc: '10 in a row', 
      condition: () => streak >= 10 
    },
    { 
      id: 'master5', 
      icon: '📚', 
      title: '¡Cinco dominadas!', 
      desc: 'Master 5 cards', 
      condition: () => cards.filter(c => c.difficulty >= 3).length >= 5 
    },
    { 
      id: 'master10', 
      icon: '🎓', 
      title: '¡Diez maestría!', 
      desc: 'Master 10 cards', 
      condition: () => cards.filter(c => c.difficulty >= 3).length >= 10 
    },
    { 
      id: 'halfway', 
      icon: '🌮', 
      title: '¡A la mitad!', 
      desc: '50% mastered', 
      condition: () => cards.filter(c => c.difficulty >= 3).length >= 15 
    },
    { 
      id: 'complete', 
      icon: '🏆', 
      title: '¡Chingona total!', 
      desc: '100% mastered', 
      condition: () => cards.filter(c => c.difficulty >= 3).length === 30 
    }
  ];
  
  useEffect(() => {
    achievements.forEach(achievement => {
      if (achievement.condition() && !unlockedAchievements.includes(achievement.id)) {
        setNewAchievement(achievement);
        setUnlockedAchievements(prev => {
          const updated = [...prev, achievement.id];
          try {
            localStorage.setItem('tersekuller-achievements', JSON.stringify(updated));
          } catch (error) {
            console.error('Error saving achievements:', error);
          }
          return updated;
        });
        
        // Hide after 3 seconds
        setTimeout(() => setNewAchievement(null), 3000);
      }
    });
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [cards, streak]);
  
  return (
    <AnimatePresence>
      {newAchievement && (
        <motion.div
          initial={{ y: -100, opacity: 0 }}
          animate={{ y: 0, opacity: 1 }}
          exit={{ y: -100, opacity: 0 }}
          className="achievement-popup"
        >
          <span className="achievement-icon">{newAchievement.icon}</span>
          <div>
            <strong>{newAchievement.title}</strong>
            <p>{newAchievement.desc}</p>
          </div>
        </motion.div>
      )}
    </AnimatePresence>
  );
}


---

## FILE: src/components/DailyGoal.jsx
import { useState, useEffect } from 'react';

export function DailyGoal({ cards }) {
  const today = new Date().toDateString();
  const dailyGoal = 10; // Review 10 cards per day
  
  const [dailyProgress, setDailyProgress] = useState(() => {
    try {
      const saved = localStorage.getItem('tersekuller-daily');
      const data = saved ? JSON.parse(saved) : { date: today, count: 0 };
      
      // Reset if new day
      if (data.date !== today) {
        return { date: today, count: 0 };
      }
      return data;
    } catch (error) {
      return { date: today, count: 0 };
    }
  });
  
  const todayReviewed = cards.filter(c => {
    if (!c.lastSeen) return false;
    const reviewDate = new Date(c.lastSeen).toDateString();
    return reviewDate === today;
  }).length;
  
  useEffect(() => {
    const newData = { date: today, count: todayReviewed };
    setDailyProgress(newData);
    try {
      localStorage.setItem('tersekuller-daily', JSON.stringify(newData));
    } catch (error) {
      console.error('Error saving daily progress:', error);
    }
  }, [todayReviewed, today]);
  
  const percentage = Math.min((todayReviewed / dailyGoal) * 100, 100);
  const completed = todayReviewed >= dailyGoal;
  
  return (
    <div className={`daily-goal ${completed ? 'completed' : ''}`}>
      <h4>Today's Goal {completed && '✨'}</h4>
      <div className="goal-progress">
        <div className="goal-bar">
          <div 
            className="goal-fill" 
            style={{ width: `${percentage}%` }}
          />
        </div>
        <span>{todayReviewed}/{dailyGoal}</span>
      </div>
      {completed && (
        <p className="goal-message">¡Meta cumplida! Goal achieved!</p>
      )}
    </div>
  );
}


---

## FILE: src/components/FlashCard.jsx
import { useState, useEffect, useCallback } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { useSwipeable } from 'react-swipeable';

export function FlashCard({ card, onAnswer }) {
  const [flipped, setFlipped] = useState(false);
  const [answered, setAnswered] = useState(false);
  const [showExamples, setShowExamples] = useState(true); // Show by default!
  const [answerFeedback, setAnswerFeedback] = useState(null); // 'correct' or 'wrong'

  const categoryColors = {
    street: 'linear-gradient(135deg, #FF6B6B, #FF8E53)',
    essential: 'linear-gradient(135deg, #4ECDC4, #44A08D)',
    profanity: 'linear-gradient(135deg, #F093FB, #F5576C)',
    daily: 'linear-gradient(135deg, #FA709A, #FEE140)',
    survival: 'linear-gradient(135deg, #667eea, #764ba2)',
    food: 'linear-gradient(135deg, #fa709a, #fee140)',
    emergency: 'linear-gradient(135deg, #ff6b6b, #ee5a6f)',
    transport: 'linear-gradient(135deg, #4facfe, #00f2fe)',
    social: 'linear-gradient(135deg, #43e97b, #38f9d7)',
    'vegetarian-essential': 'linear-gradient(135deg, #51cf66, #40c057)',
    'vegetarian-warning': 'linear-gradient(135deg, #ffd43b, #fcc419)',
    'vegetarian-foods': 'linear-gradient(135deg, #66d9e8, #3bc9db)',
    'vegetarian-mexican': 'linear-gradient(135deg, #ff922b, #fd7e14)',
    'vegetarian-emergency': 'linear-gradient(135deg, #ff6b6b, #ee5a6f)',
    'vegetarian-positive': 'linear-gradient(135deg, #51cf66, #40c057)'
  };

  const handleAnswer = useCallback((correct) => {
    setAnswered(true);
    setAnswerFeedback(correct ? 'correct' : 'wrong');
    onAnswer(card.id, correct);
    
    // Reset feedback after animation
    setTimeout(() => {
      setAnswerFeedback(null);
    }, 800);
    
    setTimeout(() => {
      setFlipped(false);
      setAnswered(false);
      setShowExamples(true); // Reset to show examples for next card
      setAnswerFeedback(null);
    }, 1500);
  }, [card.id, onAnswer]);

  // Keyboard navigation
  useEffect(() => {
    const handleKeyPress = (e) => {
      // Spacebar to flip card
      if (e.key === ' ' && !flipped) {
        e.preventDefault();
        setFlipped(true);
      }
      // Number keys to answer (only when flipped)
      if (flipped && !answered) {
        if (e.key === '1') {
          e.preventDefault();
          handleAnswer(false);
        }
        if (e.key === '2') {
          e.preventDefault();
          handleAnswer(true);
        }
      }
    };

    window.addEventListener('keydown', handleKeyPress);
    return () => window.removeEventListener('keydown', handleKeyPress);
  }, [flipped, answered, handleAnswer]);

  const category = card.category || 'street';
  
  // Reset examples visibility when card changes
  useEffect(() => {
    setShowExamples(true);
    setFlipped(false);
    setAnswered(false);
    setAnswerFeedback(null);
  }, [card.id]);

  const swipeHandlers = useSwipeable({
    onSwipedUp: () => {
      if (!flipped) {
        setFlipped(true);
      }
    },
    onSwipedLeft: () => {
      if (flipped && !answered) {
        handleAnswer(false);
      }
    },
    onSwipedRight: () => {
      if (flipped && !answered) {
        handleAnswer(true);
      }
    },
    trackMouse: true,
    preventScrollOnSwipe: true
  });

  return (
    <motion.div 
      className="card-container"
      whileHover={{ scale: 1.02 }}
      transition={{ type: "spring", stiffness: 300 }}
      {...swipeHandlers}
    >
      <div className={`card ${flipped ? 'flipped' : ''} ${answerFeedback ? `answer-${answerFeedback}` : ''}`}>
        {/* Front of card */}
        <div className="card-front">
          {card.category && (
            <div 
              className="category-badge"
              style={{ background: categoryColors[category] || categoryColors.street }}
            >
              {category}
            </div>
          )}
          
          <h2 className="spanish-text">{card.spanish}</h2>
          
          <div className="card-actions">
            <button 
              onClick={() => setFlipped(true)}
              className="flip-btn glass-btn"
            >
              <span className="btn-icon">🔄</span>
              Flip to English
            </button>
          </div>
        </div>
        
        {/* Back of card */}
        <div className="card-back">
          <h3 className="english-text">{card.english}</h3>
          <p className="context-text">{card.context}</p>
          
          {/* Examples section */}
          {card.examples && Array.isArray(card.examples) && card.examples.length > 0 && (
            <div className="examples-section">
              <button 
                onClick={() => setShowExamples(!showExamples)}
                className="examples-toggle"
                type="button"
              >
                {showExamples ? '📚 Hide' : '📖 Show'} Examples ({card.examples.length})
              </button>
              
              {showExamples && (
                <motion.div
                  initial={{ opacity: 0, height: 0 }}
                  animate={{ opacity: 1, height: 'auto' }}
                  exit={{ opacity: 0, height: 0 }}
                  transition={{ duration: 0.3 }}
                  className="examples-list"
                >
                  {card.examples.map((ex, idx) => (
                    <div key={`example-${idx}`} className="example-item">
                      <p className="example-spanish">{ex.es}</p>
                      <p className="example-english">{ex.en}</p>
                    </div>
                  ))}
                </motion.div>
              )}
            </div>
          )}
          
          {/* Answer buttons */}
          {!answered && (
            <div className="answer-buttons">
              <button 
                onClick={() => handleAnswer(false)}
                className="btn-answer btn-wrong"
                aria-label="Need practice - Press 1"
              >
                <span>😔</span>
                Need practice
              </button>
              <button 
                onClick={() => handleAnswer(true)}
                className="btn-answer btn-correct"
                aria-label="Got it - Press 2"
              >
                <span>💪</span>
                Got it!
              </button>
            </div>
          )}
          {flipped && !answered && (
            <p className="keyboard-hint">💡 Tip: Press Spacebar to flip, 1/2 to answer</p>
          )}
        </div>
      </div>
    </motion.div>
  );
}




---

## FILE: src/components/ProgressBar.jsx
export function ProgressBar({ progress, total }) {
  const percentage = (progress / total) * 100;

  return (
    <div className="progress">
      <span>{progress}/{total} mastered</span>
      <div className="progress-bar">
        <div 
          className="progress-fill" 
          style={{ width: `${percentage}%` }}
        />
      </div>
    </div>
  );
}




---

## FILE: src/components/ProgressSummary.jsx
export function ProgressSummary({ cards }) {
  const total = cards.length;
  const neverSeen = cards.filter(c => !c.lastSeen).length;
  const learning = cards.filter(c => c.difficulty > 0 && c.difficulty < 3).length;
  const mastered = cards.filter(c => c.difficulty >= 3).length;
  
  return (
    <div className="progress-summary">
      <h3>Your Learning Journey 🗺️</h3>
      <div className="journey-stages">
        <div className="stage new">
          <div className="stage-bar" style={{ width: `${(neverSeen/total) * 100}%` }}>
            {neverSeen > 0 && <span>{neverSeen}</span>}
          </div>
          <label>New</label>
        </div>
        <div className="stage learning">
          <div className="stage-bar" style={{ width: `${(learning/total) * 100}%` }}>
            {learning > 0 && <span>{learning}</span>}
          </div>
          <label>Learning</label>
        </div>
        <div className="stage mastered">
          <div className="stage-bar" style={{ width: `${(mastered/total) * 100}%` }}>
            {mastered > 0 && <span>{mastered}</span>}
          </div>
          <label>Mastered</label>
        </div>
      </div>
      <div className="journey-explanation">
        <p><strong>New:</strong> Haven't seen yet</p>
        <p><strong>Learning:</strong> Reviewed 1-2 times</p>
        <p><strong>Mastered:</strong> Know it well (3+ reviews)</p>
      </div>
    </div>
  );
}


---

## FILE: src/components/ReviewSchedule.jsx
export function ReviewSchedule({ cards }) {
  const now = Date.now();
  const DAY_MS = 24 * 60 * 60 * 1000;
  
  const schedule = {
    overdue: 0,
    today: 0,
    tomorrow: 0,
    thisWeek: 0,
    later: 0
  };
  
  cards.forEach(card => {
    if (!card.lastSeen) {
      // Never seen = due today
      schedule.today++;
      return;
    }
    
    const nextReview = card.lastSeen + (card.interval * DAY_MS);
    const daysUntilDue = Math.floor((nextReview - now) / DAY_MS);
    
    if (daysUntilDue < 0) schedule.overdue++;
    else if (daysUntilDue === 0) schedule.today++;
    else if (daysUntilDue === 1) schedule.tomorrow++;
    else if (daysUntilDue <= 7) schedule.thisWeek++;
    else schedule.later++;
  });
  
  return (
    <>
      <div className="review-schedule">
        {schedule.overdue > 0 && (
          <div className="schedule-item overdue">
            <span className="schedule-icon">🚨</span>
            <span className="schedule-count">{schedule.overdue}</span>
            <span className="schedule-label">overdue</span>
          </div>
        )}
        
        {schedule.today > 0 && (
          <div className="schedule-item today">
            <span className="schedule-icon">📚</span>
            <span className="schedule-count">{schedule.today}</span>
            <span className="schedule-label">due today</span>
          </div>
        )}
        
        {schedule.tomorrow > 0 && (
          <div className="schedule-item tomorrow">
            <span className="schedule-icon">📅</span>
            <span className="schedule-count">{schedule.tomorrow}</span>
            <span className="schedule-label">tomorrow</span>
          </div>
        )}
        
        {schedule.thisWeek > 0 && (
          <div className="schedule-item week">
            <span className="schedule-icon">📆</span>
            <span className="schedule-count">{schedule.thisWeek}</span>
            <span className="schedule-label">this week</span>
          </div>
        )}
      </div>
      
      {/* Explanation section */}
      <div className="schedule-explanation">
        <details className="explanation-details">
          <summary>What do these mean? 🤔</summary>
          <div className="explanation-content">
            <div className="explanation-item">
              <strong>🚨 Overdue:</strong> Cards you should have reviewed earlier. 
              Review these first - they're at risk of being forgotten!
            </div>
            <div className="explanation-item">
              <strong>📚 Due today:</strong> Cards scheduled for review today. 
              These are ready for practice to strengthen your memory.
            </div>
            <div className="explanation-item">
              <strong>📅 Tomorrow:</strong> Cards that will be ready for review tomorrow. 
              Come back then to keep them fresh!
            </div>
            <div className="explanation-item">
              <strong>📆 This week:</strong> Cards scheduled for review in the next 2-7 days. 
              The algorithm spaces these out based on your performance.
            </div>
          </div>
        </details>
      </div>
    </>
  );
}


---

## FILE: src/components/Stats.jsx
export function Stats({ cards, streak }) {
  // Cards reviewed in the last 24 hours
  const today = cards.filter(c => 
    c.lastSeen && Date.now() - c.lastSeen < 86400000
  ).length;
  
  // Cards with difficulty >= 3 (reviewed successfully 3+ times)
  const mastered = cards.filter(c => c.difficulty >= 3).length;
  const total = cards.length;

  return (
    <div className="stats">
      <div className="stat-item">
        <span className="stat-icon">📚</span>
        <span className="stat-label">Today</span>
        <span className="stat-value">{today}</span>
        <span className="stat-tooltip">Cards you've practiced in the last 24 hours</span>
      </div>
      
      <div className="stat-item">
        <span className="stat-icon">🔥</span>
        <span className="stat-label">Streak</span>
        <span className="stat-value">{streak}</span>
        <span className="stat-tooltip">Correct answers in a row</span>
      </div>
      
      <div className="stat-item">
        <span className="stat-icon">⭐</span>
        <span className="stat-label">Mastered</span>
        <span className="stat-value">{mastered}/{total}</span>
        <span className="stat-tooltip">Cards you know well (3+ correct reviews)</span>
      </div>
    </div>
  );
}


---

## FILE: src/components/StickerReward.jsx
import { useEffect, useState, useRef } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import confetti from 'canvas-confetti';

// Dobby images
const dobbyImages = [
  '/images/dobby1.jpeg',
  '/images/dobby2.jpeg',
  '/images/dobby3.jpeg',
  '/images/dobby4.jpeg',
  '/images/dobby5.jpeg'
];

// Always use "¡A huevo!" for all congratulations
const encouragementText = "¡A huevo!";

export function StickerReward({ show, streak }) {
  // Use useRef to track the index and cycle through images
  const imageIndexRef = useRef(0);
  
  const [currentImage, setCurrentImage] = useState(0);
  
  useEffect(() => {
    if (show) {
      // Cycle through images instead of random
      imageIndexRef.current = (imageIndexRef.current + 1) % dobbyImages.length;
      
      const newImageIndex = imageIndexRef.current;
      
      setCurrentImage(newImageIndex);
      
      // Trigger confetti
      confetti({
        particleCount: 100,
        spread: 70,
        origin: { y: 0.6 },
        colors: ['#FFD700', '#FF69B4', '#FFE4E1']
      });
      
      // Preload next image to ensure it's ready
      const nextIndex = (newImageIndex + 1) % dobbyImages.length;
      const img = new Image();
      img.src = dobbyImages[nextIndex];
      
      // Debug logs
      console.log('Showing reward with image:', dobbyImages[newImageIndex]);
      console.log('Image index:', newImageIndex);
    }
  }, [show]);

  // Always render but control visibility with AnimatePresence
  return (
    <AnimatePresence>
      {show && (
        <motion.div
          key="sticker-reward"
          initial={{ scale: 0, rotate: -180, opacity: 0 }}
          animate={{ scale: 1, rotate: 0, opacity: 1 }}
          exit={{ scale: 0, opacity: 0 }}
          transition={{ duration: 0.5 }}
          className="sticker-reward"
        >
          <img 
            src={dobbyImages[currentImage]} 
            alt="Celebration Dobby" 
            className="dobby-image"
            onError={(e) => {
              // Fallback if image fails to load
              e.target.src = dobbyImages[0];
            }}
          />
          <span className="encouragement-text">{encouragementText}</span>
          <span className="streak-text">¡{streak} in a row!</span>
        </motion.div>
      )}
    </AnimatePresence>
  );
}




---

## FILE: src/data/flashcards.js
export const flashcards = [
  {
    id: 1,
    category: "street",
    spanish: "¡Pinche turca guapa!",
    english: "Damn beautiful Turkish girl!",
    context: "Flirty street compliment (very informal)",
    examples: [
      { es: "Mira, ahí viene la pinche turca guapa del café", en: "Look, here comes the damn beautiful Turkish girl from the café" },
      { es: "¿Ya viste a la pinche turca guapa? Está bien chida", en: "Did you see the beautiful Turkish girl? She's really cool" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 2,
    category: "street",
    spanish: "¿Qué onda, cómo andas?",
    english: "What's up, how are you?",
    context: "Casual Mexican greeting",
    examples: [
      { es: "¿Qué onda, cómo andas? ¿Hace mucho que no te veo", en: "What's up, how are you? I haven't seen you in a while" },
      { es: "¡Qué onda! ¿Cómo andas con el trabajo?", en: "What's up! How are things going with work?" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 3,
    category: "street",
    spanish: "¡Qué chingón!",
    english: "That's awesome!",
    context: "Expression of excitement",
    examples: [
      { es: "¡Qué chingón! ¿Ya viste la nueva película?", en: "That's awesome! Did you see the new movie?" },
      { es: "Ganó el partido, ¡qué chingón!", en: "He won the game, that's awesome!" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 4,
    category: "street",
    spanish: "¡No mames, güey!",
    english: "No fucking way, dude!",
    context: "Strong surprise/disbelief (vulgar but common)",
    examples: [
      { es: "¡No mames! ¿En serio ganaste la lotería?", en: "No fucking way! Did you really win the lottery?" },
      { es: "No mames, güey, esa película estuvo padrísima", en: "Holy shit dude, that movie was awesome" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 5,
    category: "street",
    spanish: "Órale",
    english: "Wow / Come on / Let's go",
    context: "Multi-purpose exclamation",
    examples: [
      { es: "¡Órale! ¿Ya viste qué pasó?", en: "Wow! Did you see what happened?" },
      { es: "Órale, vamos al cine", en: "Come on, let's go to the movies" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 6,
    category: "street",
    spanish: "¡Qué chingón!",
    english: "How cool!",
    context: "Expressing approval or excitement",
    examples: [
      { es: "¡Qué chingón que viniste!", en: "How cool that you came!" },
      { es: "Tu coche está bien chingón", en: "Your car is really cool" },
      { es: "¡Qué chingón tu viaje!", en: "How cool your trip is!" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 7,
    category: "street",
    spanish: "Está cabrón",
    english: "That's difficult / tough",
    context: "Saying something is hard",
    examples: [
      { es: "El examen estuvo cabrón", en: "The exam was tough" },
      { es: "Está cabrón encontrar trabajo", en: "It's tough to find work" },
      { es: "Esa situación está bien cabrona", en: "That situation is really tough" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 8,
    category: "street",
    spanish: "¡Qué chingón!",
    english: "How cool!",
    context: "Another way to say something is awesome",
    examples: [
      { es: "¡Qué chingón que vienes a México!", en: "How awesome that you're coming to Mexico!" },
      { es: "Esta fiesta está bien chingona", en: "This party is really awesome" },
      { es: "¡Qué chingón tu nuevo trabajo!", en: "Your new job is awesome!" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 9,
    category: "street",
    spanish: "Ándale",
    english: "Come on / hurry up / okay",
    context: "Encouragement or agreement",
    examples: [
      { es: "Ándale, vamos que llegamos tarde", en: "Come on, let's go we're late" },
      { es: "Ándale, hazlo rápido", en: "Come on, do it quickly" },
      { es: "Ándale pues, está bien", en: "Okay then, that's fine" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 10,
    category: "street",
    spanish: "Chale",
    english: "Oh no / that sucks",
    context: "Expressing disappointment",
    examples: [
      { es: "Chale, se canceló la fiesta", en: "Oh no, the party was cancelled" },
      { es: "¡Chale! Perdí mi celular", en: "That sucks! I lost my phone" },
      { es: "Chale, no tengo dinero", en: "Oh no, I don't have money" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 11,
    category: "street",
    spanish: "Neta",
    english: "Really / seriously",
    context: "Asking for confirmation or emphasis",
    examples: [
      { es: "¿Neta? No me digas", en: "Really? You don't say" },
      { es: "Es neta, te lo juro", en: "It's real, I swear" },
      { es: "¿De neta pasó eso?", en: "Did that really happen?" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 12,
    category: "street",
    spanish: "¡No mames!",
    english: "No way! / Are you kidding?",
    context: "Polite way to express surprise",
    examples: [
      { es: "¡No mames! ¿En serio?", en: "No way! Seriously?" },
      { es: "No mames, qué sorpresa", en: "No way, what a surprise" },
      { es: "¡No mames, está carísimo!", en: "No way, it's super expensive!" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 13,
    category: "street",
    spanish: "Está culero",
    english: "That's bad / ugly",
    context: "Describing something negative",
    examples: [
      { es: "Está culero que llegues tarde", en: "It's bad that you arrive late" },
      { es: "Ese lugar está bien culero", en: "That place is really bad" },
      { es: "Qué culero, se canceló", en: "That's bad, it was cancelled" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 14,
    category: "street",
    spanish: "¡Qué onda, güey!",
    english: "What's up, dude!",
    context: "Very casual greeting among friends",
    examples: [
      { es: "¡Qué onda, güey! ¿Cómo estás?", en: "What's up, dude! How are you?" },
      { es: "Qué onda, güey, hace mucho que no te veo", en: "What's up dude, I haven't seen you in a while" },
      { es: "¡Qué onda! ¿Vamos?", en: "What's up! Are we going?" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 15,
    category: "street",
    spanish: "A huevo",
    english: "Hell yeah / definitely",
    context: "Strong agreement or confirmation",
    examples: [
      { es: "¿Vas a la fiesta? ¡A huevo!", en: "Are you going to the party? Hell yeah!" },
      { es: "A huevo que sí voy", en: "Hell yeah I'm going" },
      { es: "¡A huevo, está chido!", en: "Hell yeah, it's cool!" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 16,
    category: "street",
    spanish: "Naco",
    english: "Tacky / uncultured",
    context: "Describing something in poor taste",
    examples: [
      { es: "Esa ropa está bien naca", en: "Those clothes are really tacky" },
      { es: "Qué naco ese lugar", en: "That place is so tacky" },
      { es: "No seas naco, vístete bien", en: "Don't be tacky, dress well" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 17,
    category: "street",
    spanish: "¡Qué desmadre!",
    english: "What a mess! / Oh my god!",
    context: "Expressing frustration or surprise",
    examples: [
      { es: "¡Qué desmadre! Mira cómo quedó todo", en: "What a mess! Look how everything turned out" },
      { es: "Esa fiesta fue un desmadre total", en: "That party was a total mess" },
      { es: "¡Qué desmadre con el tráfico!", en: "What a mess with the traffic!" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 18,
    category: "street",
    spanish: "Está padrísimo",
    english: "That's awesome!",
    context: "Very positive expression",
    examples: [
      { es: "¡Está padrísimo tu nuevo coche!", en: "Your new car is awesome!" },
      { es: "La película estuvo padrísima", en: "The movie was awesome" },
      { es: "Qué padrísimo está este lugar", en: "This place is so awesome" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 19,
    category: "street",
    spanish: "Me vale madre",
    english: "I don't care",
    context: "Strong expression of indifference",
    examples: [
      { es: "Me vale madre lo que digan", en: "I don't care what they say" },
      { es: "Eso me vale madre completamente", en: "I don't care about that at all" },
      { es: "Me vale madre si viene o no", en: "I don't care if he comes or not" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 20,
    category: "street",
    spanish: "¡Qué show!",
    english: "What a scene! / drama",
    context: "Commenting on a situation",
    examples: [
      { es: "¡Qué show armaron en la fiesta!", en: "What a scene they made at the party!" },
      { es: "Siempre hace un show por todo", en: "He always makes a scene about everything" },
      { es: "¡Qué show! Mira cómo están discutiendo", en: "What a scene! Look how they're arguing" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 21,
    category: "street",
    spanish: "Pásele",
    english: "Come in / go ahead",
    context: "Inviting someone to enter or proceed",
    examples: [
      { es: "Pásele, está abierto", en: "Come in, it's open" },
      { es: "Pásele, por favor, siéntese", en: "Come in, please, have a seat" },
      { es: "Pásele, no se quede en la puerta", en: "Come in, don't stay at the door" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 22,
    category: "street",
    spanish: "Simón",
    english: "Yes / yeah",
    context: "Casual way to say yes",
    examples: [
      { es: "¿Vas a la fiesta? Simón, claro que sí", en: "Are you going to the party? Yeah, of course" },
      { es: "Simón, está bien", en: "Yeah, that's fine" },
      { es: "¿Te parece bien? Simón", en: "Does that seem okay? Yeah" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 23,
    category: "street",
    spanish: "¡No seas mamón!",
    english: "Don't be a jerk!",
    context: "Telling someone not to be annoying",
    examples: [
      { es: "¡No seas mamón y ayúdame!", en: "Don't be a jerk and help me!" },
      { es: "No seas mamón, comparte un poco", en: "Don't be a jerk, share a little" },
      { es: "¡No seas mamón! No hagas eso", en: "Don't be a jerk! Don't do that" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 24,
    category: "street",
    spanish: "Está chido",
    english: "That's cool",
    context: "Approving something",
    examples: [
      { es: "Tu nueva música está bien chida", en: "Your new music is really cool" },
      { es: "¡Está chido que vengas!", en: "It's cool that you're coming!" },
      { es: "Ese lugar está súper chido", en: "That place is super cool" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 25,
    category: "street",
    spanish: "¡Qué pedo!",
    english: "What's up! / What happened?",
    context: "Very casual greeting or question",
    examples: [
      { es: "¡Qué pedo! ¿Cómo estás?", en: "What's up! How are you?" },
      { es: "¡Qué pedo pasó aquí?", en: "What happened here?" },
      { es: "Oye, ¿qué pedo con tu trabajo?", en: "Hey, what's up with your job?" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 26,
    category: "street",
    spanish: "¡Está de pelos!",
    english: "That's excellent! / awesome!",
    context: "Saying something is really good",
    examples: [
      { es: "¡Está de pelos esta comida!", en: "This food is excellent!" },
      { es: "Tu coche está de pelos", en: "Your car is awesome" },
      { es: "¡Qué de pelos está el concierto!", en: "The concert is so excellent!" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 27,
    category: "street",
    spanish: "¡Órale, está chingón!",
    english: "Wow, that's awesome!",
    context: "Combining exclamations for emphasis",
    examples: [
      { es: "¡Órale, está chingón tu nuevo trabajo!", en: "Wow, your new job is awesome!" },
      { es: "Órale, qué chingón está esto", en: "Wow, this is so awesome" },
      { es: "¡Órale! Está súper chingón", en: "Wow! It's super awesome" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 28,
    category: "street",
    spanish: "No me digas",
    english: "No way / you don't say",
    context: "Expressing surprise or disbelief",
    examples: [
      { es: "¿Ganaste la lotería? ¡No me digas!", en: "You won the lottery? No way!" },
      { es: "No me digas que es verdad", en: "You don't say it's true" },
      { es: "¡No me digas! ¿En serio se casó?", en: "No way! Did he really get married?" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 29,
    category: "street",
    spanish: "Está a toda madre",
    english: "That's really great!",
    context: "Very positive expression",
    examples: [
      { es: "¡Está a toda madre tu fiesta!", en: "Your party is really great!" },
      { es: "Este lugar está a toda madre", en: "This place is really great" },
      { es: "¡Qué a toda madre está el concierto!", en: "The concert is so great!" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 30,
    category: "street",
    spanish: "¡Pinche güey!",
    english: "Damn dude!",
    context: "Casual expression, can be playful or frustrated",
    examples: [
      { es: "¡Pinche güey, qué tarde llegaste!", en: "Damn dude, you arrived so late!" },
      { es: "Ese pinche güey siempre tiene problemas", en: "That damn dude always has problems" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  
  // ========== SURVIVAL ESSENTIALS ==========
  {
    id: 31,
    category: "survival",
    spanish: "¿Dónde está el baño?",
    english: "Where is the bathroom?",
    context: "Essential phrase for any Spanish-speaking country",
    examples: [
      { es: "Disculpe, ¿dónde está el baño?", en: "Excuse me, where is the bathroom?" },
      { es: "¿Dónde está el baño más cercano, por favor?", en: "Where is the nearest bathroom, please?" },
      { es: "Necesito ir al baño, ¿dónde está?", en: "I need to go to the bathroom, where is it?" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 32,
    category: "survival",
    spanish: "¿Puedo ver el menú?",
    english: "Can I see the menu?",
    context: "Restaurant essential",
    examples: [
      { es: "¿Puedo ver el menú, por favor?", en: "Can I see the menu, please?" },
      { es: "¿Tienen menú en inglés?", en: "Do you have a menu in English?" },
      { es: "¿Me puede traer el menú?", en: "Can you bring me the menu?" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 33,
    category: "survival",
    spanish: "La cuenta, por favor",
    english: "The bill, please",
    context: "Asking for the check at restaurants",
    examples: [
      { es: "¿Me trae la cuenta, por favor?", en: "Can you bring me the bill, please?" },
      { es: "La cuenta cuando pueda", en: "The bill when you can" },
      { es: "¿Cuánto es la cuenta?", en: "How much is the bill?" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 34,
    category: "survival",
    spanish: "¿Cuánto cuesta?",
    english: "How much does it cost?",
    context: "Shopping essential",
    examples: [
      { es: "¿Cuánto cuesta este?", en: "How much is this one?" },
      { es: "¿Cuánto cuestan los dos?", en: "How much for both?" },
      { es: "¿Me puede decir el precio?", en: "Can you tell me the price?" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 35,
    category: "survival",
    spanish: "Necesito ayuda",
    english: "I need help",
    context: "Essential for emergencies",
    examples: [
      { es: "Disculpe, necesito ayuda", en: "Excuse me, I need help" },
      { es: "Necesito ayuda para encontrar mi hotel", en: "I need help finding my hotel" },
      { es: "¿Me puede ayudar, por favor?", en: "Can you help me, please?" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  
  // ========== REGIONAL VARIATIONS (Mexican Spanish) ==========
  {
    id: 50,
    category: "survival",
    spanish: "¿Tienes cambio?",
    english: "Do you have change?",
    context: "Mexican phrase - asking for change",
    examples: [
      { es: "Oye, ¿tienes cambio de mil?", en: "Hey, do you have change for a thousand?" },
      { es: "¿No tienes cambio más chico?", en: "Don't you have smaller change?" },
      { es: "Necesito cambio para el camión", en: "I need change for the bus" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 51,
    category: "survival",
    spanish: "¿Dónde queda...?",
    english: "Where is...?",
    context: "Common way to ask for locations in Mexico",
    examples: [
      { es: "¿Dónde queda el metro más cercano?", en: "Where is the nearest subway?" },
      { es: "¿Me dices dónde queda?", en: "Can you tell me where it is?" },
      { es: "¿Sabes dónde queda el centro?", en: "Do you know where downtown is?" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 52,
    category: "transport",
    spanish: "Camión",
    english: "Bus",
    context: "Mexican word for bus (also colectivo)",
    examples: [
      { es: "Voy a tomar el camión", en: "I'm going to take the bus" },
      { es: "¿Cuál camión va al centro?", en: "Which bus goes downtown?" },
      { es: "El camión pasa cada diez minutos", en: "The bus comes every ten minutes" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 53,
    category: "street",
    spanish: "Oye",
    english: "Hey / listen",
    context: "Mexican interjection to get attention",
    examples: [
      { es: "Oye, ¿qué haces?", en: "Hey, what are you doing?" },
      { es: "Oye, mira esto", en: "Hey, look at this" },
      { es: "¡Oye, espera un poco!", en: "Hey, wait a bit!" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 54,
    category: "street",
    spanish: "Chambear",
    english: "To work",
    context: "Mexican slang for trabajar",
    examples: [
      { es: "Tengo que chambear mañana", en: "I have to work tomorrow" },
      { es: "¿Dónde chambeas?", en: "Where do you work?" },
      { es: "Chambeo en una oficina", en: "I work in an office" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  
  // ========== PROFANITY (Educational) ==========
  {
    id: 100,
    category: "profanity",
    spanish: "Vete a la chingada",
    english: "Go to hell/Fuck off",
    context: "Strong dismissal (very offensive)",
    examples: [
      { es: "Si no te gusta, vete a la chingada", en: "If you don't like it, go to hell" },
      { es: "¡Vete a la chingada con tus problemas!", en: "Go to hell with your problems!" },
      { es: "Me mandó a la chingada", en: "He told me to fuck off" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 101,
    category: "profanity",
    spanish: "Hijo de la chingada",
    english: "Son of a bitch",
    context: "Strong insult (very offensive)",
    examples: [
      { es: "Ese hijo de la chingada me robó el celular", en: "That son of a bitch stole my phone" },
      { es: "¡Eres un hijo de la chingada!", en: "You're a son of a bitch!" },
      { es: "No seas hijo de la chingada", en: "Don't be a son of a bitch" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  
  // ========== ESSENTIAL VERBS ==========
  {
    id: 200,
    category: "essential",
    spanish: "ser",
    english: "to be (permanent)",
    context: "Most important Spanish verb - permanent states",
    examples: [
      { es: "Ella es doctora", en: "She is a doctor" },
      { es: "Somos amigos desde la infancia", en: "We are friends since childhood" },
      { es: "¿De dónde eres?", en: "Where are you from?" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 201,
    category: "essential",
    spanish: "estar",
    english: "to be (temporary)",
    context: "Second most important verb - temporary states/location",
    examples: [
      { es: "Estoy cansada", en: "I am tired" },
      { es: "¿Dónde estás?", en: "Where are you?" },
      { es: "La comida está lista", en: "The food is ready" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 202,
    category: "essential",
    spanish: "tener",
    english: "to have",
    context: "Essential for expressing possession, age, feelings",
    examples: [
      { es: "Tengo 25 años", en: "I am 25 years old" },
      { es: "¿Tienes hambre?", en: "Are you hungry?" },
      { es: "No tenemos tiempo", en: "We don't have time" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 203,
    category: "essential",
    spanish: "hacer",
    english: "to do/make",
    context: "Essential verb - #25 most common word",
    examples: [
      { es: "¿Qué vas a hacer este fin de semana?", en: "What are you going to do this weekend?" },
      { es: "Voy a hacer tacos para la cena", en: "I'm going to make tacos for dinner" },
      { es: "Hace mucho calor", en: "It's very hot" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 204,
    category: "essential",
    spanish: "ir",
    english: "to go",
    context: "Essential for movement and future tense",
    examples: [
      { es: "Voy al mercado", en: "I'm going to the market" },
      { es: "¿Adónde vas?", en: "Where are you going?" },
      { es: "Vamos a comer", en: "We're going to eat" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  
  // ========== DAILY CONVERSATION ==========
  {
    id: 300,
    category: "daily",
    spanish: "¿Cómo te llamas?",
    english: "What's your name?",
    context: "Basic introduction",
    examples: [
      { es: "Hola, ¿cómo te llamas?", en: "Hi, what's your name?" },
      { es: "¿Cómo te llamas tú?", en: "What's your name?" },
      { es: "Me llamo Buse, ¿y tú?", en: "My name is Buse, and you?" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 301,
    category: "daily",
    spanish: "Mucho gusto",
    english: "Nice to meet you",
    context: "Standard greeting response",
    examples: [
      { es: "Mucho gusto, soy Omar", en: "Nice to meet you, I'm Omar" },
      { es: "Mucho gusto en conocerte", en: "Nice to meet you" },
      { es: "El gusto es mío", en: "The pleasure is mine" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 302,
    category: "daily",
    spanish: "¿Cómo estás?",
    english: "How are you?",
    context: "Standard greeting question",
    examples: [
      { es: "Hola, ¿cómo estás?", en: "Hi, how are you?" },
      { es: "¿Cómo estás hoy?", en: "How are you today?" },
      { es: "Estoy bien, ¿y tú?", en: "I'm fine, and you?" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  
  // ========== FOOD & RESTAURANT ==========
  {
    id: 400,
    category: "food",
    spanish: "¿Qué me recomienda?",
    english: "What do you recommend?",
    context: "Asking for recommendations",
    examples: [
      { es: "¿Qué me recomienda del menú?", en: "What do you recommend from the menu?" },
      { es: "No sé qué pedir, ¿qué recomienda?", en: "I don't know what to order, what do you recommend?" },
      { es: "¿Cuál es el plato más popular?", en: "What's the most popular dish?" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 401,
    category: "food",
    spanish: "Soy vegetariana",
    english: "I'm vegetarian",
    context: "Dietary restriction",
    examples: [
      { es: "Soy vegetariana, ¿tienen opciones?", en: "I'm vegetarian, do you have options?" },
      { es: "No como carne, soy vegetariana", en: "I don't eat meat, I'm vegetarian" },
      { es: "¿Tienen platos vegetarianos?", en: "Do you have vegetarian dishes?" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 402,
    category: "food",
    spanish: "Sin picante, por favor",
    english: "Not spicy, please",
    context: "Requesting mild food",
    examples: [
      { es: "Sin picante, por favor, no aguanto el chile", en: "Not spicy, please, I can't handle chili" },
      { es: "¿Puede hacerlo sin picante?", en: "Can you make it without spice?" },
      { es: "Prefiero sin picante", en: "I prefer without spice" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  
  // ========== EMERGENCY ==========
  {
    id: 500,
    category: "emergency",
    spanish: "Llame a la policía",
    english: "Call the police",
    context: "Emergency situation",
    examples: [
      { es: "¡Llame a la policía rápido!", en: "Call the police quickly!" },
      { es: "Necesito que llame a la policía", en: "I need you to call the police" },
      { es: "Por favor, llame a la policía", en: "Please, call the police" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 501,
    category: "emergency",
    spanish: "¿Dónde está el hospital?",
    english: "Where is the hospital?",
    context: "Medical emergency",
    examples: [
      { es: "¿Dónde está el hospital más cercano?", en: "Where is the nearest hospital?" },
      { es: "Necesito ir al hospital", en: "I need to go to the hospital" },
      { es: "¿Me puede llevar al hospital?", en: "Can you take me to the hospital?" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  
  // ========== TRANSPORT ==========
  {
    id: 600,
    category: "transport",
    spanish: "¿Cómo llego a...?",
    english: "How do I get to...?",
    context: "Asking for directions",
    examples: [
      { es: "¿Cómo llego al centro?", en: "How do I get downtown?" },
      { es: "¿Cómo llego al aeropuerto?", en: "How do I get to the airport?" },
      { es: "Disculpe, ¿cómo llego a Palermo?", en: "Excuse me, how do I get to Palermo?" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 601,
    category: "transport",
    spanish: "¿Cuánto cuesta el pasaje?",
    english: "How much is the ticket?",
    context: "Public transport",
    examples: [
      { es: "¿Cuánto cuesta el pasaje de metro?", en: "How much is the metro ticket?" },
      { es: "¿Cuánto sale el boleto?", en: "How much is the ticket?" },
      { es: "¿Dónde compro el pasaje?", en: "Where do I buy the ticket?" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  
  // ========== SOCIAL ==========
  {
    id: 700,
    category: "social",
    spanish: "¿Quieres tomar algo?",
    english: "Do you want to have a drink?",
    context: "Social invitation",
    examples: [
      { es: "¿Quieres tomar algo esta noche?", en: "Do you want to have a drink tonight?" },
      { es: "Vamos a tomar algo, ¿te parece?", en: "Let's have a drink, what do you think?" },
      { es: "¿Tomamos un café?", en: "Shall we have a coffee?" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 701,
    category: "social",
    spanish: "¿Tienes Instagram?",
    english: "Do you have Instagram?",
    context: "Modern social connection",
    examples: [
      { es: "¿Tienes Instagram? Te sigo", en: "Do you have Instagram? I'll follow you" },
      { es: "Agrégame en Instagram", en: "Add me on Instagram" },
      { es: "Mi Instagram es @buse", en: "My Instagram is @buse" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  
  // Additional essential verbs (continuing from 204)
  { id: 205, category: "essential", spanish: "decir", english: "to say/tell", context: "Essential communication verb", examples: [{ es: "¿Qué dijiste?", en: "What did you say?" }, { es: "Dime la verdad", en: "Tell me the truth" }, { es: "No digas nada", en: "Don't say anything" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 206, category: "essential", spanish: "ver", english: "to see", context: "Essential perception verb", examples: [{ es: "No veo nada", en: "I can't see anything" }, { es: "¿Viste la película?", en: "Did you see the movie?" }, { es: "Nos vemos mañana", en: "See you tomorrow" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 207, category: "essential", spanish: "venir", english: "to come", context: "Essential movement verb", examples: [{ es: "Ven aquí", en: "Come here" }, { es: "¿Vienes a la fiesta?", en: "Are you coming to the party?" }, { es: "Vengo de México", en: "I come from Mexico" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 208, category: "essential", spanish: "poder", english: "to be able to/can", context: "Essential modal verb", examples: [{ es: "¿Puedes ayudarme?", en: "Can you help me?" }, { es: "No puedo ir", en: "I can't go" }, { es: "Puedo hacerlo", en: "I can do it" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 209, category: "essential", spanish: "querer", english: "to want", context: "Essential desire verb", examples: [{ es: "Quiero comer", en: "I want to eat" }, { es: "¿Qué quieres?", en: "What do you want?" }, { es: "Quiero viajar", en: "I want to travel" }], difficulty: 0, lastSeen: null, interval: 1 },
  
  // More survival phrases
  { id: 36, category: "survival", spanish: "Disculpe", english: "Excuse me", context: "Polite way to get attention", examples: [{ es: "Disculpe, ¿sabe dónde está...?", en: "Excuse me, do you know where... is?" }, { es: "Disculpe la molestia", en: "Sorry for the trouble" }, { es: "Disculpe, perdón", en: "Excuse me, sorry" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 37, category: "survival", spanish: "No entiendo", english: "I don't understand", context: "Essential when confused", examples: [{ es: "No entiendo, ¿puede repetir?", en: "I don't understand, can you repeat?" }, { es: "Perdón, no entiendo español", en: "Sorry, I don't understand Spanish" }, { es: "No entiendo bien", en: "I don't understand well" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 38, category: "survival", spanish: "Hablo un poco de español", english: "I speak a little Spanish", context: "Setting expectations", examples: [{ es: "Hablo un poco de español, pero no mucho", en: "I speak a little Spanish, but not much" }, { es: "Solo hablo un poco", en: "I only speak a little" }, { es: "Estoy aprendiendo español", en: "I'm learning Spanish" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 39, category: "survival", spanish: "¿Habla inglés?", english: "Do you speak English?", context: "Emergency communication", examples: [{ es: "¿Habla inglés, por favor?", en: "Do you speak English, please?" }, { es: "¿Alguien habla inglés aquí?", en: "Does anyone speak English here?" }, { es: "No hablo español, ¿habla inglés?", en: "I don't speak Spanish, do you speak English?" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 40, category: "survival", spanish: "¿Está incluido el servicio?", english: "Is service included?", context: "Restaurant billing", examples: [{ es: "¿Está incluido el servicio en la cuenta?", en: "Is service included in the bill?" }, { es: "¿Debo dejar propina?", en: "Should I leave a tip?" }, { es: "¿Cuánto es la propina usual?", en: "How much is the usual tip?" }], difficulty: 0, lastSeen: null, interval: 1 },
  
  // More Mexican street slang
  { id: 55, category: "street", spanish: "Lana", english: "Money", context: "Mexican slang for dinero", examples: [{ es: "No tengo lana", en: "I don't have money" }, { es: "¿Tienes lana para el taxi?", en: "Do you have money for the taxi?" }, { es: "Me quedé sin lana", en: "I ran out of money" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 56, category: "street", spanish: "Chavo/Chava", english: "Guy/Girl", context: "Mexican slang for guy/girl", examples: [{ es: "Ese chavo es muy simpático", en: "That guy is very nice" }, { es: "Conocí una chava genial", en: "I met a great girl" }, { es: "Los chavos están en la plaza", en: "The guys are in the square" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 57, category: "street", spanish: "Güey", english: "Dude/Guy", context: "Mexican slang for dude (very common)", examples: [{ es: "¡Oye, güey! ¿Qué haces?", en: "Hey dude! What are you doing?" }, { es: "Eres un güey", en: "You're a dude/idiot (context dependent)" }, { es: "Güey, mira esto", en: "Dude, look at this" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 58, category: "street", spanish: "Está chido", english: "That's cool/awesome", context: "Mexican way to say cool", examples: [{ es: "Esa fiesta estuvo chida", en: "That party was cool" }, { es: "¡Qué chido!", en: "How cool!" }, { es: "Está bien chido", en: "It's really cool" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 59, category: "transport", spanish: "Metro", english: "Subway", context: "Mexican word for subway", examples: [{ es: "Voy en metro", en: "I'm going by subway" }, { es: "¿Dónde está la estación de metro?", en: "Where is the subway station?" }, { es: "El metro es más rápido", en: "The subway is faster" }], difficulty: 0, lastSeen: null, interval: 1 },
  
  // More food phrases
  { id: 403, category: "food", spanish: "Tengo hambre", english: "I'm hungry", context: "Basic need", examples: [{ es: "Tengo mucha hambre", en: "I'm very hungry" }, { es: "¿Tienes hambre?", en: "Are you hungry?" }, { es: "Tengo hambre, vamos a comer", en: "I'm hungry, let's eat" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 404, category: "food", spanish: "Tengo sed", english: "I'm thirsty", context: "Basic need", examples: [{ es: "Tengo mucha sed", en: "I'm very thirsty" }, { es: "¿Tienes sed?", en: "Are you thirsty?" }, { es: "Quiero agua, tengo sed", en: "I want water, I'm thirsty" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 405, category: "food", spanish: "La especialidad de la casa", english: "House specialty", context: "Restaurant recommendation", examples: [{ es: "¿Cuál es la especialidad de la casa?", en: "What's the house specialty?" }, { es: "Quiero probar la especialidad", en: "I want to try the specialty" }, { es: "La especialidad está deliciosa", en: "The specialty is delicious" }], difficulty: 0, lastSeen: null, interval: 1 },
  
  // More daily conversation
  { id: 303, category: "daily", spanish: "Por favor", english: "Please", context: "Essential politeness", examples: [{ es: "Por favor, ayúdame", en: "Please, help me" }, { es: "Dame agua, por favor", en: "Give me water, please" }, { es: "¿Puedes, por favor?", en: "Can you, please?" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 304, category: "daily", spanish: "Gracias", english: "Thank you", context: "Essential gratitude", examples: [{ es: "Muchas gracias", en: "Thank you very much" }, { es: "Gracias por todo", en: "Thanks for everything" }, { es: "De nada", en: "You're welcome" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 305, category: "daily", spanish: "Lo siento", english: "I'm sorry", context: "Apology", examples: [{ es: "Lo siento mucho", en: "I'm very sorry" }, { es: "Lo siento por la tardanza", en: "Sorry for being late" }, { es: "No te preocupes", en: "Don't worry" }], difficulty: 0, lastSeen: null, interval: 1 },
  
  // More emergency
  { id: 502, category: "emergency", spanish: "¡Auxilio!", english: "Help!", context: "Crying for help", examples: [{ es: "¡Auxilio! ¡Necesito ayuda!", en: "Help! I need help!" }, { es: "Gritó auxilio", en: "He screamed for help" }, { es: "¡Auxilio, por favor!", en: "Help, please!" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 503, category: "emergency", spanish: "Me perdí", english: "I'm lost", context: "Navigation emergency", examples: [{ es: "Me perdí, ¿me puede ayudar?", en: "I'm lost, can you help me?" }, { es: "Estoy perdida", en: "I'm lost" }, { es: "No sé dónde estoy", en: "I don't know where I am" }], difficulty: 0, lastSeen: null, interval: 1 },
  
  // More transport
  { id: 602, category: "transport", spanish: "Taxi", english: "Taxi", context: "Transportation", examples: [{ es: "Necesito un taxi", en: "I need a taxi" }, { es: "¿Dónde puedo tomar un taxi?", en: "Where can I get a taxi?" }, { es: "Llame un taxi, por favor", en: "Call a taxi, please" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 603, category: "transport", spanish: "¿A qué hora sale?", english: "What time does it leave?", context: "Schedule question", examples: [{ es: "¿A qué hora sale el próximo bus?", en: "What time does the next bus leave?" }, { es: "¿A qué hora sale el vuelo?", en: "What time does the flight leave?" }, { es: "Necesito saber la hora de salida", en: "I need to know the departure time" }], difficulty: 0, lastSeen: null, interval: 1 },
  
  // More social
  { id: 702, category: "social", spanish: "¿Quieres salir?", english: "Do you want to go out?", context: "Social invitation", examples: [{ es: "¿Quieres salir esta noche?", en: "Do you want to go out tonight?" }, { es: "Vamos a salir, ¿vienes?", en: "We're going out, are you coming?" }, { es: "Salgamos a pasear", en: "Let's go for a walk" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 703, category: "social", spanish: "¿Te parece bien?", english: "Does that seem okay to you?", context: "Asking for approval", examples: [{ es: "¿Te parece bien si vamos a comer?", en: "Is it okay if we go eat?" }, { es: "¿Qué te parece?", en: "What do you think?" }, { es: "A mí me parece bien", en: "It seems fine to me" }], difficulty: 0, lastSeen: null, interval: 1 },
  
  // Additional essential verbs (210-219)
  { id: 210, category: "essential", spanish: "saber", english: "to know (facts)", context: "Essential knowledge verb", examples: [{ es: "¿Sabes dónde está?", en: "Do you know where it is?" }, { es: "No sé nada", en: "I don't know anything" }, { es: "Sé que tienes razón", en: "I know you're right" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 211, category: "essential", spanish: "dar", english: "to give", context: "Essential transfer verb", examples: [{ es: "Dame agua", en: "Give me water" }, { es: "¿Me das tu número?", en: "Can you give me your number?" }, { es: "Le di un regalo", en: "I gave him a gift" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 212, category: "essential", spanish: "hablar", english: "to speak", context: "Communication verb", examples: [{ es: "Hablo español", en: "I speak Spanish" }, { es: "¿Hablas inglés?", en: "Do you speak English?" }, { es: "Vamos a hablar", en: "Let's talk" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 213, category: "essential", spanish: "salir", english: "to go out/leave", context: "Movement verb", examples: [{ es: "Voy a salir", en: "I'm going out" }, { es: "¿Salimos esta noche?", en: "Are we going out tonight?" }, { es: "Salió de la casa", en: "He left the house" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 214, category: "essential", spanish: "llegar", english: "to arrive", context: "Essential movement verb", examples: [{ es: "¿A qué hora llegas?", en: "What time do you arrive?" }, { es: "Llegué tarde", en: "I arrived late" }, { es: "Cuando llegues, avísame", en: "When you arrive, let me know" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 215, category: "essential", spanish: "tomar", english: "to take/drink", context: "Versatile verb", examples: [{ es: "Tomé un taxi", en: "I took a taxi" }, { es: "¿Tomamos algo?", en: "Shall we have a drink?" }, { es: "Toma el libro", en: "Take the book" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 216, category: "essential", spanish: "quedar", english: "to stay/remain/meet", context: "Essential verb with multiple meanings", examples: [{ es: "¿Quedamos a las 8?", en: "Shall we meet at 8?" }, { es: "Me quedé en casa", en: "I stayed home" }, { es: "Quedó poco dinero", en: "Little money remained" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 217, category: "essential", spanish: "pasar", english: "to pass/happen", context: "Common verb", examples: [{ es: "¿Qué pasó?", en: "What happened?" }, { es: "Pasa por aquí", en: "Come through here" }, { es: "Pasé un buen rato", en: "I had a good time" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 218, category: "essential", spanish: "deber", english: "should/must", context: "Modal verb for obligation", examples: [{ es: "Debo irme", en: "I must go" }, { es: "Deberías estudiar", en: "You should study" }, { es: "Debo dinero", en: "I owe money" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 219, category: "essential", spanish: "poner", english: "to put/place", context: "Essential placement verb", examples: [{ es: "Ponlo aquí", en: "Put it here" }, { es: "Me puse contenta", en: "I became happy" }, { es: "¿Dónde pongo esto?", en: "Where do I put this?" }], difficulty: 0, lastSeen: null, interval: 1 },
  
  // More survival phrases (41-44)
  { id: 41, category: "survival", spanish: "Aceptan tarjeta", english: "Do you accept card?", context: "Payment method", examples: [{ es: "¿Aceptan tarjeta de crédito?", en: "Do you accept credit card?" }, { es: "Solo aceptamos efectivo", en: "We only accept cash" }, { es: "¿Aceptan pagos con tarjeta?", en: "Do you accept card payments?" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 42, category: "survival", spanish: "¿Tiene WiFi?", english: "Do you have WiFi?", context: "Modern necessity", examples: [{ es: "¿Tiene WiFi gratis?", en: "Do you have free WiFi?" }, { es: "¿Cuál es la contraseña del WiFi?", en: "What's the WiFi password?" }, { es: "Necesito WiFi", en: "I need WiFi" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 43, category: "survival", spanish: "Perdí mi pasaporte", english: "I lost my passport", context: "Emergency situation", examples: [{ es: "Ayuda, perdí mi pasaporte", en: "Help, I lost my passport" }, { es: "¿Dónde puedo reportar un pasaporte perdido?", en: "Where can I report a lost passport?" }, { es: "No encuentro mi pasaporte", en: "I can't find my passport" }], difficulty: 0, lastSeen: null, interval: 1 },
  
  // More food words (60-61)
  { id: 60, category: "food", spanish: "Aguacate", english: "Avocado", context: "Mexican word for avocado", examples: [{ es: "Quiero aguacate en la ensalada", en: "I want avocado in the salad" }, { es: "¿Hay aguacate?", en: "Is there avocado?" }, { es: "El aguacate está caro", en: "Avocado is expensive" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 61, category: "food", spanish: "Durazno", english: "Peach", context: "Mexican word for peach", examples: [{ es: "Quiero un durazno", en: "I want a peach" }, { es: "Los duraznos están dulces", en: "The peaches are sweet" }, { es: "Durazno con crema", en: "Peach with cream" }], difficulty: 0, lastSeen: null, interval: 1 },
  
  // More food (406-407)
  { id: 406, category: "food", spanish: "Agua", english: "Water", context: "Basic drink", examples: [{ es: "Quiero agua, por favor", en: "I want water, please" }, { es: "Un vaso de agua", en: "A glass of water" }, { es: "Agua sin gas", en: "Still water" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 407, category: "food", spanish: "Pan", english: "Bread", context: "Staple food", examples: [{ es: "Dame pan", en: "Give me bread" }, { es: "¿Quieres pan?", en: "Do you want bread?" }, { es: "Pan integral", en: "Whole wheat bread" }], difficulty: 0, lastSeen: null, interval: 1 },
  
  // More street slang (102-103)
  { id: 102, category: "street", spanish: "Está cañón", english: "That's tough/difficult", context: "Expressing difficulty", examples: [{ es: "El examen estuvo cañón", en: "The exam was tough" }, { es: "Está cañón conseguir trabajo", en: "It's tough to find work" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 103, category: "street", spanish: "Chido", english: "Cool/awesome", context: "Mexican slang for cool", examples: [{ es: "¡Qué chido!", en: "How cool!" }, { es: "Está bien chido", en: "It's really cool" }, { es: "Qué chido coche", en: "What a cool car" }], difficulty: 0, lastSeen: null, interval: 1 },
  
  // More transport (604)
  { id: 604, category: "transport", spanish: "Estación", english: "Station", context: "Transport location", examples: [{ es: "¿Dónde está la estación?", en: "Where is the station?" }, { es: "Voy a la estación", en: "I'm going to the station" }, { es: "Estación de metro", en: "Metro station" }], difficulty: 0, lastSeen: null, interval: 1 },
  
  // More social (704)
  { id: 704, category: "social", spanish: "Encantado/Encantada", english: "Nice to meet you (pleased)", context: "Polite greeting", examples: [{ es: "Encantada de conocerte", en: "Nice to meet you" }, { es: "El gusto es mío", en: "The pleasure is mine" }], difficulty: 0, lastSeen: null, interval: 1 },
  
  // Time expressions (850-852)
  { id: 850, category: "daily", spanish: "¿Qué hora es?", english: "What time is it?", context: "Time inquiry", examples: [{ es: "Disculpe, ¿qué hora es?", en: "Excuse me, what time is it?" }, { es: "¿Me puede decir la hora?", en: "Can you tell me the time?" }, { es: "Son las tres", en: "It's three o'clock" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 851, category: "daily", spanish: "Mañana", english: "Tomorrow", context: "Time reference", examples: [{ es: "Nos vemos mañana", en: "See you tomorrow" }, { es: "Mañana voy al mercado", en: "Tomorrow I'm going to the market" }, { es: "Hasta mañana", en: "See you tomorrow" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 852, category: "daily", spanish: "Hoy", english: "Today", context: "Time reference", examples: [{ es: "Hoy hace buen tiempo", en: "Today the weather is nice" }, { es: "¿Qué haces hoy?", en: "What are you doing today?" }, { es: "Hoy es lunes", en: "Today is Monday" }], difficulty: 0, lastSeen: null, interval: 1 },
  
  // ========== CRITICAL VEGETARIAN PHRASES FOR BUSE ==========
  {
    id: 900,
    category: "vegetarian-essential",
    spanish: "Soy vegetariana",
    english: "I am vegetarian (female)",
    context: "MOST IMPORTANT phrase for Buse - use this everywhere!",
    examples: [
      { es: "Hola, soy vegetariana. ¿Tienen opciones sin carne?", en: "Hi, I'm vegetarian. Do you have options without meat?" },
      { es: "Disculpe, soy vegetariana estricta", en: "Excuse me, I'm a strict vegetarian" },
      { es: "Soy vegetariana, no como ningún tipo de carne", en: "I'm vegetarian, I don't eat any type of meat" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 901,
    category: "vegetarian-essential",
    spanish: "No como carne, ni pollo, ni pescado",
    english: "I don't eat meat, chicken, or fish",
    context: "⚠️ CRITICAL: In Latin America, 'carne' often means only red meat!",
    examples: [
      { es: "No como carne, ni pollo, ni pescado, ni mariscos", en: "I don't eat meat, chicken, fish, or seafood" },
      { es: "Por favor, sin carne, sin pollo, sin pescado", en: "Please, no meat, no chicken, no fish" },
      { es: "¿Esto tiene carne, pollo o pescado?", en: "Does this have meat, chicken, or fish?" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 902,
    category: "vegetarian-essential",
    spanish: "¿Esto tiene carne?",
    english: "Does this have meat?",
    context: "Always ask! Hidden meat is common in Latin America",
    examples: [
      { es: "¿La sopa tiene carne o caldo de pollo?", en: "Does the soup have meat or chicken broth?" },
      { es: "¿Los frijoles tienen tocino o manteca?", en: "Do the beans have bacon or lard?" },
      { es: "¿La ensalada tiene jamón o atún?", en: "Does the salad have ham or tuna?" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 903,
    category: "vegetarian-essential",
    spanish: "Sin carne, por favor",
    english: "Without meat, please",
    context: "Use this when modifying dishes",
    examples: [
      { es: "¿Puedo tener este plato sin carne, por favor?", en: "Can I have this dish without meat, please?" },
      { es: "Una pizza sin jamón, por favor", en: "A pizza without ham, please" },
      { es: "Los tacos sin carne, solo con verduras", en: "The tacos without meat, only with vegetables" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 904,
    category: "vegetarian-essential",
    spanish: "¿Tienen opciones vegetarianas?",
    english: "Do you have vegetarian options?",
    context: "First question to ask at any restaurant",
    examples: [
      { es: "Buenas tardes, ¿tienen opciones vegetarianas en el menú?", en: "Good afternoon, do you have vegetarian options on the menu?" },
      { es: "¿Qué platos vegetarianos me recomienda?", en: "What vegetarian dishes do you recommend?" },
      { es: "¿Cuáles son sus opciones sin carne?", en: "What are your options without meat?" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  
  // ========== HIDDEN MEAT WARNINGS ==========
  {
    id: 910,
    category: "vegetarian-warning",
    spanish: "¿El caldo es de verduras?",
    english: "Is the broth vegetable-based?",
    context: "⚠️ Many soups use chicken/beef broth even if no visible meat",
    examples: [
      { es: "¿La sopa de verduras usa caldo de pollo?", en: "Does the vegetable soup use chicken broth?" },
      { es: "¿Puedo tener la sopa con caldo de verduras solamente?", en: "Can I have the soup with vegetable broth only?" },
      { es: "Sin caldo de carne ni pollo, por favor", en: "No meat or chicken broth, please" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 911,
    category: "vegetarian-warning",
    spanish: "¿Los frijoles tienen manteca?",
    english: "Do the beans have lard?",
    context: "⚠️ Mexican refried beans often contain lard (manteca)",
    examples: [
      { es: "¿Los frijoles refritos son vegetarianos?", en: "Are the refried beans vegetarian?" },
      { es: "¿Usan aceite vegetal o manteca de cerdo?", en: "Do you use vegetable oil or pork lard?" },
      { es: "Frijoles de la olla sin manteca, por favor", en: "Pot beans without lard, please" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  
  // ========== VEGETARIAN FOOD VOCABULARY ==========
  {
    id: 920,
    category: "vegetarian-foods",
    spanish: "verduras",
    english: "vegetables",
    context: "General term for vegetables",
    examples: [
      { es: "Me encantan las verduras asadas", en: "I love roasted vegetables" },
      { es: "¿Qué verduras tienen hoy?", en: "What vegetables do you have today?" },
      { es: "Solo como verduras, frutas y granos", en: "I only eat vegetables, fruits and grains" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 921,
    category: "vegetarian-foods",
    spanish: "ensalada",
    english: "salad",
    context: "Common vegetarian option (but always check for meat!)",
    examples: [
      { es: "Una ensalada grande sin pollo ni atún", en: "A large salad without chicken or tuna" },
      { es: "¿La ensalada César tiene anchoas?", en: "Does the Caesar salad have anchovies?" },
      { es: "Ensalada mixta con aceite y vinagre", en: "Mixed salad with oil and vinegar" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  
  // ========== MEXICAN VEGETARIAN SPECIFIC ==========
  {
    id: 940,
    category: "vegetarian-mexican",
    spanish: "sin carnitas",
    english: "without pork",
    context: "Common hidden meat in Mexican food",
    examples: [
      { es: "Tacos de frijoles sin carnitas", en: "Bean tacos without pork" },
      { es: "¿Los tamales son sin manteca?", en: "Are the tamales without lard?" },
      { es: "Quesadillas de flor de calabaza sin chicharrón", en: "Squash blossom quesadillas without pork rinds" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 941,
    category: "vegetarian-mexican",
    spanish: "nopales",
    english: "cactus paddles",
    context: "Great vegetarian option in Mexico",
    examples: [
      { es: "¿Tienen tacos de nopales?", en: "Do you have cactus tacos?" },
      { es: "Nopales asados con queso", en: "Grilled cactus with cheese" },
      { es: "Ensalada de nopales sin jamón", en: "Cactus salad without ham" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 942,
    category: "vegetarian-mexican",
    spanish: "quesadillas de queso",
    english: "cheese quesadillas",
    context: "Safe vegetarian option in Mexico",
    examples: [
      { es: "Dos quesadillas de queso, por favor", en: "Two cheese quesadillas, please" },
      { es: "¿Las quesadillas son solo de queso?", en: "Are the quesadillas only cheese?" },
      { es: "Quesadillas de queso sin carne", en: "Cheese quesadillas without meat" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 943,
    category: "vegetarian-mexican",
    spanish: "tacos de nopales",
    english: "cactus tacos",
    context: "Traditional Mexican vegetarian dish",
    examples: [
      { es: "Quiero tres tacos de nopales", en: "I want three cactus tacos" },
      { es: "Tacos de nopales con cebolla y cilantro", en: "Cactus tacos with onion and cilantro" },
      { es: "¿Los tacos de nopales tienen queso?", en: "Do the cactus tacos have cheese?" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  
  // ========== EMERGENCY VEGETARIAN PHRASES ==========
  {
    id: 950,
    category: "vegetarian-emergency",
    spanish: "Esto tiene carne, no puedo comerlo",
    english: "This has meat, I can't eat it",
    context: "When they bring you something with meat by mistake",
    examples: [
      { es: "Disculpe, pedí sin carne. Soy vegetariana", en: "Excuse me, I ordered without meat. I'm vegetarian" },
      { es: "Lo siento, pero esto tiene pollo. No como pollo", en: "I'm sorry, but this has chicken. I don't eat chicken" },
      { es: "¿Me puede cambiar este plato? Tiene jamón", en: "Can you change this dish? It has ham" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  
  // ========== POSITIVE VEGETARIAN PHRASES ==========
  {
    id: 960,
    category: "vegetarian-positive",
    spanish: "¡Perfecto! Está delicioso",
    english: "Perfect! It's delicious",
    context: "When they get your vegetarian order right",
    examples: [
      { es: "¡Qué rico! Me encanta este plato vegetariano", en: "How delicious! I love this vegetarian dish" },
      { es: "Gracias por las opciones vegetarianas", en: "Thank you for the vegetarian options" },
      { es: "Este restaurante tiene excelente comida vegetariana", en: "This restaurant has excellent vegetarian food" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  }
];




---

## FILE: src/hooks/useSound.js
export function useSound() {
  const playCorrect = () => {
    try {
      const audio = new Audio('/sounds/correct.mp3');
      audio.volume = 0.5;
      audio.play().catch(() => {
        // Silently fail if sound file doesn't exist
      });
    } catch (error) {
      // Silently fail if audio not available
    }
  };
  
  const playWrong = () => {
    try {
      const audio = new Audio('/sounds/wrong.mp3');
      audio.volume = 0.3;
      audio.play().catch(() => {});
    } catch (error) {
      // Silently fail
    }
  };
  
  const playFlip = () => {
    try {
      const audio = new Audio('/sounds/flip.mp3');
      audio.volume = 0.2;
      audio.play().catch(() => {});
    } catch (error) {
      // Silently fail
    }
  };
  
  return { playCorrect, playWrong, playFlip };
}


---

## FILE: src/hooks/useSpacedRepetition.js
import { useState, useEffect, useCallback } from 'react';
import { flashcards } from '../data/flashcards';

export function useSpacedRepetition() {
  const [cards, setCards] = useState(() => {
    try {
      const saved = localStorage.getItem('tersekuller-cards');
      if (saved) {
        const parsedCards = JSON.parse(saved);
        // Merge saved cards with original flashcards to ensure examples are preserved
        return parsedCards.map(savedCard => {
          const originalCard = flashcards.find(fc => fc.id === savedCard.id);
          if (originalCard) {
            // Preserve saved progress but use original card data (including examples)
            return {
              ...originalCard,
              difficulty: savedCard.difficulty ?? originalCard.difficulty,
              lastSeen: savedCard.lastSeen ?? originalCard.lastSeen,
              interval: savedCard.interval ?? originalCard.interval,
              nextReview: savedCard.nextReview ?? originalCard.nextReview
            };
          }
          return savedCard;
        });
      }
      return flashcards;
    } catch (error) {
      console.error('Error loading saved cards:', error);
      return flashcards;
    }
  });

  useEffect(() => {
    try {
      localStorage.setItem('tersekuller-cards', JSON.stringify(cards));
    } catch (error) {
      console.error('Error saving cards to localStorage:', error);
    }
  }, [cards]);

  const updateCard = useCallback((cardId, correct) => {
    setCards(prev => {
      const updated = prev.map(card => {
        if (card.id === cardId) {
          let newInterval;
          let newDifficulty;
          
          if (correct) {
            // SM-2 inspired intervals for language learning
            // Based on research: 1 day, 2 days, 7 days, 16 days, 35 days, 70 days, 120 days
            const intervals = [1, 2, 7, 16, 35, 70, 120];
            const currentLevel = Math.min(card.difficulty, intervals.length - 1);
            newInterval = intervals[currentLevel];
            newDifficulty = card.difficulty + 1;
          } else {
            // Reset to beginning if wrong
            newInterval = 1;
            newDifficulty = 0;
          }
          
          return {
            ...card,
            difficulty: newDifficulty,
            lastSeen: Date.now(),
            interval: newInterval,
            nextReview: Date.now() + (newInterval * 24 * 60 * 60 * 1000)
          };
        }
        return card;
      });
      
      return updated;
    });
  }, []);

  const getNextCard = useCallback((excludeCardId = null) => {
    const now = Date.now();
    const DAY_MS = 24 * 60 * 60 * 1000;
    
    // Minimum time before showing the same card again (1 minute)
    const MIN_REPEAT_TIME = 60 * 1000;
    
    // Cards that are due for review (excluding recently seen cards and current card)
    const dueCards = cards.filter(card => {
      // Exclude the current card if specified
      if (excludeCardId && card.id === excludeCardId) return false;
      
      if (!card.lastSeen) return true; // Never seen = always due
      
      // Don't show cards that were just seen (within last minute)
      if (now - card.lastSeen < MIN_REPEAT_TIME) return false;
      
      const daysSinceLastSeen = (now - card.lastSeen) / DAY_MS;
      return daysSinceLastSeen >= card.interval;
    });
    
    if (dueCards.length > 0) {
      // Return a random due card instead of always the most overdue
      // This adds variety while still prioritizing due cards
      return dueCards[Math.floor(Math.random() * dueCards.length)];
    }
    
    // No cards due? Get cards not seen in last minute (excluding current card)
    const availableCards = cards.filter(card => {
      if (excludeCardId && card.id === excludeCardId) return false;
      
      if (!card.lastSeen) return true;
      
      // Don't show cards seen in the last minute
      return (now - card.lastSeen) >= MIN_REPEAT_TIME;
    });
    
    if (availableCards.length > 0) {
      return availableCards[Math.floor(Math.random() * availableCards.length)];
    }
    
    // If all cards were seen recently, return a random one (except current)
    const remainingCards = excludeCardId 
      ? cards.filter(c => c.id !== excludeCardId)
      : cards;
    
    if (remainingCards.length > 0) {
      return remainingCards[Math.floor(Math.random() * remainingCards.length)];
    }
    
    // Fallback: return any card
    return cards[0];
  }, [cards]);

  return { cards, updateCard, getNextCard };
}


---

## FILE: src/main.jsx
import React from 'react'
import ReactDOM from 'react-dom/client'
import App from './App.jsx'

ReactDOM.createRoot(document.getElementById('root')).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>,
)




---

## FILE: src/components/About.jsx
import { useState } from 'react';
import './About.css';

export function About() {
  const [isOpen, setIsOpen] = useState(false);

  return (
    <>
      <button 
        onClick={() => setIsOpen(!isOpen)}
        className="about-btn"
      >
        🧠 How it Works
      </button>
      {isOpen && (
        <div className="about-modal" onClick={() => setIsOpen(false)}>
          <div className="about-content" onClick={(e) => e.stopPropagation()}>
            <button 
              className="close-btn" 
              onClick={() => setIsOpen(false)}
            >
              ✕
            </button>
            
            <h2>The Science Behind TERSEKULLER</h2>
            
            <section className="research-section">
              <h3>🎓 Built on 140 Years of Memory Research</h3>
              
              <p>
                TERSEKULLER uses <strong>spaced repetition</strong>, a scientifically-proven 
                method that can increase retention by up to <span className="highlight">74%</span> 
                compared to traditional study methods.
              </p>
              <blockquote>
                <p>
                  "We tend to halve our memory of new knowledge in a matter of days or weeks, 
                  unless we make a conscious effort to review the material."
                </p>
                <cite>
                  — Hermann Ebbinghaus, pioneering psychologist (1885)
                </cite>
              </blockquote>
            </section>

            <section className="forgetting-curve">
              <h3>📉 The Forgetting Curve</h3>
              
              <p>
                In 1885, German psychologist <strong>Hermann Ebbinghaus</strong> discovered that 
                we forget <span className="highlight">50% of new information within an hour</span> 
                and <span className="highlight">70% within 24 hours</span> without review. His 
                research, successfully replicated in 2015, remains the foundation of modern 
                learning science.
              </p>
              <div className="curve-stats">
                <div className="stat">
                  <span className="time">20 min</span>
                  <span className="retention">58%</span>
                  <span className="label">remembered</span>
                </div>
                <div className="stat">
                  <span className="time">1 hour</span>
                  <span className="retention">44%</span>
                  <span className="label">remembered</span>
                </div>
                <div className="stat">
                  <span className="time">1 day</span>
                  <span className="retention">33%</span>
                  <span className="label">remembered</span>
                </div>
                <div className="stat">
                  <span className="time">1 week</span>
                  <span className="retention">25%</span>
                  <span className="label">remembered</span>
                </div>
              </div>
            </section>

            <section className="sm2-algorithm">
              <h3>🚀 The SM-2 Algorithm Revolution</h3>
              
              <p>
                In 1985, Polish researcher <strong>Dr. Piotr Woźniak</strong> created the 
                SuperMemo SM-2 algorithm, transforming Ebbinghaus's insights into a practical 
                learning system. This algorithm, now used by millions worldwide, optimally 
                spaces reviews to maximize retention with minimal effort.
              </p>
              <blockquote>
                <p>
                  "With spaced repetition, information reviewed at key points on the forgetting 
                  curve can reduce the rate of forgetting by up to 200%."
                </p>
                <cite>
                  — Dr. Piotr Woźniak, creator of SuperMemo (1985)
                </cite>
              </blockquote>
            </section>

            <section className="language-learning">
              <h3>🌎 Proven for Language Learning</h3>
              
              <p>
                Recent research (2024-2025) confirms spaced repetition's effectiveness for 
                language acquisition:
              </p>
              <ul className="research-highlights">
                <li>
                  📊 <strong>25% increase</strong> in vocabulary retention compared to 
                  traditional methods
                  <cite>(Li, 2024, Guizhou University)</cite>
                </li>
                <li>
                  🎯 <strong>86-90% retention rate</strong> when reviews occur at optimal 
                  intervals: Day 1, 2, 7, 16, and 35
                  <cite>(Traverse Learning Research, 2023)</cite>
                </li>
                <li>
                  📱 Mobile spaced repetition apps show <strong>consistent efficacy</strong> 
                  across all proficiency levels
                  <cite>(ESL Teaching Study, 2025)</cite>
                </li>
              </ul>
            </section>

            <section className="how-tersekuller-works">
              <h3>✨ How TERSEKULLER Optimizes Your Learning</h3>
              
              <div className="algorithm-steps">
                <div className="step">
                  <span className="step-number">1</span>
                  <p>
                    <strong>Initial Learning:</strong> When you first see a phrase like 
                    {" "}<span className="spanish-text">"¿Qué onda?"</span>, it enters your 
                    short-term memory.
                  </p>
                </div>
                
                <div className="step">
                  <span className="step-number">2</span>
                  <p>
                    <strong>First Review (Day 1):</strong> Reviewing within 24 hours moves 
                    information toward long-term memory, preventing 60% of forgetting.
                  </p>
                </div>
                
                <div className="step">
                  <span className="step-number">3</span>
                  <p>
                    <strong>Expanding Intervals:</strong> Each successful review doubles the 
                    interval (1→2→4→8→16 days), following your brain's natural consolidation 
                    rhythm.
                  </p>
                </div>
                
                <div className="step">
                  <span className="step-number">4</span>
                  <p>
                    <strong>Adaptive Learning:</strong> Miss a card? It resets to Day 1. 
                    Ace it consistently? It spaces out to monthly reviews.
                  </p>
                </div>
              </div>
            </section>

            <section className="research-citations">
              <h3>📚 Research References</h3>
              
              <ul className="citations">
                <li>
                  Ebbinghaus, H. (1885). <em>Über das Gedächtnis</em>. Leipzig: Duncker & Humblot.
                  Successfully replicated by Murre & Dros (2015) in <em>PLOS ONE</em>.
                </li>
                <li>
                  Woźniak, P. (1990). "Optimization of learning." Master's Thesis, University 
                  of Technology in Poznań. The foundation of SuperMemo algorithms.
                </li>
                <li>
                  Li, X. (2024). "Spaced repetition as a basic structural method for ESL 
                  teaching." <em>Portal Linguarum</em>, 44, 45-62.
                </li>
                <li>
                  Karpicke, J. D., & Bauernschmidt, A. (2011). "Spaced retrieval: Absolute 
                  spacing enhances learning." <em>Journal of Experimental Psychology</em>, 37(5), 
                  1250-1257.
                </li>
              </ul>
            </section>

            <div className="about-footer">
              <p className="fun-fact">
                💡 <strong>Fun Fact:</strong> The same principles that help Buse learn 
                {" "}<span className="spanish-text">"¡Pinche turca guapa!"</span> are used by 
                medical students to memorize anatomy and polyglots to master 10+ languages!
              </p>
            </div>
          </div>
        </div>
      )}
    </>
  );
}


---

## FILE: src/components/Achievements.jsx
import { useState, useEffect } from 'react';
import { motion, AnimatePresence } from 'framer-motion';

export function Achievements({ cards, streak }) {
  const [unlockedAchievements, setUnlockedAchievements] = useState(() => {
    try {
      const saved = localStorage.getItem('tersekuller-achievements');
      return saved ? JSON.parse(saved) : [];
    } catch (error) {
      return [];
    }
  });
  
  const [newAchievement, setNewAchievement] = useState(null);
  
  const achievements = [
    { 
      id: 'first', 
      icon: '🌟', 
      title: '¡Primera vez!', 
      desc: 'First correct answer', 
      condition: () => cards.some(c => c.difficulty > 0) 
    },
    { 
      id: 'streak5', 
      icon: '🔥', 
      title: '¡Cinco seguidas!', 
      desc: '5 in a row', 
      condition: () => streak >= 5 
    },
    { 
      id: 'streak10', 
      icon: '💎', 
      title: '¡Diez perfectas!', 
      desc: '10 in a row', 
      condition: () => streak >= 10 
    },
    { 
      id: 'master5', 
      icon: '📚', 
      title: '¡Cinco dominadas!', 
      desc: 'Master 5 cards', 
      condition: () => cards.filter(c => c.difficulty >= 3).length >= 5 
    },
    { 
      id: 'master10', 
      icon: '🎓', 
      title: '¡Diez maestría!', 
      desc: 'Master 10 cards', 
      condition: () => cards.filter(c => c.difficulty >= 3).length >= 10 
    },
    { 
      id: 'halfway', 
      icon: '🌮', 
      title: '¡A la mitad!', 
      desc: '50% mastered', 
      condition: () => cards.filter(c => c.difficulty >= 3).length >= 15 
    },
    { 
      id: 'complete', 
      icon: '🏆', 
      title: '¡Chingona total!', 
      desc: '100% mastered', 
      condition: () => cards.filter(c => c.difficulty >= 3).length === 30 
    }
  ];
  
  useEffect(() => {
    achievements.forEach(achievement => {
      if (achievement.condition() && !unlockedAchievements.includes(achievement.id)) {
        setNewAchievement(achievement);
        setUnlockedAchievements(prev => {
          const updated = [...prev, achievement.id];
          try {
            localStorage.setItem('tersekuller-achievements', JSON.stringify(updated));
          } catch (error) {
            console.error('Error saving achievements:', error);
          }
          return updated;
        });
        
        // Hide after 3 seconds
        setTimeout(() => setNewAchievement(null), 3000);
      }
    });
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [cards, streak]);
  
  return (
    <AnimatePresence>
      {newAchievement && (
        <motion.div
          initial={{ y: -100, opacity: 0 }}
          animate={{ y: 0, opacity: 1 }}
          exit={{ y: -100, opacity: 0 }}
          className="achievement-popup"
        >
          <span className="achievement-icon">{newAchievement.icon}</span>
          <div>
            <strong>{newAchievement.title}</strong>
            <p>{newAchievement.desc}</p>
          </div>
        </motion.div>
      )}
    </AnimatePresence>
  );
}


---

## FILE: src/components/DailyGoal.jsx
import { useState, useEffect } from 'react';

export function DailyGoal({ cards }) {
  const today = new Date().toDateString();
  const dailyGoal = 10; // Review 10 cards per day
  
  const [dailyProgress, setDailyProgress] = useState(() => {
    try {
      const saved = localStorage.getItem('tersekuller-daily');
      const data = saved ? JSON.parse(saved) : { date: today, count: 0 };
      
      // Reset if new day
      if (data.date !== today) {
        return { date: today, count: 0 };
      }
      return data;
    } catch (error) {
      return { date: today, count: 0 };
    }
  });
  
  const todayReviewed = cards.filter(c => {
    if (!c.lastSeen) return false;
    const reviewDate = new Date(c.lastSeen).toDateString();
    return reviewDate === today;
  }).length;
  
  useEffect(() => {
    const newData = { date: today, count: todayReviewed };
    setDailyProgress(newData);
    try {
      localStorage.setItem('tersekuller-daily', JSON.stringify(newData));
    } catch (error) {
      console.error('Error saving daily progress:', error);
    }
  }, [todayReviewed, today]);
  
  const percentage = Math.min((todayReviewed / dailyGoal) * 100, 100);
  const completed = todayReviewed >= dailyGoal;
  
  return (
    <div className={`daily-goal ${completed ? 'completed' : ''}`}>
      <h4>Today's Goal {completed && '✨'}</h4>
      <div className="goal-progress">
        <div className="goal-bar">
          <div 
            className="goal-fill" 
            style={{ width: `${percentage}%` }}
          />
        </div>
        <span>{todayReviewed}/{dailyGoal}</span>
      </div>
      {completed && (
        <p className="goal-message">¡Meta cumplida! Goal achieved!</p>
      )}
    </div>
  );
}


---

## FILE: src/components/FlashCard.jsx
import { useState, useEffect, useCallback } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { useSwipeable } from 'react-swipeable';

export function FlashCard({ card, onAnswer }) {
  const [flipped, setFlipped] = useState(false);
  const [answered, setAnswered] = useState(false);
  const [showExamples, setShowExamples] = useState(true); // Show by default!
  const [answerFeedback, setAnswerFeedback] = useState(null); // 'correct' or 'wrong'

  const categoryColors = {
    street: 'linear-gradient(135deg, #FF6B6B, #FF8E53)',
    essential: 'linear-gradient(135deg, #4ECDC4, #44A08D)',
    profanity: 'linear-gradient(135deg, #F093FB, #F5576C)',
    daily: 'linear-gradient(135deg, #FA709A, #FEE140)',
    survival: 'linear-gradient(135deg, #667eea, #764ba2)',
    food: 'linear-gradient(135deg, #fa709a, #fee140)',
    emergency: 'linear-gradient(135deg, #ff6b6b, #ee5a6f)',
    transport: 'linear-gradient(135deg, #4facfe, #00f2fe)',
    social: 'linear-gradient(135deg, #43e97b, #38f9d7)',
    'vegetarian-essential': 'linear-gradient(135deg, #51cf66, #40c057)',
    'vegetarian-warning': 'linear-gradient(135deg, #ffd43b, #fcc419)',
    'vegetarian-foods': 'linear-gradient(135deg, #66d9e8, #3bc9db)',
    'vegetarian-mexican': 'linear-gradient(135deg, #ff922b, #fd7e14)',
    'vegetarian-emergency': 'linear-gradient(135deg, #ff6b6b, #ee5a6f)',
    'vegetarian-positive': 'linear-gradient(135deg, #51cf66, #40c057)'
  };

  const handleAnswer = useCallback((correct) => {
    setAnswered(true);
    setAnswerFeedback(correct ? 'correct' : 'wrong');
    onAnswer(card.id, correct);
    
    // Reset feedback after animation
    setTimeout(() => {
      setAnswerFeedback(null);
    }, 800);
    
    setTimeout(() => {
      setFlipped(false);
      setAnswered(false);
      setShowExamples(true); // Reset to show examples for next card
      setAnswerFeedback(null);
    }, 1500);
  }, [card.id, onAnswer]);

  // Keyboard navigation
  useEffect(() => {
    const handleKeyPress = (e) => {
      // Spacebar to flip card
      if (e.key === ' ' && !flipped) {
        e.preventDefault();
        setFlipped(true);
      }
      // Number keys to answer (only when flipped)
      if (flipped && !answered) {
        if (e.key === '1') {
          e.preventDefault();
          handleAnswer(false);
        }
        if (e.key === '2') {
          e.preventDefault();
          handleAnswer(true);
        }
      }
    };

    window.addEventListener('keydown', handleKeyPress);
    return () => window.removeEventListener('keydown', handleKeyPress);
  }, [flipped, answered, handleAnswer]);

  const category = card.category || 'street';
  
  // Reset examples visibility when card changes
  useEffect(() => {
    setShowExamples(true);
    setFlipped(false);
    setAnswered(false);
    setAnswerFeedback(null);
  }, [card.id]);

  const swipeHandlers = useSwipeable({
    onSwipedUp: () => {
      if (!flipped) {
        setFlipped(true);
      }
    },
    onSwipedLeft: () => {
      if (flipped && !answered) {
        handleAnswer(false);
      }
    },
    onSwipedRight: () => {
      if (flipped && !answered) {
        handleAnswer(true);
      }
    },
    trackMouse: true,
    preventScrollOnSwipe: true
  });

  return (
    <motion.div 
      className="card-container"
      whileHover={{ scale: 1.02 }}
      transition={{ type: "spring", stiffness: 300 }}
      {...swipeHandlers}
    >
      <div className={`card ${flipped ? 'flipped' : ''} ${answerFeedback ? `answer-${answerFeedback}` : ''}`}>
        {/* Front of card */}
        <div className="card-front">
          {card.category && (
            <div 
              className="category-badge"
              style={{ background: categoryColors[category] || categoryColors.street }}
            >
              {category}
            </div>
          )}
          
          <h2 className="spanish-text">{card.spanish}</h2>
          
          <div className="card-actions">
            <button 
              onClick={() => setFlipped(true)}
              className="flip-btn glass-btn"
            >
              <span className="btn-icon">🔄</span>
              Flip to English
            </button>
          </div>
        </div>
        
        {/* Back of card */}
        <div className="card-back">
          <h3 className="english-text">{card.english}</h3>
          <p className="context-text">{card.context}</p>
          
          {/* Examples section */}
          {card.examples && Array.isArray(card.examples) && card.examples.length > 0 && (
            <div className="examples-section">
              <button 
                onClick={() => setShowExamples(!showExamples)}
                className="examples-toggle"
                type="button"
              >
                {showExamples ? '📚 Hide' : '📖 Show'} Examples ({card.examples.length})
              </button>
              
              {showExamples && (
                <motion.div
                  initial={{ opacity: 0, height: 0 }}
                  animate={{ opacity: 1, height: 'auto' }}
                  exit={{ opacity: 0, height: 0 }}
                  transition={{ duration: 0.3 }}
                  className="examples-list"
                >
                  {card.examples.map((ex, idx) => (
                    <div key={`example-${idx}`} className="example-item">
                      <p className="example-spanish">{ex.es}</p>
                      <p className="example-english">{ex.en}</p>
                    </div>
                  ))}
                </motion.div>
              )}
            </div>
          )}
          
          {/* Answer buttons */}
          {!answered && (
            <div className="answer-buttons">
              <button 
                onClick={() => handleAnswer(false)}
                className="btn-answer btn-wrong"
                aria-label="Need practice - Press 1"
              >
                <span>😔</span>
                Need practice
              </button>
              <button 
                onClick={() => handleAnswer(true)}
                className="btn-answer btn-correct"
                aria-label="Got it - Press 2"
              >
                <span>💪</span>
                Got it!
              </button>
            </div>
          )}
          {flipped && !answered && (
            <p className="keyboard-hint">💡 Tip: Press Spacebar to flip, 1/2 to answer</p>
          )}
        </div>
      </div>
    </motion.div>
  );
}




---

## FILE: src/components/ProgressBar.jsx
export function ProgressBar({ progress, total }) {
  const percentage = (progress / total) * 100;

  return (
    <div className="progress">
      <span>{progress}/{total} mastered</span>
      <div className="progress-bar">
        <div 
          className="progress-fill" 
          style={{ width: `${percentage}%` }}
        />
      </div>
    </div>
  );
}




---

## FILE: src/components/ProgressSummary.jsx
export function ProgressSummary({ cards }) {
  const total = cards.length;
  const neverSeen = cards.filter(c => !c.lastSeen).length;
  const learning = cards.filter(c => c.difficulty > 0 && c.difficulty < 3).length;
  const mastered = cards.filter(c => c.difficulty >= 3).length;
  
  return (
    <div className="progress-summary">
      <h3>Your Learning Journey 🗺️</h3>
      <div className="journey-stages">
        <div className="stage new">
          <div className="stage-bar" style={{ width: `${(neverSeen/total) * 100}%` }}>
            {neverSeen > 0 && <span>{neverSeen}</span>}
          </div>
          <label>New</label>
        </div>
        <div className="stage learning">
          <div className="stage-bar" style={{ width: `${(learning/total) * 100}%` }}>
            {learning > 0 && <span>{learning}</span>}
          </div>
          <label>Learning</label>
        </div>
        <div className="stage mastered">
          <div className="stage-bar" style={{ width: `${(mastered/total) * 100}%` }}>
            {mastered > 0 && <span>{mastered}</span>}
          </div>
          <label>Mastered</label>
        </div>
      </div>
      <div className="journey-explanation">
        <p><strong>New:</strong> Haven't seen yet</p>
        <p><strong>Learning:</strong> Reviewed 1-2 times</p>
        <p><strong>Mastered:</strong> Know it well (3+ reviews)</p>
      </div>
    </div>
  );
}


---

## FILE: src/components/ReviewSchedule.jsx
export function ReviewSchedule({ cards }) {
  const now = Date.now();
  const DAY_MS = 24 * 60 * 60 * 1000;
  
  const schedule = {
    overdue: 0,
    today: 0,
    tomorrow: 0,
    thisWeek: 0,
    later: 0
  };
  
  cards.forEach(card => {
    if (!card.lastSeen) {
      // Never seen = due today
      schedule.today++;
      return;
    }
    
    const nextReview = card.lastSeen + (card.interval * DAY_MS);
    const daysUntilDue = Math.floor((nextReview - now) / DAY_MS);
    
    if (daysUntilDue < 0) schedule.overdue++;
    else if (daysUntilDue === 0) schedule.today++;
    else if (daysUntilDue === 1) schedule.tomorrow++;
    else if (daysUntilDue <= 7) schedule.thisWeek++;
    else schedule.later++;
  });
  
  return (
    <>
      <div className="review-schedule">
        {schedule.overdue > 0 && (
          <div className="schedule-item overdue">
            <span className="schedule-icon">🚨</span>
            <span className="schedule-count">{schedule.overdue}</span>
            <span className="schedule-label">overdue</span>
          </div>
        )}
        
        {schedule.today > 0 && (
          <div className="schedule-item today">
            <span className="schedule-icon">📚</span>
            <span className="schedule-count">{schedule.today}</span>
            <span className="schedule-label">due today</span>
          </div>
        )}
        
        {schedule.tomorrow > 0 && (
          <div className="schedule-item tomorrow">
            <span className="schedule-icon">📅</span>
            <span className="schedule-count">{schedule.tomorrow}</span>
            <span className="schedule-label">tomorrow</span>
          </div>
        )}
        
        {schedule.thisWeek > 0 && (
          <div className="schedule-item week">
            <span className="schedule-icon">📆</span>
            <span className="schedule-count">{schedule.thisWeek}</span>
            <span className="schedule-label">this week</span>
          </div>
        )}
      </div>
      
      {/* Explanation section */}
      <div className="schedule-explanation">
        <details className="explanation-details">
          <summary>What do these mean? 🤔</summary>
          <div className="explanation-content">
            <div className="explanation-item">
              <strong>🚨 Overdue:</strong> Cards you should have reviewed earlier. 
              Review these first - they're at risk of being forgotten!
            </div>
            <div className="explanation-item">
              <strong>📚 Due today:</strong> Cards scheduled for review today. 
              These are ready for practice to strengthen your memory.
            </div>
            <div className="explanation-item">
              <strong>📅 Tomorrow:</strong> Cards that will be ready for review tomorrow. 
              Come back then to keep them fresh!
            </div>
            <div className="explanation-item">
              <strong>📆 This week:</strong> Cards scheduled for review in the next 2-7 days. 
              The algorithm spaces these out based on your performance.
            </div>
          </div>
        </details>
      </div>
    </>
  );
}


---

## FILE: src/components/Stats.jsx
export function Stats({ cards, streak }) {
  // Cards reviewed in the last 24 hours
  const today = cards.filter(c => 
    c.lastSeen && Date.now() - c.lastSeen < 86400000
  ).length;
  
  // Cards with difficulty >= 3 (reviewed successfully 3+ times)
  const mastered = cards.filter(c => c.difficulty >= 3).length;
  const total = cards.length;

  return (
    <div className="stats">
      <div className="stat-item">
        <span className="stat-icon">📚</span>
        <span className="stat-label">Today</span>
        <span className="stat-value">{today}</span>
        <span className="stat-tooltip">Cards you've practiced in the last 24 hours</span>
      </div>
      
      <div className="stat-item">
        <span className="stat-icon">🔥</span>
        <span className="stat-label">Streak</span>
        <span className="stat-value">{streak}</span>
        <span className="stat-tooltip">Correct answers in a row</span>
      </div>
      
      <div className="stat-item">
        <span className="stat-icon">⭐</span>
        <span className="stat-label">Mastered</span>
        <span className="stat-value">{mastered}/{total}</span>
        <span className="stat-tooltip">Cards you know well (3+ correct reviews)</span>
      </div>
    </div>
  );
}


---

## FILE: src/components/StickerReward.jsx
import { useEffect, useState, useRef } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import confetti from 'canvas-confetti';

// Dobby images
const dobbyImages = [
  '/images/dobby1.jpeg',
  '/images/dobby2.jpeg',
  '/images/dobby3.jpeg',
  '/images/dobby4.jpeg',
  '/images/dobby5.jpeg'
];

// Always use "¡A huevo!" for all congratulations
const encouragementText = "¡A huevo!";

export function StickerReward({ show, streak }) {
  // Use useRef to track the index and cycle through images
  const imageIndexRef = useRef(0);
  
  const [currentImage, setCurrentImage] = useState(0);
  
  useEffect(() => {
    if (show) {
      // Cycle through images instead of random
      imageIndexRef.current = (imageIndexRef.current + 1) % dobbyImages.length;
      
      const newImageIndex = imageIndexRef.current;
      
      setCurrentImage(newImageIndex);
      
      // Trigger confetti
      confetti({
        particleCount: 100,
        spread: 70,
        origin: { y: 0.6 },
        colors: ['#FFD700', '#FF69B4', '#FFE4E1']
      });
      
      // Preload next image to ensure it's ready
      const nextIndex = (newImageIndex + 1) % dobbyImages.length;
      const img = new Image();
      img.src = dobbyImages[nextIndex];
      
      // Debug logs
      console.log('Showing reward with image:', dobbyImages[newImageIndex]);
      console.log('Image index:', newImageIndex);
    }
  }, [show]);

  // Always render but control visibility with AnimatePresence
  return (
    <AnimatePresence>
      {show && (
        <motion.div
          key="sticker-reward"
          initial={{ scale: 0, rotate: -180, opacity: 0 }}
          animate={{ scale: 1, rotate: 0, opacity: 1 }}
          exit={{ scale: 0, opacity: 0 }}
          transition={{ duration: 0.5 }}
          className="sticker-reward"
        >
          <img 
            src={dobbyImages[currentImage]} 
            alt="Celebration Dobby" 
            className="dobby-image"
            onError={(e) => {
              // Fallback if image fails to load
              e.target.src = dobbyImages[0];
            }}
          />
          <span className="encouragement-text">{encouragementText}</span>
          <span className="streak-text">¡{streak} in a row!</span>
        </motion.div>
      )}
    </AnimatePresence>
  );
}




---

## FILE: src/hooks/useSound.js
export function useSound() {
  const playCorrect = () => {
    try {
      const audio = new Audio('/sounds/correct.mp3');
      audio.volume = 0.5;
      audio.play().catch(() => {
        // Silently fail if sound file doesn't exist
      });
    } catch (error) {
      // Silently fail if audio not available
    }
  };
  
  const playWrong = () => {
    try {
      const audio = new Audio('/sounds/wrong.mp3');
      audio.volume = 0.3;
      audio.play().catch(() => {});
    } catch (error) {
      // Silently fail
    }
  };
  
  const playFlip = () => {
    try {
      const audio = new Audio('/sounds/flip.mp3');
      audio.volume = 0.2;
      audio.play().catch(() => {});
    } catch (error) {
      // Silently fail
    }
  };
  
  return { playCorrect, playWrong, playFlip };
}


---

## FILE: src/hooks/useSpacedRepetition.js
import { useState, useEffect, useCallback } from 'react';
import { flashcards } from '../data/flashcards';

export function useSpacedRepetition() {
  const [cards, setCards] = useState(() => {
    try {
      const saved = localStorage.getItem('tersekuller-cards');
      if (saved) {
        const parsedCards = JSON.parse(saved);
        // Merge saved cards with original flashcards to ensure examples are preserved
        return parsedCards.map(savedCard => {
          const originalCard = flashcards.find(fc => fc.id === savedCard.id);
          if (originalCard) {
            // Preserve saved progress but use original card data (including examples)
            return {
              ...originalCard,
              difficulty: savedCard.difficulty ?? originalCard.difficulty,
              lastSeen: savedCard.lastSeen ?? originalCard.lastSeen,
              interval: savedCard.interval ?? originalCard.interval,
              nextReview: savedCard.nextReview ?? originalCard.nextReview
            };
          }
          return savedCard;
        });
      }
      return flashcards;
    } catch (error) {
      console.error('Error loading saved cards:', error);
      return flashcards;
    }
  });

  useEffect(() => {
    try {
      localStorage.setItem('tersekuller-cards', JSON.stringify(cards));
    } catch (error) {
      console.error('Error saving cards to localStorage:', error);
    }
  }, [cards]);

  const updateCard = useCallback((cardId, correct) => {
    setCards(prev => {
      const updated = prev.map(card => {
        if (card.id === cardId) {
          let newInterval;
          let newDifficulty;
          
          if (correct) {
            // SM-2 inspired intervals for language learning
            // Based on research: 1 day, 2 days, 7 days, 16 days, 35 days, 70 days, 120 days
            const intervals = [1, 2, 7, 16, 35, 70, 120];
            const currentLevel = Math.min(card.difficulty, intervals.length - 1);
            newInterval = intervals[currentLevel];
            newDifficulty = card.difficulty + 1;
          } else {
            // Reset to beginning if wrong
            newInterval = 1;
            newDifficulty = 0;
          }
          
          return {
            ...card,
            difficulty: newDifficulty,
            lastSeen: Date.now(),
            interval: newInterval,
            nextReview: Date.now() + (newInterval * 24 * 60 * 60 * 1000)
          };
        }
        return card;
      });
      
      return updated;
    });
  }, []);

  const getNextCard = useCallback((excludeCardId = null) => {
    const now = Date.now();
    const DAY_MS = 24 * 60 * 60 * 1000;
    
    // Minimum time before showing the same card again (1 minute)
    const MIN_REPEAT_TIME = 60 * 1000;
    
    // Cards that are due for review (excluding recently seen cards and current card)
    const dueCards = cards.filter(card => {
      // Exclude the current card if specified
      if (excludeCardId && card.id === excludeCardId) return false;
      
      if (!card.lastSeen) return true; // Never seen = always due
      
      // Don't show cards that were just seen (within last minute)
      if (now - card.lastSeen < MIN_REPEAT_TIME) return false;
      
      const daysSinceLastSeen = (now - card.lastSeen) / DAY_MS;
      return daysSinceLastSeen >= card.interval;
    });
    
    if (dueCards.length > 0) {
      // Return a random due card instead of always the most overdue
      // This adds variety while still prioritizing due cards
      return dueCards[Math.floor(Math.random() * dueCards.length)];
    }
    
    // No cards due? Get cards not seen in last minute (excluding current card)
    const availableCards = cards.filter(card => {
      if (excludeCardId && card.id === excludeCardId) return false;
      
      if (!card.lastSeen) return true;
      
      // Don't show cards seen in the last minute
      return (now - card.lastSeen) >= MIN_REPEAT_TIME;
    });
    
    if (availableCards.length > 0) {
      return availableCards[Math.floor(Math.random() * availableCards.length)];
    }
    
    // If all cards were seen recently, return a random one (except current)
    const remainingCards = excludeCardId 
      ? cards.filter(c => c.id !== excludeCardId)
      : cards;
    
    if (remainingCards.length > 0) {
      return remainingCards[Math.floor(Math.random() * remainingCards.length)];
    }
    
    // Fallback: return any card
    return cards[0];
  }, [cards]);

  return { cards, updateCard, getNextCard };
}


---

## FILE: src/data/flashcards.js
export const flashcards = [
  {
    id: 1,
    category: "street",
    spanish: "¡Pinche turca guapa!",
    english: "Damn beautiful Turkish girl!",
    context: "Flirty street compliment (very informal)",
    examples: [
      { es: "Mira, ahí viene la pinche turca guapa del café", en: "Look, here comes the damn beautiful Turkish girl from the café" },
      { es: "¿Ya viste a la pinche turca guapa? Está bien chida", en: "Did you see the beautiful Turkish girl? She's really cool" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 2,
    category: "street",
    spanish: "¿Qué onda, cómo andas?",
    english: "What's up, how are you?",
    context: "Casual Mexican greeting",
    examples: [
      { es: "¿Qué onda, cómo andas? ¿Hace mucho que no te veo", en: "What's up, how are you? I haven't seen you in a while" },
      { es: "¡Qué onda! ¿Cómo andas con el trabajo?", en: "What's up! How are things going with work?" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 3,
    category: "street",
    spanish: "¡Qué chingón!",
    english: "That's awesome!",
    context: "Expression of excitement",
    examples: [
      { es: "¡Qué chingón! ¿Ya viste la nueva película?", en: "That's awesome! Did you see the new movie?" },
      { es: "Ganó el partido, ¡qué chingón!", en: "He won the game, that's awesome!" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 4,
    category: "street",
    spanish: "¡No mames, güey!",
    english: "No fucking way, dude!",
    context: "Strong surprise/disbelief (vulgar but common)",
    examples: [
      { es: "¡No mames! ¿En serio ganaste la lotería?", en: "No fucking way! Did you really win the lottery?" },
      { es: "No mames, güey, esa película estuvo padrísima", en: "Holy shit dude, that movie was awesome" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 5,
    category: "street",
    spanish: "Órale",
    english: "Wow / Come on / Let's go",
    context: "Multi-purpose exclamation",
    examples: [
      { es: "¡Órale! ¿Ya viste qué pasó?", en: "Wow! Did you see what happened?" },
      { es: "Órale, vamos al cine", en: "Come on, let's go to the movies" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 6,
    category: "street",
    spanish: "¡Qué chingón!",
    english: "How cool!",
    context: "Expressing approval or excitement",
    examples: [
      { es: "¡Qué chingón que viniste!", en: "How cool that you came!" },
      { es: "Tu coche está bien chingón", en: "Your car is really cool" },
      { es: "¡Qué chingón tu viaje!", en: "How cool your trip is!" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 7,
    category: "street",
    spanish: "Está cabrón",
    english: "That's difficult / tough",
    context: "Saying something is hard",
    examples: [
      { es: "El examen estuvo cabrón", en: "The exam was tough" },
      { es: "Está cabrón encontrar trabajo", en: "It's tough to find work" },
      { es: "Esa situación está bien cabrona", en: "That situation is really tough" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 8,
    category: "street",
    spanish: "¡Qué chingón!",
    english: "How cool!",
    context: "Another way to say something is awesome",
    examples: [
      { es: "¡Qué chingón que vienes a México!", en: "How awesome that you're coming to Mexico!" },
      { es: "Esta fiesta está bien chingona", en: "This party is really awesome" },
      { es: "¡Qué chingón tu nuevo trabajo!", en: "Your new job is awesome!" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 9,
    category: "street",
    spanish: "Ándale",
    english: "Come on / hurry up / okay",
    context: "Encouragement or agreement",
    examples: [
      { es: "Ándale, vamos que llegamos tarde", en: "Come on, let's go we're late" },
      { es: "Ándale, hazlo rápido", en: "Come on, do it quickly" },
      { es: "Ándale pues, está bien", en: "Okay then, that's fine" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 10,
    category: "street",
    spanish: "Chale",
    english: "Oh no / that sucks",
    context: "Expressing disappointment",
    examples: [
      { es: "Chale, se canceló la fiesta", en: "Oh no, the party was cancelled" },
      { es: "¡Chale! Perdí mi celular", en: "That sucks! I lost my phone" },
      { es: "Chale, no tengo dinero", en: "Oh no, I don't have money" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 11,
    category: "street",
    spanish: "Neta",
    english: "Really / seriously",
    context: "Asking for confirmation or emphasis",
    examples: [
      { es: "¿Neta? No me digas", en: "Really? You don't say" },
      { es: "Es neta, te lo juro", en: "It's real, I swear" },
      { es: "¿De neta pasó eso?", en: "Did that really happen?" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 12,
    category: "street",
    spanish: "¡No mames!",
    english: "No way! / Are you kidding?",
    context: "Polite way to express surprise",
    examples: [
      { es: "¡No mames! ¿En serio?", en: "No way! Seriously?" },
      { es: "No mames, qué sorpresa", en: "No way, what a surprise" },
      { es: "¡No mames, está carísimo!", en: "No way, it's super expensive!" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 13,
    category: "street",
    spanish: "Está culero",
    english: "That's bad / ugly",
    context: "Describing something negative",
    examples: [
      { es: "Está culero que llegues tarde", en: "It's bad that you arrive late" },
      { es: "Ese lugar está bien culero", en: "That place is really bad" },
      { es: "Qué culero, se canceló", en: "That's bad, it was cancelled" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 14,
    category: "street",
    spanish: "¡Qué onda, güey!",
    english: "What's up, dude!",
    context: "Very casual greeting among friends",
    examples: [
      { es: "¡Qué onda, güey! ¿Cómo estás?", en: "What's up, dude! How are you?" },
      { es: "Qué onda, güey, hace mucho que no te veo", en: "What's up dude, I haven't seen you in a while" },
      { es: "¡Qué onda! ¿Vamos?", en: "What's up! Are we going?" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 15,
    category: "street",
    spanish: "A huevo",
    english: "Hell yeah / definitely",
    context: "Strong agreement or confirmation",
    examples: [
      { es: "¿Vas a la fiesta? ¡A huevo!", en: "Are you going to the party? Hell yeah!" },
      { es: "A huevo que sí voy", en: "Hell yeah I'm going" },
      { es: "¡A huevo, está chido!", en: "Hell yeah, it's cool!" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 16,
    category: "street",
    spanish: "Naco",
    english: "Tacky / uncultured",
    context: "Describing something in poor taste",
    examples: [
      { es: "Esa ropa está bien naca", en: "Those clothes are really tacky" },
      { es: "Qué naco ese lugar", en: "That place is so tacky" },
      { es: "No seas naco, vístete bien", en: "Don't be tacky, dress well" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 17,
    category: "street",
    spanish: "¡Qué desmadre!",
    english: "What a mess! / Oh my god!",
    context: "Expressing frustration or surprise",
    examples: [
      { es: "¡Qué desmadre! Mira cómo quedó todo", en: "What a mess! Look how everything turned out" },
      { es: "Esa fiesta fue un desmadre total", en: "That party was a total mess" },
      { es: "¡Qué desmadre con el tráfico!", en: "What a mess with the traffic!" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 18,
    category: "street",
    spanish: "Está padrísimo",
    english: "That's awesome!",
    context: "Very positive expression",
    examples: [
      { es: "¡Está padrísimo tu nuevo coche!", en: "Your new car is awesome!" },
      { es: "La película estuvo padrísima", en: "The movie was awesome" },
      { es: "Qué padrísimo está este lugar", en: "This place is so awesome" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 19,
    category: "street",
    spanish: "Me vale madre",
    english: "I don't care",
    context: "Strong expression of indifference",
    examples: [
      { es: "Me vale madre lo que digan", en: "I don't care what they say" },
      { es: "Eso me vale madre completamente", en: "I don't care about that at all" },
      { es: "Me vale madre si viene o no", en: "I don't care if he comes or not" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 20,
    category: "street",
    spanish: "¡Qué show!",
    english: "What a scene! / drama",
    context: "Commenting on a situation",
    examples: [
      { es: "¡Qué show armaron en la fiesta!", en: "What a scene they made at the party!" },
      { es: "Siempre hace un show por todo", en: "He always makes a scene about everything" },
      { es: "¡Qué show! Mira cómo están discutiendo", en: "What a scene! Look how they're arguing" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 21,
    category: "street",
    spanish: "Pásele",
    english: "Come in / go ahead",
    context: "Inviting someone to enter or proceed",
    examples: [
      { es: "Pásele, está abierto", en: "Come in, it's open" },
      { es: "Pásele, por favor, siéntese", en: "Come in, please, have a seat" },
      { es: "Pásele, no se quede en la puerta", en: "Come in, don't stay at the door" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 22,
    category: "street",
    spanish: "Simón",
    english: "Yes / yeah",
    context: "Casual way to say yes",
    examples: [
      { es: "¿Vas a la fiesta? Simón, claro que sí", en: "Are you going to the party? Yeah, of course" },
      { es: "Simón, está bien", en: "Yeah, that's fine" },
      { es: "¿Te parece bien? Simón", en: "Does that seem okay? Yeah" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 23,
    category: "street",
    spanish: "¡No seas mamón!",
    english: "Don't be a jerk!",
    context: "Telling someone not to be annoying",
    examples: [
      { es: "¡No seas mamón y ayúdame!", en: "Don't be a jerk and help me!" },
      { es: "No seas mamón, comparte un poco", en: "Don't be a jerk, share a little" },
      { es: "¡No seas mamón! No hagas eso", en: "Don't be a jerk! Don't do that" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 24,
    category: "street",
    spanish: "Está chido",
    english: "That's cool",
    context: "Approving something",
    examples: [
      { es: "Tu nueva música está bien chida", en: "Your new music is really cool" },
      { es: "¡Está chido que vengas!", en: "It's cool that you're coming!" },
      { es: "Ese lugar está súper chido", en: "That place is super cool" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 25,
    category: "street",
    spanish: "¡Qué pedo!",
    english: "What's up! / What happened?",
    context: "Very casual greeting or question",
    examples: [
      { es: "¡Qué pedo! ¿Cómo estás?", en: "What's up! How are you?" },
      { es: "¡Qué pedo pasó aquí?", en: "What happened here?" },
      { es: "Oye, ¿qué pedo con tu trabajo?", en: "Hey, what's up with your job?" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 26,
    category: "street",
    spanish: "¡Está de pelos!",
    english: "That's excellent! / awesome!",
    context: "Saying something is really good",
    examples: [
      { es: "¡Está de pelos esta comida!", en: "This food is excellent!" },
      { es: "Tu coche está de pelos", en: "Your car is awesome" },
      { es: "¡Qué de pelos está el concierto!", en: "The concert is so excellent!" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 27,
    category: "street",
    spanish: "¡Órale, está chingón!",
    english: "Wow, that's awesome!",
    context: "Combining exclamations for emphasis",
    examples: [
      { es: "¡Órale, está chingón tu nuevo trabajo!", en: "Wow, your new job is awesome!" },
      { es: "Órale, qué chingón está esto", en: "Wow, this is so awesome" },
      { es: "¡Órale! Está súper chingón", en: "Wow! It's super awesome" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 28,
    category: "street",
    spanish: "No me digas",
    english: "No way / you don't say",
    context: "Expressing surprise or disbelief",
    examples: [
      { es: "¿Ganaste la lotería? ¡No me digas!", en: "You won the lottery? No way!" },
      { es: "No me digas que es verdad", en: "You don't say it's true" },
      { es: "¡No me digas! ¿En serio se casó?", en: "No way! Did he really get married?" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 29,
    category: "street",
    spanish: "Está a toda madre",
    english: "That's really great!",
    context: "Very positive expression",
    examples: [
      { es: "¡Está a toda madre tu fiesta!", en: "Your party is really great!" },
      { es: "Este lugar está a toda madre", en: "This place is really great" },
      { es: "¡Qué a toda madre está el concierto!", en: "The concert is so great!" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 30,
    category: "street",
    spanish: "¡Pinche güey!",
    english: "Damn dude!",
    context: "Casual expression, can be playful or frustrated",
    examples: [
      { es: "¡Pinche güey, qué tarde llegaste!", en: "Damn dude, you arrived so late!" },
      { es: "Ese pinche güey siempre tiene problemas", en: "That damn dude always has problems" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  
  // ========== SURVIVAL ESSENTIALS ==========
  {
    id: 31,
    category: "survival",
    spanish: "¿Dónde está el baño?",
    english: "Where is the bathroom?",
    context: "Essential phrase for any Spanish-speaking country",
    examples: [
      { es: "Disculpe, ¿dónde está el baño?", en: "Excuse me, where is the bathroom?" },
      { es: "¿Dónde está el baño más cercano, por favor?", en: "Where is the nearest bathroom, please?" },
      { es: "Necesito ir al baño, ¿dónde está?", en: "I need to go to the bathroom, where is it?" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 32,
    category: "survival",
    spanish: "¿Puedo ver el menú?",
    english: "Can I see the menu?",
    context: "Restaurant essential",
    examples: [
      { es: "¿Puedo ver el menú, por favor?", en: "Can I see the menu, please?" },
      { es: "¿Tienen menú en inglés?", en: "Do you have a menu in English?" },
      { es: "¿Me puede traer el menú?", en: "Can you bring me the menu?" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 33,
    category: "survival",
    spanish: "La cuenta, por favor",
    english: "The bill, please",
    context: "Asking for the check at restaurants",
    examples: [
      { es: "¿Me trae la cuenta, por favor?", en: "Can you bring me the bill, please?" },
      { es: "La cuenta cuando pueda", en: "The bill when you can" },
      { es: "¿Cuánto es la cuenta?", en: "How much is the bill?" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 34,
    category: "survival",
    spanish: "¿Cuánto cuesta?",
    english: "How much does it cost?",
    context: "Shopping essential",
    examples: [
      { es: "¿Cuánto cuesta este?", en: "How much is this one?" },
      { es: "¿Cuánto cuestan los dos?", en: "How much for both?" },
      { es: "¿Me puede decir el precio?", en: "Can you tell me the price?" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 35,
    category: "survival",
    spanish: "Necesito ayuda",
    english: "I need help",
    context: "Essential for emergencies",
    examples: [
      { es: "Disculpe, necesito ayuda", en: "Excuse me, I need help" },
      { es: "Necesito ayuda para encontrar mi hotel", en: "I need help finding my hotel" },
      { es: "¿Me puede ayudar, por favor?", en: "Can you help me, please?" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  
  // ========== REGIONAL VARIATIONS (Mexican Spanish) ==========
  {
    id: 50,
    category: "survival",
    spanish: "¿Tienes cambio?",
    english: "Do you have change?",
    context: "Mexican phrase - asking for change",
    examples: [
      { es: "Oye, ¿tienes cambio de mil?", en: "Hey, do you have change for a thousand?" },
      { es: "¿No tienes cambio más chico?", en: "Don't you have smaller change?" },
      { es: "Necesito cambio para el camión", en: "I need change for the bus" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 51,
    category: "survival",
    spanish: "¿Dónde queda...?",
    english: "Where is...?",
    context: "Common way to ask for locations in Mexico",
    examples: [
      { es: "¿Dónde queda el metro más cercano?", en: "Where is the nearest subway?" },
      { es: "¿Me dices dónde queda?", en: "Can you tell me where it is?" },
      { es: "¿Sabes dónde queda el centro?", en: "Do you know where downtown is?" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 52,
    category: "transport",
    spanish: "Camión",
    english: "Bus",
    context: "Mexican word for bus (also colectivo)",
    examples: [
      { es: "Voy a tomar el camión", en: "I'm going to take the bus" },
      { es: "¿Cuál camión va al centro?", en: "Which bus goes downtown?" },
      { es: "El camión pasa cada diez minutos", en: "The bus comes every ten minutes" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 53,
    category: "street",
    spanish: "Oye",
    english: "Hey / listen",
    context: "Mexican interjection to get attention",
    examples: [
      { es: "Oye, ¿qué haces?", en: "Hey, what are you doing?" },
      { es: "Oye, mira esto", en: "Hey, look at this" },
      { es: "¡Oye, espera un poco!", en: "Hey, wait a bit!" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 54,
    category: "street",
    spanish: "Chambear",
    english: "To work",
    context: "Mexican slang for trabajar",
    examples: [
      { es: "Tengo que chambear mañana", en: "I have to work tomorrow" },
      { es: "¿Dónde chambeas?", en: "Where do you work?" },
      { es: "Chambeo en una oficina", en: "I work in an office" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  
  // ========== PROFANITY (Educational) ==========
  {
    id: 100,
    category: "profanity",
    spanish: "Vete a la chingada",
    english: "Go to hell/Fuck off",
    context: "Strong dismissal (very offensive)",
    examples: [
      { es: "Si no te gusta, vete a la chingada", en: "If you don't like it, go to hell" },
      { es: "¡Vete a la chingada con tus problemas!", en: "Go to hell with your problems!" },
      { es: "Me mandó a la chingada", en: "He told me to fuck off" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 101,
    category: "profanity",
    spanish: "Hijo de la chingada",
    english: "Son of a bitch",
    context: "Strong insult (very offensive)",
    examples: [
      { es: "Ese hijo de la chingada me robó el celular", en: "That son of a bitch stole my phone" },
      { es: "¡Eres un hijo de la chingada!", en: "You're a son of a bitch!" },
      { es: "No seas hijo de la chingada", en: "Don't be a son of a bitch" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  
  // ========== ESSENTIAL VERBS ==========
  {
    id: 200,
    category: "essential",
    spanish: "ser",
    english: "to be (permanent)",
    context: "Most important Spanish verb - permanent states",
    examples: [
      { es: "Ella es doctora", en: "She is a doctor" },
      { es: "Somos amigos desde la infancia", en: "We are friends since childhood" },
      { es: "¿De dónde eres?", en: "Where are you from?" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 201,
    category: "essential",
    spanish: "estar",
    english: "to be (temporary)",
    context: "Second most important verb - temporary states/location",
    examples: [
      { es: "Estoy cansada", en: "I am tired" },
      { es: "¿Dónde estás?", en: "Where are you?" },
      { es: "La comida está lista", en: "The food is ready" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 202,
    category: "essential",
    spanish: "tener",
    english: "to have",
    context: "Essential for expressing possession, age, feelings",
    examples: [
      { es: "Tengo 25 años", en: "I am 25 years old" },
      { es: "¿Tienes hambre?", en: "Are you hungry?" },
      { es: "No tenemos tiempo", en: "We don't have time" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 203,
    category: "essential",
    spanish: "hacer",
    english: "to do/make",
    context: "Essential verb - #25 most common word",
    examples: [
      { es: "¿Qué vas a hacer este fin de semana?", en: "What are you going to do this weekend?" },
      { es: "Voy a hacer tacos para la cena", en: "I'm going to make tacos for dinner" },
      { es: "Hace mucho calor", en: "It's very hot" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 204,
    category: "essential",
    spanish: "ir",
    english: "to go",
    context: "Essential for movement and future tense",
    examples: [
      { es: "Voy al mercado", en: "I'm going to the market" },
      { es: "¿Adónde vas?", en: "Where are you going?" },
      { es: "Vamos a comer", en: "We're going to eat" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  
  // ========== DAILY CONVERSATION ==========
  {
    id: 300,
    category: "daily",
    spanish: "¿Cómo te llamas?",
    english: "What's your name?",
    context: "Basic introduction",
    examples: [
      { es: "Hola, ¿cómo te llamas?", en: "Hi, what's your name?" },
      { es: "¿Cómo te llamas tú?", en: "What's your name?" },
      { es: "Me llamo Buse, ¿y tú?", en: "My name is Buse, and you?" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 301,
    category: "daily",
    spanish: "Mucho gusto",
    english: "Nice to meet you",
    context: "Standard greeting response",
    examples: [
      { es: "Mucho gusto, soy Omar", en: "Nice to meet you, I'm Omar" },
      { es: "Mucho gusto en conocerte", en: "Nice to meet you" },
      { es: "El gusto es mío", en: "The pleasure is mine" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 302,
    category: "daily",
    spanish: "¿Cómo estás?",
    english: "How are you?",
    context: "Standard greeting question",
    examples: [
      { es: "Hola, ¿cómo estás?", en: "Hi, how are you?" },
      { es: "¿Cómo estás hoy?", en: "How are you today?" },
      { es: "Estoy bien, ¿y tú?", en: "I'm fine, and you?" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  
  // ========== FOOD & RESTAURANT ==========
  {
    id: 400,
    category: "food",
    spanish: "¿Qué me recomienda?",
    english: "What do you recommend?",
    context: "Asking for recommendations",
    examples: [
      { es: "¿Qué me recomienda del menú?", en: "What do you recommend from the menu?" },
      { es: "No sé qué pedir, ¿qué recomienda?", en: "I don't know what to order, what do you recommend?" },
      { es: "¿Cuál es el plato más popular?", en: "What's the most popular dish?" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 401,
    category: "food",
    spanish: "Soy vegetariana",
    english: "I'm vegetarian",
    context: "Dietary restriction",
    examples: [
      { es: "Soy vegetariana, ¿tienen opciones?", en: "I'm vegetarian, do you have options?" },
      { es: "No como carne, soy vegetariana", en: "I don't eat meat, I'm vegetarian" },
      { es: "¿Tienen platos vegetarianos?", en: "Do you have vegetarian dishes?" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 402,
    category: "food",
    spanish: "Sin picante, por favor",
    english: "Not spicy, please",
    context: "Requesting mild food",
    examples: [
      { es: "Sin picante, por favor, no aguanto el chile", en: "Not spicy, please, I can't handle chili" },
      { es: "¿Puede hacerlo sin picante?", en: "Can you make it without spice?" },
      { es: "Prefiero sin picante", en: "I prefer without spice" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  
  // ========== EMERGENCY ==========
  {
    id: 500,
    category: "emergency",
    spanish: "Llame a la policía",
    english: "Call the police",
    context: "Emergency situation",
    examples: [
      { es: "¡Llame a la policía rápido!", en: "Call the police quickly!" },
      { es: "Necesito que llame a la policía", en: "I need you to call the police" },
      { es: "Por favor, llame a la policía", en: "Please, call the police" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 501,
    category: "emergency",
    spanish: "¿Dónde está el hospital?",
    english: "Where is the hospital?",
    context: "Medical emergency",
    examples: [
      { es: "¿Dónde está el hospital más cercano?", en: "Where is the nearest hospital?" },
      { es: "Necesito ir al hospital", en: "I need to go to the hospital" },
      { es: "¿Me puede llevar al hospital?", en: "Can you take me to the hospital?" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  
  // ========== TRANSPORT ==========
  {
    id: 600,
    category: "transport",
    spanish: "¿Cómo llego a...?",
    english: "How do I get to...?",
    context: "Asking for directions",
    examples: [
      { es: "¿Cómo llego al centro?", en: "How do I get downtown?" },
      { es: "¿Cómo llego al aeropuerto?", en: "How do I get to the airport?" },
      { es: "Disculpe, ¿cómo llego a Palermo?", en: "Excuse me, how do I get to Palermo?" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 601,
    category: "transport",
    spanish: "¿Cuánto cuesta el pasaje?",
    english: "How much is the ticket?",
    context: "Public transport",
    examples: [
      { es: "¿Cuánto cuesta el pasaje de metro?", en: "How much is the metro ticket?" },
      { es: "¿Cuánto sale el boleto?", en: "How much is the ticket?" },
      { es: "¿Dónde compro el pasaje?", en: "Where do I buy the ticket?" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  
  // ========== SOCIAL ==========
  {
    id: 700,
    category: "social",
    spanish: "¿Quieres tomar algo?",
    english: "Do you want to have a drink?",
    context: "Social invitation",
    examples: [
      { es: "¿Quieres tomar algo esta noche?", en: "Do you want to have a drink tonight?" },
      { es: "Vamos a tomar algo, ¿te parece?", en: "Let's have a drink, what do you think?" },
      { es: "¿Tomamos un café?", en: "Shall we have a coffee?" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 701,
    category: "social",
    spanish: "¿Tienes Instagram?",
    english: "Do you have Instagram?",
    context: "Modern social connection",
    examples: [
      { es: "¿Tienes Instagram? Te sigo", en: "Do you have Instagram? I'll follow you" },
      { es: "Agrégame en Instagram", en: "Add me on Instagram" },
      { es: "Mi Instagram es @buse", en: "My Instagram is @buse" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  
  // Additional essential verbs (continuing from 204)
  { id: 205, category: "essential", spanish: "decir", english: "to say/tell", context: "Essential communication verb", examples: [{ es: "¿Qué dijiste?", en: "What did you say?" }, { es: "Dime la verdad", en: "Tell me the truth" }, { es: "No digas nada", en: "Don't say anything" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 206, category: "essential", spanish: "ver", english: "to see", context: "Essential perception verb", examples: [{ es: "No veo nada", en: "I can't see anything" }, { es: "¿Viste la película?", en: "Did you see the movie?" }, { es: "Nos vemos mañana", en: "See you tomorrow" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 207, category: "essential", spanish: "venir", english: "to come", context: "Essential movement verb", examples: [{ es: "Ven aquí", en: "Come here" }, { es: "¿Vienes a la fiesta?", en: "Are you coming to the party?" }, { es: "Vengo de México", en: "I come from Mexico" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 208, category: "essential", spanish: "poder", english: "to be able to/can", context: "Essential modal verb", examples: [{ es: "¿Puedes ayudarme?", en: "Can you help me?" }, { es: "No puedo ir", en: "I can't go" }, { es: "Puedo hacerlo", en: "I can do it" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 209, category: "essential", spanish: "querer", english: "to want", context: "Essential desire verb", examples: [{ es: "Quiero comer", en: "I want to eat" }, { es: "¿Qué quieres?", en: "What do you want?" }, { es: "Quiero viajar", en: "I want to travel" }], difficulty: 0, lastSeen: null, interval: 1 },
  
  // More survival phrases
  { id: 36, category: "survival", spanish: "Disculpe", english: "Excuse me", context: "Polite way to get attention", examples: [{ es: "Disculpe, ¿sabe dónde está...?", en: "Excuse me, do you know where... is?" }, { es: "Disculpe la molestia", en: "Sorry for the trouble" }, { es: "Disculpe, perdón", en: "Excuse me, sorry" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 37, category: "survival", spanish: "No entiendo", english: "I don't understand", context: "Essential when confused", examples: [{ es: "No entiendo, ¿puede repetir?", en: "I don't understand, can you repeat?" }, { es: "Perdón, no entiendo español", en: "Sorry, I don't understand Spanish" }, { es: "No entiendo bien", en: "I don't understand well" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 38, category: "survival", spanish: "Hablo un poco de español", english: "I speak a little Spanish", context: "Setting expectations", examples: [{ es: "Hablo un poco de español, pero no mucho", en: "I speak a little Spanish, but not much" }, { es: "Solo hablo un poco", en: "I only speak a little" }, { es: "Estoy aprendiendo español", en: "I'm learning Spanish" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 39, category: "survival", spanish: "¿Habla inglés?", english: "Do you speak English?", context: "Emergency communication", examples: [{ es: "¿Habla inglés, por favor?", en: "Do you speak English, please?" }, { es: "¿Alguien habla inglés aquí?", en: "Does anyone speak English here?" }, { es: "No hablo español, ¿habla inglés?", en: "I don't speak Spanish, do you speak English?" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 40, category: "survival", spanish: "¿Está incluido el servicio?", english: "Is service included?", context: "Restaurant billing", examples: [{ es: "¿Está incluido el servicio en la cuenta?", en: "Is service included in the bill?" }, { es: "¿Debo dejar propina?", en: "Should I leave a tip?" }, { es: "¿Cuánto es la propina usual?", en: "How much is the usual tip?" }], difficulty: 0, lastSeen: null, interval: 1 },
  
  // More Mexican street slang
  { id: 55, category: "street", spanish: "Lana", english: "Money", context: "Mexican slang for dinero", examples: [{ es: "No tengo lana", en: "I don't have money" }, { es: "¿Tienes lana para el taxi?", en: "Do you have money for the taxi?" }, { es: "Me quedé sin lana", en: "I ran out of money" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 56, category: "street", spanish: "Chavo/Chava", english: "Guy/Girl", context: "Mexican slang for guy/girl", examples: [{ es: "Ese chavo es muy simpático", en: "That guy is very nice" }, { es: "Conocí una chava genial", en: "I met a great girl" }, { es: "Los chavos están en la plaza", en: "The guys are in the square" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 57, category: "street", spanish: "Güey", english: "Dude/Guy", context: "Mexican slang for dude (very common)", examples: [{ es: "¡Oye, güey! ¿Qué haces?", en: "Hey dude! What are you doing?" }, { es: "Eres un güey", en: "You're a dude/idiot (context dependent)" }, { es: "Güey, mira esto", en: "Dude, look at this" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 58, category: "street", spanish: "Está chido", english: "That's cool/awesome", context: "Mexican way to say cool", examples: [{ es: "Esa fiesta estuvo chida", en: "That party was cool" }, { es: "¡Qué chido!", en: "How cool!" }, { es: "Está bien chido", en: "It's really cool" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 59, category: "transport", spanish: "Metro", english: "Subway", context: "Mexican word for subway", examples: [{ es: "Voy en metro", en: "I'm going by subway" }, { es: "¿Dónde está la estación de metro?", en: "Where is the subway station?" }, { es: "El metro es más rápido", en: "The subway is faster" }], difficulty: 0, lastSeen: null, interval: 1 },
  
  // More food phrases
  { id: 403, category: "food", spanish: "Tengo hambre", english: "I'm hungry", context: "Basic need", examples: [{ es: "Tengo mucha hambre", en: "I'm very hungry" }, { es: "¿Tienes hambre?", en: "Are you hungry?" }, { es: "Tengo hambre, vamos a comer", en: "I'm hungry, let's eat" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 404, category: "food", spanish: "Tengo sed", english: "I'm thirsty", context: "Basic need", examples: [{ es: "Tengo mucha sed", en: "I'm very thirsty" }, { es: "¿Tienes sed?", en: "Are you thirsty?" }, { es: "Quiero agua, tengo sed", en: "I want water, I'm thirsty" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 405, category: "food", spanish: "La especialidad de la casa", english: "House specialty", context: "Restaurant recommendation", examples: [{ es: "¿Cuál es la especialidad de la casa?", en: "What's the house specialty?" }, { es: "Quiero probar la especialidad", en: "I want to try the specialty" }, { es: "La especialidad está deliciosa", en: "The specialty is delicious" }], difficulty: 0, lastSeen: null, interval: 1 },
  
  // More daily conversation
  { id: 303, category: "daily", spanish: "Por favor", english: "Please", context: "Essential politeness", examples: [{ es: "Por favor, ayúdame", en: "Please, help me" }, { es: "Dame agua, por favor", en: "Give me water, please" }, { es: "¿Puedes, por favor?", en: "Can you, please?" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 304, category: "daily", spanish: "Gracias", english: "Thank you", context: "Essential gratitude", examples: [{ es: "Muchas gracias", en: "Thank you very much" }, { es: "Gracias por todo", en: "Thanks for everything" }, { es: "De nada", en: "You're welcome" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 305, category: "daily", spanish: "Lo siento", english: "I'm sorry", context: "Apology", examples: [{ es: "Lo siento mucho", en: "I'm very sorry" }, { es: "Lo siento por la tardanza", en: "Sorry for being late" }, { es: "No te preocupes", en: "Don't worry" }], difficulty: 0, lastSeen: null, interval: 1 },
  
  // More emergency
  { id: 502, category: "emergency", spanish: "¡Auxilio!", english: "Help!", context: "Crying for help", examples: [{ es: "¡Auxilio! ¡Necesito ayuda!", en: "Help! I need help!" }, { es: "Gritó auxilio", en: "He screamed for help" }, { es: "¡Auxilio, por favor!", en: "Help, please!" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 503, category: "emergency", spanish: "Me perdí", english: "I'm lost", context: "Navigation emergency", examples: [{ es: "Me perdí, ¿me puede ayudar?", en: "I'm lost, can you help me?" }, { es: "Estoy perdida", en: "I'm lost" }, { es: "No sé dónde estoy", en: "I don't know where I am" }], difficulty: 0, lastSeen: null, interval: 1 },
  
  // More transport
  { id: 602, category: "transport", spanish: "Taxi", english: "Taxi", context: "Transportation", examples: [{ es: "Necesito un taxi", en: "I need a taxi" }, { es: "¿Dónde puedo tomar un taxi?", en: "Where can I get a taxi?" }, { es: "Llame un taxi, por favor", en: "Call a taxi, please" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 603, category: "transport", spanish: "¿A qué hora sale?", english: "What time does it leave?", context: "Schedule question", examples: [{ es: "¿A qué hora sale el próximo bus?", en: "What time does the next bus leave?" }, { es: "¿A qué hora sale el vuelo?", en: "What time does the flight leave?" }, { es: "Necesito saber la hora de salida", en: "I need to know the departure time" }], difficulty: 0, lastSeen: null, interval: 1 },
  
  // More social
  { id: 702, category: "social", spanish: "¿Quieres salir?", english: "Do you want to go out?", context: "Social invitation", examples: [{ es: "¿Quieres salir esta noche?", en: "Do you want to go out tonight?" }, { es: "Vamos a salir, ¿vienes?", en: "We're going out, are you coming?" }, { es: "Salgamos a pasear", en: "Let's go for a walk" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 703, category: "social", spanish: "¿Te parece bien?", english: "Does that seem okay to you?", context: "Asking for approval", examples: [{ es: "¿Te parece bien si vamos a comer?", en: "Is it okay if we go eat?" }, { es: "¿Qué te parece?", en: "What do you think?" }, { es: "A mí me parece bien", en: "It seems fine to me" }], difficulty: 0, lastSeen: null, interval: 1 },
  
  // Additional essential verbs (210-219)
  { id: 210, category: "essential", spanish: "saber", english: "to know (facts)", context: "Essential knowledge verb", examples: [{ es: "¿Sabes dónde está?", en: "Do you know where it is?" }, { es: "No sé nada", en: "I don't know anything" }, { es: "Sé que tienes razón", en: "I know you're right" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 211, category: "essential", spanish: "dar", english: "to give", context: "Essential transfer verb", examples: [{ es: "Dame agua", en: "Give me water" }, { es: "¿Me das tu número?", en: "Can you give me your number?" }, { es: "Le di un regalo", en: "I gave him a gift" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 212, category: "essential", spanish: "hablar", english: "to speak", context: "Communication verb", examples: [{ es: "Hablo español", en: "I speak Spanish" }, { es: "¿Hablas inglés?", en: "Do you speak English?" }, { es: "Vamos a hablar", en: "Let's talk" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 213, category: "essential", spanish: "salir", english: "to go out/leave", context: "Movement verb", examples: [{ es: "Voy a salir", en: "I'm going out" }, { es: "¿Salimos esta noche?", en: "Are we going out tonight?" }, { es: "Salió de la casa", en: "He left the house" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 214, category: "essential", spanish: "llegar", english: "to arrive", context: "Essential movement verb", examples: [{ es: "¿A qué hora llegas?", en: "What time do you arrive?" }, { es: "Llegué tarde", en: "I arrived late" }, { es: "Cuando llegues, avísame", en: "When you arrive, let me know" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 215, category: "essential", spanish: "tomar", english: "to take/drink", context: "Versatile verb", examples: [{ es: "Tomé un taxi", en: "I took a taxi" }, { es: "¿Tomamos algo?", en: "Shall we have a drink?" }, { es: "Toma el libro", en: "Take the book" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 216, category: "essential", spanish: "quedar", english: "to stay/remain/meet", context: "Essential verb with multiple meanings", examples: [{ es: "¿Quedamos a las 8?", en: "Shall we meet at 8?" }, { es: "Me quedé en casa", en: "I stayed home" }, { es: "Quedó poco dinero", en: "Little money remained" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 217, category: "essential", spanish: "pasar", english: "to pass/happen", context: "Common verb", examples: [{ es: "¿Qué pasó?", en: "What happened?" }, { es: "Pasa por aquí", en: "Come through here" }, { es: "Pasé un buen rato", en: "I had a good time" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 218, category: "essential", spanish: "deber", english: "should/must", context: "Modal verb for obligation", examples: [{ es: "Debo irme", en: "I must go" }, { es: "Deberías estudiar", en: "You should study" }, { es: "Debo dinero", en: "I owe money" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 219, category: "essential", spanish: "poner", english: "to put/place", context: "Essential placement verb", examples: [{ es: "Ponlo aquí", en: "Put it here" }, { es: "Me puse contenta", en: "I became happy" }, { es: "¿Dónde pongo esto?", en: "Where do I put this?" }], difficulty: 0, lastSeen: null, interval: 1 },
  
  // More survival phrases (41-44)
  { id: 41, category: "survival", spanish: "Aceptan tarjeta", english: "Do you accept card?", context: "Payment method", examples: [{ es: "¿Aceptan tarjeta de crédito?", en: "Do you accept credit card?" }, { es: "Solo aceptamos efectivo", en: "We only accept cash" }, { es: "¿Aceptan pagos con tarjeta?", en: "Do you accept card payments?" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 42, category: "survival", spanish: "¿Tiene WiFi?", english: "Do you have WiFi?", context: "Modern necessity", examples: [{ es: "¿Tiene WiFi gratis?", en: "Do you have free WiFi?" }, { es: "¿Cuál es la contraseña del WiFi?", en: "What's the WiFi password?" }, { es: "Necesito WiFi", en: "I need WiFi" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 43, category: "survival", spanish: "Perdí mi pasaporte", english: "I lost my passport", context: "Emergency situation", examples: [{ es: "Ayuda, perdí mi pasaporte", en: "Help, I lost my passport" }, { es: "¿Dónde puedo reportar un pasaporte perdido?", en: "Where can I report a lost passport?" }, { es: "No encuentro mi pasaporte", en: "I can't find my passport" }], difficulty: 0, lastSeen: null, interval: 1 },
  
  // More food words (60-61)
  { id: 60, category: "food", spanish: "Aguacate", english: "Avocado", context: "Mexican word for avocado", examples: [{ es: "Quiero aguacate en la ensalada", en: "I want avocado in the salad" }, { es: "¿Hay aguacate?", en: "Is there avocado?" }, { es: "El aguacate está caro", en: "Avocado is expensive" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 61, category: "food", spanish: "Durazno", english: "Peach", context: "Mexican word for peach", examples: [{ es: "Quiero un durazno", en: "I want a peach" }, { es: "Los duraznos están dulces", en: "The peaches are sweet" }, { es: "Durazno con crema", en: "Peach with cream" }], difficulty: 0, lastSeen: null, interval: 1 },
  
  // More food (406-407)
  { id: 406, category: "food", spanish: "Agua", english: "Water", context: "Basic drink", examples: [{ es: "Quiero agua, por favor", en: "I want water, please" }, { es: "Un vaso de agua", en: "A glass of water" }, { es: "Agua sin gas", en: "Still water" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 407, category: "food", spanish: "Pan", english: "Bread", context: "Staple food", examples: [{ es: "Dame pan", en: "Give me bread" }, { es: "¿Quieres pan?", en: "Do you want bread?" }, { es: "Pan integral", en: "Whole wheat bread" }], difficulty: 0, lastSeen: null, interval: 1 },
  
  // More street slang (102-103)
  { id: 102, category: "street", spanish: "Está cañón", english: "That's tough/difficult", context: "Expressing difficulty", examples: [{ es: "El examen estuvo cañón", en: "The exam was tough" }, { es: "Está cañón conseguir trabajo", en: "It's tough to find work" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 103, category: "street", spanish: "Chido", english: "Cool/awesome", context: "Mexican slang for cool", examples: [{ es: "¡Qué chido!", en: "How cool!" }, { es: "Está bien chido", en: "It's really cool" }, { es: "Qué chido coche", en: "What a cool car" }], difficulty: 0, lastSeen: null, interval: 1 },
  
  // More transport (604)
  { id: 604, category: "transport", spanish: "Estación", english: "Station", context: "Transport location", examples: [{ es: "¿Dónde está la estación?", en: "Where is the station?" }, { es: "Voy a la estación", en: "I'm going to the station" }, { es: "Estación de metro", en: "Metro station" }], difficulty: 0, lastSeen: null, interval: 1 },
  
  // More social (704)
  { id: 704, category: "social", spanish: "Encantado/Encantada", english: "Nice to meet you (pleased)", context: "Polite greeting", examples: [{ es: "Encantada de conocerte", en: "Nice to meet you" }, { es: "El gusto es mío", en: "The pleasure is mine" }], difficulty: 0, lastSeen: null, interval: 1 },
  
  // Time expressions (850-852)
  { id: 850, category: "daily", spanish: "¿Qué hora es?", english: "What time is it?", context: "Time inquiry", examples: [{ es: "Disculpe, ¿qué hora es?", en: "Excuse me, what time is it?" }, { es: "¿Me puede decir la hora?", en: "Can you tell me the time?" }, { es: "Son las tres", en: "It's three o'clock" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 851, category: "daily", spanish: "Mañana", english: "Tomorrow", context: "Time reference", examples: [{ es: "Nos vemos mañana", en: "See you tomorrow" }, { es: "Mañana voy al mercado", en: "Tomorrow I'm going to the market" }, { es: "Hasta mañana", en: "See you tomorrow" }], difficulty: 0, lastSeen: null, interval: 1 },
  { id: 852, category: "daily", spanish: "Hoy", english: "Today", context: "Time reference", examples: [{ es: "Hoy hace buen tiempo", en: "Today the weather is nice" }, { es: "¿Qué haces hoy?", en: "What are you doing today?" }, { es: "Hoy es lunes", en: "Today is Monday" }], difficulty: 0, lastSeen: null, interval: 1 },
  
  // ========== CRITICAL VEGETARIAN PHRASES FOR BUSE ==========
  {
    id: 900,
    category: "vegetarian-essential",
    spanish: "Soy vegetariana",
    english: "I am vegetarian (female)",
    context: "MOST IMPORTANT phrase for Buse - use this everywhere!",
    examples: [
      { es: "Hola, soy vegetariana. ¿Tienen opciones sin carne?", en: "Hi, I'm vegetarian. Do you have options without meat?" },
      { es: "Disculpe, soy vegetariana estricta", en: "Excuse me, I'm a strict vegetarian" },
      { es: "Soy vegetariana, no como ningún tipo de carne", en: "I'm vegetarian, I don't eat any type of meat" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 901,
    category: "vegetarian-essential",
    spanish: "No como carne, ni pollo, ni pescado",
    english: "I don't eat meat, chicken, or fish",
    context: "⚠️ CRITICAL: In Latin America, 'carne' often means only red meat!",
    examples: [
      { es: "No como carne, ni pollo, ni pescado, ni mariscos", en: "I don't eat meat, chicken, fish, or seafood" },
      { es: "Por favor, sin carne, sin pollo, sin pescado", en: "Please, no meat, no chicken, no fish" },
      { es: "¿Esto tiene carne, pollo o pescado?", en: "Does this have meat, chicken, or fish?" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 902,
    category: "vegetarian-essential",
    spanish: "¿Esto tiene carne?",
    english: "Does this have meat?",
    context: "Always ask! Hidden meat is common in Latin America",
    examples: [
      { es: "¿La sopa tiene carne o caldo de pollo?", en: "Does the soup have meat or chicken broth?" },
      { es: "¿Los frijoles tienen tocino o manteca?", en: "Do the beans have bacon or lard?" },
      { es: "¿La ensalada tiene jamón o atún?", en: "Does the salad have ham or tuna?" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 903,
    category: "vegetarian-essential",
    spanish: "Sin carne, por favor",
    english: "Without meat, please",
    context: "Use this when modifying dishes",
    examples: [
      { es: "¿Puedo tener este plato sin carne, por favor?", en: "Can I have this dish without meat, please?" },
      { es: "Una pizza sin jamón, por favor", en: "A pizza without ham, please" },
      { es: "Los tacos sin carne, solo con verduras", en: "The tacos without meat, only with vegetables" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 904,
    category: "vegetarian-essential",
    spanish: "¿Tienen opciones vegetarianas?",
    english: "Do you have vegetarian options?",
    context: "First question to ask at any restaurant",
    examples: [
      { es: "Buenas tardes, ¿tienen opciones vegetarianas en el menú?", en: "Good afternoon, do you have vegetarian options on the menu?" },
      { es: "¿Qué platos vegetarianos me recomienda?", en: "What vegetarian dishes do you recommend?" },
      { es: "¿Cuáles son sus opciones sin carne?", en: "What are your options without meat?" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  
  // ========== HIDDEN MEAT WARNINGS ==========
  {
    id: 910,
    category: "vegetarian-warning",
    spanish: "¿El caldo es de verduras?",
    english: "Is the broth vegetable-based?",
    context: "⚠️ Many soups use chicken/beef broth even if no visible meat",
    examples: [
      { es: "¿La sopa de verduras usa caldo de pollo?", en: "Does the vegetable soup use chicken broth?" },
      { es: "¿Puedo tener la sopa con caldo de verduras solamente?", en: "Can I have the soup with vegetable broth only?" },
      { es: "Sin caldo de carne ni pollo, por favor", en: "No meat or chicken broth, please" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 911,
    category: "vegetarian-warning",
    spanish: "¿Los frijoles tienen manteca?",
    english: "Do the beans have lard?",
    context: "⚠️ Mexican refried beans often contain lard (manteca)",
    examples: [
      { es: "¿Los frijoles refritos son vegetarianos?", en: "Are the refried beans vegetarian?" },
      { es: "¿Usan aceite vegetal o manteca de cerdo?", en: "Do you use vegetable oil or pork lard?" },
      { es: "Frijoles de la olla sin manteca, por favor", en: "Pot beans without lard, please" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  
  // ========== VEGETARIAN FOOD VOCABULARY ==========
  {
    id: 920,
    category: "vegetarian-foods",
    spanish: "verduras",
    english: "vegetables",
    context: "General term for vegetables",
    examples: [
      { es: "Me encantan las verduras asadas", en: "I love roasted vegetables" },
      { es: "¿Qué verduras tienen hoy?", en: "What vegetables do you have today?" },
      { es: "Solo como verduras, frutas y granos", en: "I only eat vegetables, fruits and grains" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 921,
    category: "vegetarian-foods",
    spanish: "ensalada",
    english: "salad",
    context: "Common vegetarian option (but always check for meat!)",
    examples: [
      { es: "Una ensalada grande sin pollo ni atún", en: "A large salad without chicken or tuna" },
      { es: "¿La ensalada César tiene anchoas?", en: "Does the Caesar salad have anchovies?" },
      { es: "Ensalada mixta con aceite y vinagre", en: "Mixed salad with oil and vinegar" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  
  // ========== MEXICAN VEGETARIAN SPECIFIC ==========
  {
    id: 940,
    category: "vegetarian-mexican",
    spanish: "sin carnitas",
    english: "without pork",
    context: "Common hidden meat in Mexican food",
    examples: [
      { es: "Tacos de frijoles sin carnitas", en: "Bean tacos without pork" },
      { es: "¿Los tamales son sin manteca?", en: "Are the tamales without lard?" },
      { es: "Quesadillas de flor de calabaza sin chicharrón", en: "Squash blossom quesadillas without pork rinds" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 941,
    category: "vegetarian-mexican",
    spanish: "nopales",
    english: "cactus paddles",
    context: "Great vegetarian option in Mexico",
    examples: [
      { es: "¿Tienen tacos de nopales?", en: "Do you have cactus tacos?" },
      { es: "Nopales asados con queso", en: "Grilled cactus with cheese" },
      { es: "Ensalada de nopales sin jamón", en: "Cactus salad without ham" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 942,
    category: "vegetarian-mexican",
    spanish: "quesadillas de queso",
    english: "cheese quesadillas",
    context: "Safe vegetarian option in Mexico",
    examples: [
      { es: "Dos quesadillas de queso, por favor", en: "Two cheese quesadillas, please" },
      { es: "¿Las quesadillas son solo de queso?", en: "Are the quesadillas only cheese?" },
      { es: "Quesadillas de queso sin carne", en: "Cheese quesadillas without meat" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  {
    id: 943,
    category: "vegetarian-mexican",
    spanish: "tacos de nopales",
    english: "cactus tacos",
    context: "Traditional Mexican vegetarian dish",
    examples: [
      { es: "Quiero tres tacos de nopales", en: "I want three cactus tacos" },
      { es: "Tacos de nopales con cebolla y cilantro", en: "Cactus tacos with onion and cilantro" },
      { es: "¿Los tacos de nopales tienen queso?", en: "Do the cactus tacos have cheese?" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  
  // ========== EMERGENCY VEGETARIAN PHRASES ==========
  {
    id: 950,
    category: "vegetarian-emergency",
    spanish: "Esto tiene carne, no puedo comerlo",
    english: "This has meat, I can't eat it",
    context: "When they bring you something with meat by mistake",
    examples: [
      { es: "Disculpe, pedí sin carne. Soy vegetariana", en: "Excuse me, I ordered without meat. I'm vegetarian" },
      { es: "Lo siento, pero esto tiene pollo. No como pollo", en: "I'm sorry, but this has chicken. I don't eat chicken" },
      { es: "¿Me puede cambiar este plato? Tiene jamón", en: "Can you change this dish? It has ham" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  },
  
  // ========== POSITIVE VEGETARIAN PHRASES ==========
  {
    id: 960,
    category: "vegetarian-positive",
    spanish: "¡Perfecto! Está delicioso",
    english: "Perfect! It's delicious",
    context: "When they get your vegetarian order right",
    examples: [
      { es: "¡Qué rico! Me encanta este plato vegetariano", en: "How delicious! I love this vegetarian dish" },
      { es: "Gracias por las opciones vegetarianas", en: "Thank you for the vegetarian options" },
      { es: "Este restaurante tiene excelente comida vegetariana", en: "This restaurant has excellent vegetarian food" }
    ],
    difficulty: 0,
    lastSeen: null,
    interval: 1
  }
];




---

